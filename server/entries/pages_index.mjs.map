{"version":3,"file":"pages_index.mjs","sources":["../../../components/Button/Button.styled.ts","../../../components/Button/Button.tsx","../../../components/Icon/Icon.styled.ts","../../../components/Icon/Icon.tsx","../../../components/Link/Link.tsx","../../../pages/index/Styled.ts","../../../pages/index/+Page.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ButtonStyled = styled.button`\n  border-radius: 8px;\n  border: 1px solid transparent;\n  padding: 0.6em 1.2em;\n  font-size: 1em;\n  font-weight: 500;\n  font-family: inherit;\n  background-color: #1a1a1a;\n  cursor: pointer;\n  transition: border-color 0.25s;\n  &:hover {\n    border-color: #646cff;\n  }\n  &:focus,\n  &:focus-visible {\n    outline: 4px auto -webkit-focus-ring-color;\n  }\n\n  @media (prefers-color-scheme: light) {\n    background-color: #f9f9f9;\n}\n`;\n","import type { FC } from 'react';\nimport { ButtonStyled } from './Button.styled';\n\ninterface ButtonProps {\n  onClick: () => void;\n  label: string;\n}\n\nexport const Button: FC<ButtonProps> = ({ onClick, label }) => (\n  <ButtonStyled type='button' onClick={onClick}>\n    {label}\n  </ButtonStyled>\n);\n","import { css, keyframes } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nconst spin = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\ninterface IconPropsType {\n  primary?: boolean;\n  animated?: boolean;\n}\n\nexport const IconStyled = styled.svg<IconPropsType>`\n  height: 6em;\n  width: 6em;\n  padding: 1.5em;\n  will-change: filter;\n  transition: filter 300ms;\n  &:hover {\n    filter: ${(props: IconPropsType): string => (props.primary ? 'drop-shadow(0 0 2em #61dafbaa)' : 'drop-shadow(0 0 2em #646cffaa)')};\n  }\n\n  ${(props: IconPropsType): ReturnType<typeof css> | null =>\n    props.animated\n      ? css`\n          @media (prefers-reduced-motion: no-preference) {\n            animation: ${spin} infinite 20s linear;\n          }\n        `\n      : null}\n`;\n","import type { FC } from 'react';\nimport { IconStyled } from './Icon.styled.ts';\n\ninterface IconPropsType {\n  name: string;\n  animated?: boolean;\n  primary?: boolean;\n}\n\nexport const Icon: FC<IconPropsType> = ({ name, animated, primary }) => (\n  <IconStyled\n    animated={animated}\n    primary={primary}\n    xmlns='http://www.w3.org/2000/svg'\n    xmlnsXlink='http://www.w3.org/1999/xlink'\n    aria-label={`Logo ${name}`}\n  >\n    <use xlinkHref={`spritemap.svg#${name}`} />\n  </IconStyled>\n);\n","import type { FC, ReactNode } from 'react';\n\ninterface LinkProps {\n  href: string;\n  children: ReactNode;\n}\n\nexport const Link: FC<LinkProps> = ({ href, children }) => (\n  <a href={href} target='_blank' rel='noreferrer'>\n    {children}\n  </a>\n);\n","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nexport const TitleStyled = styled.h1`\n  font-size: 3.2em;\n  line-height: 1.1;\n`;\n\nexport const CardStyled = styled.div`\n  padding: 2em;\n`;\n\nexport const TextStyled = styled.p`\n  color: #888;\n`;\n\nexport const GlobalStyles = css`\n:root {\n  font-family: Roboto, sans-serif;\n  line-height: 1.5;\n  font-weight: 400;\n  color-scheme: light dark;\n  color: rgba(255, 255, 255, 0.87);\n  background-color: #242424;\n  font-synthesis: none;\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  \n  @media (prefers-color-scheme: light) {\n    color: #213547;\n    background-color: #ffffff;\n  }\n}\n\n#root {\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 2rem;\n  text-align: center;\n}\n\nbody {\n  margin: 0;\n  display: flex;\n  place-items: center;\n  min-width: 320px;\n  min-height: 100vh;\n  }\n`;\n","import { Global } from '@emotion/react';\nimport { type FC, useState } from 'react';\n// import picture from '../../assets/icons/vite.svg?w=100;300;500&as=picture';\nimport { Button } from '../../components/Button/Button.jsx';\nimport { Icon } from '../../components/Icon/Icon.jsx';\nimport { Link } from '../../components/Link/Link.jsx';\n// import { Picture } from '../../components/Picture/Picture.jsx';\nimport { CardStyled, GlobalStyles, TextStyled, TitleStyled } from './Styled.js';\n\nexport const Page: FC = () => {\n  const [count, setCount] = useState(0);\n\n  const handleClick = (): void => {\n    setCount(prev => prev + 1);\n  };\n\n  return (\n    <>\n      <Global styles={GlobalStyles} />\n      <div>\n        <Link href='https://vike.dev/'>\n          <Icon name='vike' primary={true} />\n        </Link>\n        <Link href='https://react.dev'>\n          <Icon name='react' animated={true} />\n        </Link>\n        <Link href='https://typescriptlang.org/'>\n          <Icon name='ts' />\n        </Link>\n      </div>\n      <TitleStyled>Vike + React + TS</TitleStyled>\n      <CardStyled>\n        <Button label={`count is ${count}`} onClick={handleClick} />\n      </CardStyled>\n      <TextStyled>Click on logos to learn more</TextStyled>\n      {/* <Picture picture={picture} /> */}\n    </>\n  );\n};\n"],"names":["ButtonStyled","styled","Button","onClick","label","type","spin","keyframes","IconStyled","props","primary","animated","css","Icon","name","xmlns","xmlnsXlink","aria-label","use","xlinkHref","Link","href","children","a","target","rel","TitleStyled","CardStyled","TextStyled","GlobalStyles","Page","count","setCount","useState","handleClick","prev","_Fragment","Global","styles","div"],"mappings":";;;;;;;AAEaA,MAAAA,sCAAeC,UAAAA;AAAAA;AAqB1B,CAAA,EAAA,4VAAA;ACfK,MAAMC,SAA0B,CAAC,EAAEC,SAASC,MAAO,0BACvDJ,cAAAA;AAAAA,EAAaK,MAAK;AAAA,EAASF;AAAAA,EACzBC,UAAAA;AAEH,CAAA;ACTF,MAAME,iCAAOC,4DAAAA;AAcAC,MAAAA,oCAAaP,OAAAA;AAAAA;AAOZ,CAAA,EAAA,iGAAA,CAACQ,UAAkCA,MAAMC,UAAU,mCAAmC,kCAAA,MAGhG,CAACD,UACDA,MAAME,WACFC;AAAAA;AAAAA,yBAEiBN,IAAK;AAAA;AAAA,YAGtB,IACN;AC1BWO,MAAAA,OAA0B,CAAC,EAAEC,MAAMH,UAAUD,QAAS,0BAChEF,YAAAA;AAAAA,EACCG;AAAAA,EACAD;AAAAA,EACAK,OAAM;AAAA,EACNC,YAAW;AAAA,EACXC,cAAY,QAAQH,IAAM;AAAA,EAE1B,8BAACI,OAAAA;AAAAA,IAAIC,WAAW,iBAAiBL,IAAM;AAAA;AAEzC,CAAA;ACZK,MAAMM,OAAsB,CAAC,EAAEC,MAAMC,SAAU,0BACnDC,KAAAA;AAAAA,EAAEF;AAAAA,EAAYG,QAAO;AAAA,EAASC,KAAI;AAAA,EAChCH;AAEH,CAAA;ACRWI,MAAAA,qCAAczB,MAAAA;AAAAA;AAGzB,CAAA,EAAA,kCAAA;AAEW0B,MAAAA,oCAAa1B,OAAAA;AAAAA;AAExB,CAAA,EAAA,cAAA;AAEW2B,MAAAA,oCAAa3B,KAAAA;AAAAA;AAExB,CAAA,EAAA,aAAA;AAEW4B,MAAAA,mCAiCX,ifAAA;ACxCK,MAAMC,OAAW,MAAA;AACtB,QAAM,CAACC,OAAOC,QAAS,IAAGC,SAAS,CAAA;AAEnC,QAAMC,cAAc,MAAA;AACTC,aAAAA,CAAAA,SAAQA,OAAO,CAAA;AAAA,EAC1B;AAEA,8BACEC,UAAA;AAAA;0BACGC,QAAAA;AAAAA,QAAOC,QAAM;AAAA,UAAET;AAAAA,QAAAA;AAAAA;2BACfU,OAAAA;AAAAA;8BACEnB,MAAAA;AAAAA,YAAKC,MAAK;AAAA,YACT,8BAACR,MAAAA;AAAAA,cAAKC,MAAK;AAAA,cAAOJ,SAAS;AAAA;;8BAE5BU,MAAAA;AAAAA,YAAKC,MAAK;AAAA,YACT,8BAACR,MAAAA;AAAAA,cAAKC,MAAK;AAAA,cAAQH,UAAU;AAAA;;8BAE9BS,MAAAA;AAAAA,YAAKC,MAAK;AAAA,YACT,8BAACR,MAAAA;AAAAA,cAAKC,MAAK;AAAA;;;;0BAGdY,aAAAA;AAAAA,QAAY,UAAA;AAAA,MAAA;0BACZC,YAAAA;AAAAA,QACC,8BAACzB,QAAAA;AAAAA,UAAOE,OAAO,YAAY2B,KAAO;AAAA,UAAE5B,SAAS+B;AAAAA;;0BAE9CN,YAAAA;AAAAA,QAAW,UAAA;AAAA;;;AAIlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}