{"version":3,"mappings":"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","names":["isBrowser","state","getGlobalObject","assertClientRouting","assertNoContradiction","checkIfClientRouting","noContradiction","assertUsage","pc","assertWarning","slice","thing","from","to","sliceArray","list","listSlice","start","assert","end","el","parseUrl","url","baseServer","isUrl","urlWithoutHash","hashList","hashOriginal","hash","decodeSafe","urlWithoutHashNorSearch","searchList","searchOriginal","search","searchAll","key","val","protocol","origin","pathnameAbsoluteWithBase","getPathnameAbsoluteWithBase","pathnameOriginal","assertUrlComponents","pathname","hasBaseServer","removeBaseServer","href","createUrlFromComponents","host","hostname","port","parseHost","decodePathname","urlComponent","urlPathname","dir","parseOrigin","baseURI","_a","base","resolveUrlPathnameRelative","isUrlWithProtocol","uriWithoutProtocol","parseProtocol","rest","ret","parts","uri","SEP","before","after","SEP2","isUrlProtocol","pathnameRelative","stack","baseRestoreTrailingSlash","i","p","pathnameAbsolute","isBaseServer","baseServerNormalized","urlRecreated","isUrlPathnameRelative","isUrlRedirectTarget","isUri","c","isUrlExternal","assertUsageUrlPathnameAbsolute","errPrefix","assertUsageUrl","isRedirectTarget","errMsg","objectAssign","obj","objAddendum","isCallable","higherFirst","getValue","element1","element2","val1","val2","lowerFirst","makeFirst","makeLast","element","isArray","value","isArrayOfStrings","v","isObjectOfStrings","isObject","hasProp","prop","type","propValue","isPlainObject","compareString","str1","str2","isNotNullish","stringifyStringArray","stringList","str","assertPosixPath","path","msg","isPropertyGetter","descriptor","isPromise","getValuePrintable","escapeRegex","changeEnumerable","enumerable","objectDefineProperty","get","args","enforceTrue","assertExportValues","pageFile","exportName","explainer","forbiddenDefaultExports","assertDefaultExports","defaultExportName","filePath","determinePageIdOld","pageSuffix","pageId","assertPageFilePath","getErrorPageId","pageFilesAll","pageConfigs","errorPageConfigs","errorPageIds","unique","isErrorPageId","errorPageId","_isV1Design","isErrorPage","pageConfig","extJavaScript","extJsx","extTemplates","scriptFileExtensionList","isScriptFile","yes","ext","isPlainJavaScriptFile","yes1","yes2","isTemplateFile","fileTypes","determineFileType","suffix1","suffix2","getPageFileObject","isRelevant","isRendererFilePath","isAncestorDefaultPage","fileType","env","isDefaultFilePath","defaultPageFilePath","defaultPageDir","filePathSegment","getExportPath","fileExportPathToShowToUser","configName","exportObjectPath","prefix","suffix","getConfigDefinedAt","sentenceBegin","definedAtData","begin","getDefinedAtString","getConfigDefinedAtOptional","files","source","filePathToShowToUser","s","exportPath","types","pattern","flags","serializer","deserializer","parse","parseTransform","reviver","match","deserialize","EXPORTS_IGNORE","TOLERATE_SIDE_EXPORTS","assertPlusFileExport","fileExports","exportNames","isValid","exportNamesValid","exportNamesInvalid","e","exportDefault","exportNamed","exportInvalid","parseConfigValuesSerialized","configValuesSerialized","parseConfigValuesSerialized_tmp","parsePageConfigs","pageConfigsSerialized","pageConfigGlobalSerialized","pageConfigSerialized","configValues","routeFilesystem","loadConfigValuesAll","assertRouteConfigValue","pageConfigGlobal","configValue","configValueType","configDefinedAt","configValueSeriliazed","valueSerialized","common","valueSerializedElement","sideExports","parseValueSerialized","definedAtFile","addSideExports","sideExport","getDefinedAtFile","exportValues","valueWasFound","exportValue","parseGlobResults","pageFilesExports","assertPageConfigsSerialized","assertPageConfigGlobalSerialized","pageFilesMap","parseGlobResult","globValue","loadModule","assertLoadModule","moduleExports","pageFiles","globObject","globFiles","globalObject","setPageFiles","getPageFilesAll","isClientSide","isProduction","allPageIds","getAllPageIds","allPageFiles","fileIds","isDefaultPageFile","allPageIds2","getPageFilesClientSide","determine","getPageFilesServerSide","envIsClient","pageFilesRelevant","getPageFilesSorter","getPageIdFile","iso","pageIdFile","pageIdFileEnv","pageIdFileIso","getRendererFile","rendererFileEnv","rendererFileIso","defaultFilesNonRenderer","e1First","e2First","noOrder","e1","e2","e1_isRenderer","e2_isRenderer","e1_distance","getPathDistance","e2_distance","pathA","pathB","idx","pathAWithoutCommon","pathBWithoutCommon","distanceA","distanceB","getPageConfig","getConfigValueFilePathToShowToUser","getHookFilePathToShowToUser","getPageContextExports","configEntries","config","exportsAll","getExportValues","isFromDefaultExport","sources","addSrc","src","configValueFilePathToShowToUser","definedAt","pageExports","createObjectWithDeprecationWarning","exports","values","_fileType","_isFromDefaultExport","defaultExportValue","assertIsBrowser","onLoad","getCurrentUrl","options","urlCurrent","getPropAccessNotation","isKeyDotNotationCompatible","isReact","isReact1","_b","isReact2","_d","_c","isReact3","isSameErrorMessage","err1","err2","redirectHard","sleep","milliseconds","r","throttle","func","waitTime","isQueued","onPageHide","listener","onPageShow","augmentType","clone","genPromise","resolve","getPageContextSerializedInHtml","id","elem","pageContextJson","pageContextSerializedInHtml","analyzePageServerSide","pageFilesServerSideOnly","getConfigValueTyped","assertConfigValueType","getConfigValueRuntime","typeActual","valuePrintable","problem","getHook","pageContext","hookName","hooksTimeout","hookTimeout","getHookTimeout","hookFn","file","hookFilePath","assertHookFn","getHookFromPageConfigGlobal","getHookTimeoutDefault","assertHook","hooksTimeoutProvidedByUser","hooksTimeoutProvidedbyUserNormalized","getHooksTimeoutProvidedByUserNormalized","providedbyUser","hooksTimeoutProvidedByUserNormalized","hookTimeoutProvidedbyUser","error","warning","timeoutName","timeoutVal","notSerializable","getPageContextProxyForUser","_","propName","passToClientHint","handleVueReactivity","isWhitelisted","WHITELIST","addIs404ToPageProps","assertIs404","addIs404","pageProps","preparePageContextForUserConsumption","sortPageContext","descriptors","key1","key2","preparePageContextForUserConsumptionClientSide","isClientRouting","pageContextTyped","Page","supportVueReactiviy","resolveGetters","BUILT_IN_CLIENT_ROUTER","BUILT_IN_CLIENT","removeBuiltInOverrides","urlToFile","fileExtension","doNotCreateExtraDirectory","hasTrailingSlash","pathnameModified","pageContextJsonFileExtension","getPageContextRequestUrl","assertPageContextProvidedByUser","pageContextProvidedByUser","assertHookReturnedObject","keysExpected","keysUnknown","keys","assertOnBeforeRenderHookReturn","hookReturnValue","isObjectWithKeys","joinEnglish","arr","conjunction","colorizer","firsts","last","errIntro","executeGuardHook","prepareForUserConsumption","hook","findPageGuard","guard","pageContextForUserConsumption","res","hookResult","executeHook","pageRouteFile","AbortRender","pageContextAbort","err","stamp","isAbortError","isAbortPageContext","getPageContextFromAllRewrites","pageContextsFromRewrite","assertNoInfiniteLoop","pageContextFromAllRewrites","pageContextFromRewrite","urlRewrites","urlRewrite","loop","assertNoInfiniteAbortLoop","rewriteCount","redirectCount","abortCalls","pageContextInitIsPassedToClient","isServerSideError","getPageContextFromHooks_serialized","pageContextSerialized","processPageContextFromServer","getPageContextFromHooks_isHydration","hookClientOnlyExists","pageContextFromHook","executeHookClientSide","getPageContextFromServerHooks","pageContextFromServerHooks","hasPageContextServer","fetchPageContextFromServer","pageContextFromServer","getPageContextFromClientHooks","pageContextFromOnBeforeRender","pageContextFromData","setPageContextInitIsPassedToClient","hookServerOnlyExists","hookEnv","client","server","hasOnBeforeRenderServerSideOnlyHook","pageContextUrl","response","contentType","contentTypeCorrect","isCorrect","responseText","getProjectError","getPageContextUrlComputed","assertPageContextUrlComputed","pageContextUrlComputed","urlPathnameGetter","urlGetter","urlParsedGetter","getUrlParsed","urlResolved","baseToBeRemoved","urlHandler","urlParsed","hashIsAvailable","warnHashNotAvailable","urlParsedEnhanced","assertPageContextUrl","deduceRouteStringFromFilesystemPath","filesystemRoots","fsBase","filesystemRoot","filesystemRoute","urlRoot","debugInfo","resolveRouteFunction","routeFunction","routeDefinedAtString","result","assertSyncRouting","precedence","assertRouteParams","routeParams","warnDeprecatedAllowKey","allowKey","loadPageRoutes","onBeforeRouteHook","getGlobalHooks","getPageRoutes","pageRoutes","comesFromV1PageConfig","pageRoute","route","definedAtString","routeString","definedBy","onBeforeRoute","dirname","paths","dirPath","getBaseServer","createPageContext","urlOriginal","findPageConfig","loadConfigValues","isDev","configValuesLoaded","loadUserFilesClientSide","pageFilesClientSide","pageConfigLoaded","isFetchError","pageContextExports","pageContextAddendum","isErrorFetchingStaticAssets","skipLink","linkTag","isHashUrl","isNewTabLink","isVikeLink","isDisableAutomaticLinkInterception","target","rel","removeHash","getExportNames","analyzeExports","pageFilesServerSide","isHtmlOnly","assertClientSideRenderHook","hasClientSideRenderHook","determineClientEntry","clientEntries","clientDependencies","clientEntry","getVikeClientEntry","analyzePageClientSide","removeOverridenPageFiles","analyzePageClientSideInit","sharedPageFilesAlreadyLoaded","pageFilesClientSide_","analyzeClientSide","isClientSideRoutable","isClientRuntimeLoaded","PARAM_TOKEN_NEW","PARAM_TOKEN_OLD","assertRouteString","errPrefix2","highlight","resolveRouteString","segments","parseRouteString","routeRegexStrInner","segment","routeRegex","routeRegexMatch","segmentsValue","globIdx","hasMultipleGlobs","param","pushStatic","segmentLast","isParam","getRouteStringParameterList","routeParameterList","analyzeRouteString","countStaticParts","numberOfStaticPartsBeginning","numberOfStaticParts","sum","a","numberOfParams","numberOfGlobs","routeSegment","isStaticRouteString","resolvePrecendence","routeMatches","sortMatches","routeMatch","routeMatch1","routeMatch2","precedence1","precedence2","executeOnBeforeRouteHook","pageContextFromOnBeforeRouteHook","getPageContextFromHook","hookReturn","deprecatedReturn","pageContextAddendumHook","_debug","debug","pageContextFromRoute","routeType","winner","getPageContextCurrent","pageContextCurrent","setPageContextCurrent","PAGE_CONTEXT_MAX_AGE_DEFAULT","prefetchSettingTrue","prefetchSettingFalse","prefetchSettingDefault","getPrefetchSettings","prefetchSetting","prefetchStaticAssets","prefetch","attr","n","addLinkPrefetchHandlers","getPageContextPrefetched","getCacheKey","found","isExpired","prefetchAssets","pageContextLink","disableClientRouting","prefetchPageContextFromServerHooks","resultMaxAge","setPageContextPrefetchCache","populatePageContextPrefetchCache","isBrilloutDocpress","getResultMaxAge","prefetchSettings","addLinkPrefetchHandlers_apply","initLinkPrefetchHandlers","addLinkPrefetchHandlers_watch","addLinkPrefetchHandlers_unwatch","prefetchOnEvent","entries","entry","event","urlOfLink","getPageContextLink","executeOnRenderClientHook","renderHook","urlToShowToUser","getUrlToShowToUser","pageClientsFilesLoaded","init","getHistoryInfo","enhanceHistoryState","stateNotEnhanced","getStateNotEnhanced","isVikeEnhanced","stateVikeEnhanced","enhance","replaceHistoryState","timestamp","getTimestamp","scrollPosition","getScrollPosition","triggeredBy","getState","saveScrollPosition","pushHistoryState","overwriteLastHistoryEntry","url_","monkeyPatchHistoryAPI","funcName","funcOriginal","stateOriginal","stateEnhanced","assertStateVikeEnhanced","onPopStateBegin","previous","isNewState","current","setScrollPosition","scrollTarget","setScroll","scrollToTopOrHash","getUrlHash","hashTarget","scroll","done","autoSaveScrollPosition","setupNativeScrollRestoration","browserNativeScrollRestoration_enable","browserNativeScrollRestoration_disable","setInitialRenderIsDone","firstRenderStartPromise","firstRenderStartPromiseResolve","renderPageClientSide","renderArgs","isBackwardNavigation","doNotRenderIfSamePage","isClientSideNavigation","previousPageContext","isRenderOutdated","setHydrationCanBeAborted","isFirstRender","getIsRenderOutdated","renderPageNominal","onError","renderErrorPage","getPageContextBegin","onPageTransitionStartHook","isClientRoutable","isSamePage","handleErrorFetchingStaticAssets","pageContextAugmented","renderPageView","pageContextPrefetched","pageContextFromClientHooks","isForErrorPage","urlRedirect","changeUrl","onRenderClientError","keepScrollPositionPrev","getKeepScrollPositionSetting","keepScrollPositionNext","areKeysEqual","log","assertInfo","renderNumber","hydrationCanBeAborted","isRenderCleanup","getRenderCount","initOnPopState","isUserPushStateNavigation","isHashNavigation","isHashNavigationNew","abort","initOnLinkClick","handler","ev","isNormalLeftClick","findLinkTag","parentNode","initClientRouter","initHistoryAndScroll","renderFirstPagePromise","renderFirstPage","assertSingleInstance_onClientEntryClientRouting"],"ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111],"sources":["../../../../node_modules/vike/dist/esm/utils/isBrowser.js","../../../../node_modules/vike/dist/esm/utils/assertRoutingType.js","../../../../node_modules/vike/dist/esm/utils/slice.js","../../../../node_modules/vike/dist/esm/utils/parseUrl.js","../../../../node_modules/vike/dist/esm/utils/objectAssign.js","../../../../node_modules/vike/dist/esm/utils/isCallable.js","../../../../node_modules/vike/dist/esm/utils/sorter.js","../../../../node_modules/vike/dist/esm/utils/isArray.js","../../../../node_modules/vike/dist/esm/utils/isArrayOfStrings.js","../../../../node_modules/vike/dist/esm/utils/isObjectOfStrings.js","../../../../node_modules/vike/dist/esm/utils/hasProp.js","../../../../node_modules/vike/dist/esm/utils/isPlainObject.js","../../../../node_modules/vike/dist/esm/utils/compareString.js","../../../../node_modules/vike/dist/esm/utils/isNotNullish.js","../../../../node_modules/vike/dist/esm/utils/stringifyStringArray.js","../../../../node_modules/vike/dist/esm/utils/filesystemPathHandling.js","../../../../node_modules/vike/dist/esm/utils/isPropertyGetter.js","../../../../node_modules/vike/dist/esm/utils/isPromise.js","../../../../node_modules/vike/dist/esm/utils/getValuePrintable.js","../../../../node_modules/vike/dist/esm/utils/escapeRegex.js","../../../../node_modules/vike/dist/esm/utils/changeEnumerable.js","../../../../node_modules/vike/dist/esm/utils/objectDefineProperty.js","../../../../node_modules/vike/dist/esm/shared/getPageFiles/assert_exports_old_design.js","../../../../node_modules/vike/dist/esm/shared/determinePageIdOld.js","../../../../node_modules/vike/dist/esm/shared/assertPageFilePath.js","../../../../node_modules/vike/dist/esm/shared/error-page.js","../../../../node_modules/vike/dist/esm/utils/isScriptFile.js","../../../../node_modules/vike/dist/esm/shared/getPageFiles/fileTypes.js","../../../../node_modules/vike/dist/esm/shared/getPageFiles/getPageFileObject.js","../../../../node_modules/vike/dist/esm/shared/page-configs/getExportPath.js","../../../../node_modules/vike/dist/esm/shared/page-configs/getConfigDefinedAt.js","../../../../node_modules/@brillout/json-serializer/dist/esm/types.js","../../../../node_modules/@brillout/json-serializer/dist/esm/parse.js","../../../../node_modules/vike/dist/esm/shared/page-configs/assertPlusFileExport.js","../../../../node_modules/vike/dist/esm/shared/page-configs/serialize/parsePageConfigs.js","../../../../node_modules/vike/dist/esm/shared/getPageFiles/parseGlobResults.js","../../../../node_modules/vike/dist/esm/shared/getPageFiles/setPageFiles.js","../../../../node_modules/vike/dist/esm/shared/getPageFiles/getAllPageIdFiles.js","../../../../node_modules/vike/dist/esm/shared/page-configs/helpers.js","../../../../node_modules/vike/dist/esm/shared/getPageFiles/getExports.js","../../../../node_modules/vike/dist/esm/client/client-routing-runtime/pageFiles.js","../../../../node_modules/vike/dist/esm/utils/assertIsBrowser.js","../../../../node_modules/vike/dist/esm/client/client-routing-runtime/onLoad.js","../../../../node_modules/vike/dist/esm/client/server-routing-runtime/onLoad.js","../../../../node_modules/vike/dist/esm/utils/getCurrentUrl.js","../../../../node_modules/vike/dist/esm/utils/getPropAccessNotation.js","../../../../node_modules/vike/dist/esm/client/server-routing-runtime/utils.js","../../../../node_modules/vike/dist/esm/utils/isReact.js","../../../../node_modules/vike/dist/esm/utils/isSameErrorMessage.js","../../../../node_modules/vike/dist/esm/utils/redirectHard.js","../../../../node_modules/vike/dist/esm/utils/sleep.js","../../../../node_modules/vike/dist/esm/utils/throttle.js","../../../../node_modules/vike/dist/esm/utils/onPageVisibilityChange.js","../../../../node_modules/vike/dist/esm/utils/augmentType.js","../../../../node_modules/vike/dist/esm/utils/genPromise.js","../../../../node_modules/vike/dist/esm/client/client-routing-runtime/utils.js","../../../../node_modules/vike/dist/esm/client/shared/getPageContextSerializedInHtml.js","../../../../node_modules/vike/dist/esm/shared/getPageFiles/analyzePageServerSide.js","../../../../node_modules/vike/dist/esm/shared/page-configs/getConfigValue.js","../../../../node_modules/vike/dist/esm/shared/hooks/getHook.js","../../../../node_modules/vike/dist/esm/shared/notSerializable.js","../../../../node_modules/vike/dist/esm/client/shared/getPageContextProxyForUser.js","../../../../node_modules/vike/dist/esm/shared/addIs404ToPageProps.js","../../../../node_modules/vike/dist/esm/shared/preparePageContextForUserConsumption.js","../../../../node_modules/vike/dist/esm/client/shared/preparePageContextForUserConsumptionClientSide.js","../../../../node_modules/vike/dist/esm/client/client-routing-runtime/getPageContext/removeBuiltInOverrides.js","../../../../node_modules/vike/dist/esm/utils/urlToFile.js","../../../../node_modules/vike/dist/esm/shared/getPageContextRequestUrl.js","../../../../node_modules/vike/dist/esm/shared/assertPageContextProvidedByUser.js","../../../../node_modules/vike/dist/esm/shared/assertHookReturnedObject.js","../../../../node_modules/vike/dist/esm/shared/assertOnBeforeRenderHookReturn.js","../../../../node_modules/vike/dist/esm/utils/isObjectWithKeys.js","../../../../node_modules/vike/dist/esm/utils/joinEnglish.js","../../../../node_modules/vike/dist/esm/shared/route/utils.js","../../../../node_modules/vike/dist/esm/shared/route/executeGuardHook.js","../../../../node_modules/vike/dist/esm/shared/route/abort.js","../../../../node_modules/vike/dist/esm/shared/misc/pageContextInitIsPassedToClient.js","../../../../node_modules/vike/dist/esm/shared/misc/isServerSideError.js","../../../../node_modules/vike/dist/esm/client/client-routing-runtime/getPageContextFromHooks.js","../../../../node_modules/vike/dist/esm/shared/getPageContextUrlComputed.js","../../../../node_modules/vike/dist/esm/shared/route/deduceRouteStringFromFilesystemPath.js","../../../../node_modules/vike/dist/esm/shared/route/resolveRouteFunction.js","../../../../node_modules/vike/dist/esm/shared/route/loadPageRoutes.js","../../../../node_modules/vike/dist/esm/client/client-routing-runtime/getBaseServer.js","../../../../node_modules/vike/dist/esm/client/client-routing-runtime/createPageContext.js","../../../../node_modules/vike/dist/esm/shared/page-configs/findPageConfig.js","../../../../node_modules/vike/dist/esm/shared/page-configs/loadConfigValues.js","../../../../node_modules/vike/dist/esm/client/shared/loadUserFilesClientSide.js","../../../../node_modules/vike/dist/esm/client/client-routing-runtime/skipLink.js","../../../../node_modules/vike/dist/esm/shared/getPageFiles/analyzePageClientSide/getExportNames.js","../../../../node_modules/vike/dist/esm/shared/getPageFiles/analyzePageClientSide/analyzeExports.js","../../../../node_modules/vike/dist/esm/shared/getPageFiles/analyzePageClientSide/determineClientEntry.js","../../../../node_modules/vike/dist/esm/shared/getPageFiles/analyzePageClientSide.js","../../../../node_modules/vike/dist/esm/shared/getPageFiles/analyzeClientSide.js","../../../../node_modules/vike/dist/esm/client/client-routing-runtime/isClientSideRoutable.js","../../../../node_modules/vike/dist/esm/shared/route/resolveRouteString.js","../../../../node_modules/vike/dist/esm/shared/route/resolvePrecedence.js","../../../../node_modules/vike/dist/esm/shared/route/executeOnBeforeRouteHook.js","../../../../node_modules/vike/dist/esm/shared/route/debug.js","../../../../node_modules/vike/dist/esm/shared/route/index.js","../../../../node_modules/vike/dist/esm/client/client-routing-runtime/getPageContextCurrent.js","../../../../node_modules/vike/dist/esm/client/client-routing-runtime/prefetch/getPrefetchSettings.js","../../../../node_modules/vike/dist/esm/client/client-routing-runtime/prefetch.js","../../../../node_modules/vike/dist/esm/client/shared/executeOnRenderClientHook.js","../../../../node_modules/vike/dist/esm/client/client-routing-runtime/history.js","../../../../node_modules/vike/dist/esm/client/client-routing-runtime/setScrollPosition.js","../../../../node_modules/vike/dist/esm/client/client-routing-runtime/scrollRestoration.js","../../../../node_modules/vike/dist/esm/client/client-routing-runtime/renderPageClientSide.js","../../../../node_modules/vike/dist/esm/client/client-routing-runtime/initOnPopState.js","../../../../node_modules/vike/dist/esm/client/client-routing-runtime/initOnLinkClick.js","../../../../node_modules/vike/dist/esm/client/client-routing-runtime/initClientRouter.js","../../../../node_modules/vike/dist/esm/client/client-routing-runtime/entry.js"],"sourcesContent":["export function isBrowser() {\n    // Using `typeof window !== 'undefined'` alone is not enough because some users use https://www.npmjs.com/package/ssr-window\n    return typeof window !== 'undefined' && typeof window.scrollY === 'number';\n    // Alternatively, test whether environment is a *real* browser: https://github.com/brillout/picocolors/blob/d59a33a0fd52a8a33e4158884069192a89ce0113/picocolors.js#L87-L89\n}\n","export { assertClientRouting };\nexport { assertServerRouting };\nexport { checkIfClientRouting };\nimport { assertUsage, assertWarning } from './assert.js';\nimport { getGlobalObject } from './getGlobalObject.js';\nimport { isBrowser } from './isBrowser.js';\nimport pc from '@brillout/picocolors';\nconst state = getGlobalObject('utils/assertRouterType.ts', {});\nfunction assertClientRouting() {\n    assertNoContradiction(checkIfClientRouting());\n    state.isClientRouting = true;\n}\nfunction checkIfClientRouting() {\n    return state.isClientRouting !== false;\n}\nfunction assertServerRouting() {\n    assertNoContradiction(state.isClientRouting !== true);\n    state.isClientRouting = false;\n}\nfunction assertNoContradiction(noContradiction) {\n    // If an assertion fails because of a wrong usage, then we assume that the user is trying to import from 'vike/client/router' while not setting `clientRouting` to `true`. Note that 'vike/client' only exports the type `PageContextBuiltInClient` and that the package.json#exports entry 'vike/client' will eventually be removed.\n    assertUsage(isBrowser(), `${pc.cyan(\"import { something } from 'vike/client/router'\")} is forbidden on the server-side`, { showStackTrace: true });\n    assertWarning(noContradiction, \"You shouldn't `import { something } from 'vike/client/router'` when using Server Routing. The 'vike/client/router' utilities work only with Client Routing. In particular, don't `import { navigate }` nor `import { prefetch }` as they unnecessarily bloat your client-side bundle sizes.\", { showStackTrace: true, onlyOnce: true });\n}\n","import { assert } from './assert.js';\nexport { slice };\nfunction slice(thing, from, to) {\n    if (typeof thing === 'string') {\n        return sliceArray(thing.split(''), from, to).join('');\n    }\n    else {\n        return sliceArray(thing, from, to);\n    }\n}\nfunction sliceArray(list, from, to) {\n    const listSlice = [];\n    let start = from >= 0 ? from : list.length + from;\n    assert(start >= 0 && start <= list.length);\n    let end = to >= 0 ? to : list.length + to;\n    assert(end >= 0 && end <= list.length);\n    while (true) {\n        if (start === end) {\n            break;\n        }\n        if (start === list.length) {\n            start = 0;\n        }\n        if (start === end) {\n            break;\n        }\n        const el = list[start];\n        assert(el !== undefined);\n        listSlice.push(el);\n        start++;\n    }\n    return listSlice;\n}\n","// We don't use new URL() as it doesn't exactly do what we need, for example:\n//  - It loses the original URL parts (which we need to manipulate and recreate URLs)\n//  - It doesn't support the tauri:// protocol\n// Unit tests at ./parseUrl.spec.ts\nexport { parseUrl };\nexport { assertUsageUrlPathnameAbsolute };\nexport { assertUsageUrlRedirectTarget };\nexport { isUrl };\nexport { isUri };\nexport { isUrlRedirectTarget };\nexport { isUrlPathnameRelative };\nexport { isUrlExternal };\nexport { isBaseServer };\nexport { assertUrlComponents };\nexport { createUrlFromComponents };\nimport { slice } from './slice.js';\nimport { assert, assertUsage } from './assert.js';\nimport pc from '@brillout/picocolors';\nfunction parseUrl(url, baseServer) {\n    assert(isUrl(url), url);\n    assert(baseServer.startsWith('/'));\n    // Hash\n    const [urlWithoutHash, ...hashList] = url.split('#');\n    assert(urlWithoutHash !== undefined);\n    const hashOriginal = ['', ...hashList].join('#') || null;\n    assert(hashOriginal === null || hashOriginal.startsWith('#'));\n    const hash = hashOriginal === null ? '' : decodeSafe(hashOriginal.slice(1));\n    // Search\n    const [urlWithoutHashNorSearch, ...searchList] = urlWithoutHash.split('?');\n    assert(urlWithoutHashNorSearch !== undefined);\n    const searchOriginal = ['', ...searchList].join('?') || null;\n    assert(searchOriginal === null || searchOriginal.startsWith('?'));\n    const search = {};\n    const searchAll = {};\n    Array.from(new URLSearchParams(searchOriginal || '')).forEach(([key, val]) => {\n        search[key] = val;\n        searchAll[key] = [...(searchAll.hasOwnProperty(key) ? searchAll[key] : []), val];\n    });\n    // Origin + pathname\n    let { protocol, origin, pathnameAbsoluteWithBase } = getPathnameAbsoluteWithBase(urlWithoutHashNorSearch, baseServer);\n    const pathnameOriginal = urlWithoutHashNorSearch.slice((origin || '').length);\n    assertUrlComponents(url, origin, pathnameOriginal, searchOriginal, hashOriginal);\n    // Base URL\n    let { pathname, hasBaseServer } = removeBaseServer(pathnameAbsoluteWithBase, baseServer);\n    // pageContext.urlParsed.href\n    const href = createUrlFromComponents(origin, pathname, searchOriginal, hashOriginal);\n    // pageContext.urlParsed.{hostname, port}\n    const host = !origin ? null : origin.slice(protocol.length);\n    const { hostname, port } = parseHost(host, url);\n    // decode after setting href\n    pathname = decodePathname(pathname);\n    assert(pathname.startsWith('/'));\n    return {\n        href,\n        protocol,\n        hostname,\n        port,\n        origin,\n        pathname,\n        pathnameOriginal: pathnameOriginal,\n        hasBaseServer,\n        search,\n        searchAll,\n        searchOriginal,\n        hash,\n        hashOriginal\n    };\n}\nfunction decodeSafe(urlComponent) {\n    try {\n        return decodeURIComponent(urlComponent);\n    }\n    catch { }\n    try {\n        return decodeURI(urlComponent);\n    }\n    catch { }\n    return urlComponent;\n}\nfunction decodePathname(urlPathname) {\n    urlPathname = urlPathname.replace(/\\s+$/, '');\n    urlPathname = urlPathname\n        .split('/')\n        .map((dir) => decodeSafe(dir).split('/').join('%2F'))\n        .join('/');\n    return urlPathname;\n}\nfunction getPathnameAbsoluteWithBase(url, baseServer) {\n    // Search and hash already extracted\n    assert(!url.includes('?') && !url.includes('#'));\n    // url has origin\n    {\n        const { protocol, origin, pathname } = parseOrigin(url);\n        if (origin) {\n            return { protocol, origin, pathnameAbsoluteWithBase: pathname };\n        }\n        assert(pathname === url);\n    }\n    // url doesn't have origin\n    if (url.startsWith('/')) {\n        return { protocol: null, origin: null, pathnameAbsoluteWithBase: url };\n    }\n    else {\n        // url is a relative path\n        // In the browser, this is the Base URL of the current URL.\n        // Safe access `window?.document?.baseURI` for users who shim `window` in Node.js\n        const baseURI = typeof window !== 'undefined' ? window?.document?.baseURI : undefined;\n        let base;\n        if (baseURI) {\n            const baseURIPathaname = parseOrigin(baseURI.split('?')[0]).pathname;\n            base = baseURIPathaname;\n        }\n        else {\n            base = baseServer;\n        }\n        const pathnameAbsoluteWithBase = resolveUrlPathnameRelative(url, base);\n        return { protocol: null, origin: null, pathnameAbsoluteWithBase: pathnameAbsoluteWithBase };\n    }\n}\nfunction parseOrigin(url) {\n    if (!isUrlWithProtocol(url)) {\n        return { pathname: url, origin: null, protocol: null };\n    }\n    else {\n        const { protocol, uriWithoutProtocol } = parseProtocol(url);\n        assert(protocol);\n        const [host, ...rest] = uriWithoutProtocol.split('/');\n        const origin = protocol + host;\n        const pathname = '/' + rest.join('/');\n        return { pathname, origin, protocol };\n    }\n}\nfunction parseHost(host, url) {\n    const ret = { hostname: null, port: null };\n    if (!host)\n        return ret;\n    // port\n    const parts = host.split(':');\n    if (parts.length > 1) {\n        const port = parseInt(parts.pop(), 10);\n        assert(port || port === 0, url);\n        ret.port = port;\n    }\n    // hostname\n    ret.hostname = parts.join(':');\n    return ret;\n}\nfunction parseProtocol(uri) {\n    const SEP = ':';\n    const [before, ...after] = uri.split(SEP);\n    if (after.length === 0 ||\n        // https://github.com/vikejs/vike/commit/886a99ff21e86a8ca699a25cee7edc184aa058e4#r143308934\n        // https://en.wikipedia.org/wiki/List_of_URI_schemes\n        // https://www.rfc-editor.org/rfc/rfc7595\n        !/^[a-z][a-z0-9\\+\\-]*$/i.test(before)) {\n        return { protocol: null, uriWithoutProtocol: uri };\n    }\n    let protocol = before + SEP;\n    let uriWithoutProtocol = after.join(SEP);\n    const SEP2 = '//';\n    if (uriWithoutProtocol.startsWith(SEP2)) {\n        protocol = protocol + SEP2;\n        uriWithoutProtocol = uriWithoutProtocol.slice(SEP2.length);\n    }\n    return { protocol, uriWithoutProtocol };\n}\nfunction isUrlProtocol(protocol) {\n    // Is there an altenrative to having a blacklist?\n    // - If the blacklist becomes too big, maybe use a whitelist instead ['tauri://', 'file://', 'capacitor://', 'http://', 'https://']\n    const blacklist = [\n        // https://docs.ipfs.tech/how-to/address-ipfs-on-web\n        'ipfs://',\n        'ipns://'\n    ];\n    if (blacklist.includes(protocol))\n        return false;\n    return protocol.endsWith('://');\n}\n// Adapted from https://stackoverflow.com/questions/14780350/convert-relative-path-to-absolute-using-javascript/14780463#14780463\nfunction resolveUrlPathnameRelative(pathnameRelative, base) {\n    const stack = base.split('/');\n    const parts = pathnameRelative.split('/');\n    let baseRestoreTrailingSlash = base.endsWith('/');\n    if (pathnameRelative.startsWith('.')) {\n        // remove current file name\n        stack.pop();\n    }\n    for (const i in parts) {\n        const p = parts[i];\n        if (p == '' && i === '0')\n            continue;\n        if (p == '.')\n            continue;\n        if (p == '..')\n            stack.pop();\n        else {\n            baseRestoreTrailingSlash = false;\n            stack.push(p);\n        }\n    }\n    let pathnameAbsolute = stack.join('/');\n    if (baseRestoreTrailingSlash && !pathnameAbsolute.endsWith('/'))\n        pathnameAbsolute += '/';\n    if (!pathnameAbsolute.startsWith('/'))\n        pathnameAbsolute = '/' + pathnameAbsolute;\n    return pathnameAbsolute;\n}\nfunction removeBaseServer(pathnameAbsoluteWithBase, baseServer) {\n    assert(pathnameAbsoluteWithBase.startsWith('/'));\n    assert(isBaseServer(baseServer));\n    // Mutable\n    let urlPathname = pathnameAbsoluteWithBase;\n    assert(urlPathname.startsWith('/'));\n    assert(baseServer.startsWith('/'));\n    if (baseServer === '/') {\n        const pathname = pathnameAbsoluteWithBase;\n        return { pathname, hasBaseServer: true };\n    }\n    // Support `url === '/some-base-url' && baseServer === '/some-base-url/'`\n    let baseServerNormalized = baseServer;\n    if (baseServer.endsWith('/') && urlPathname === slice(baseServer, 0, -1)) {\n        baseServerNormalized = slice(baseServer, 0, -1);\n        assert(urlPathname === baseServerNormalized);\n    }\n    if (!urlPathname.startsWith(baseServerNormalized)) {\n        const pathname = pathnameAbsoluteWithBase;\n        return { pathname, hasBaseServer: false };\n    }\n    assert(urlPathname.startsWith('/') || urlPathname.startsWith('http'));\n    assert(urlPathname.startsWith(baseServerNormalized));\n    urlPathname = urlPathname.slice(baseServerNormalized.length);\n    if (!urlPathname.startsWith('/'))\n        urlPathname = '/' + urlPathname;\n    assert(urlPathname.startsWith('/'));\n    return { pathname: urlPathname, hasBaseServer: true };\n}\nfunction isBaseServer(baseServer) {\n    return baseServer.startsWith('/');\n}\nfunction assertUrlComponents(url, origin, pathnameOriginal, searchOriginal, hashOriginal) {\n    const urlRecreated = createUrlFromComponents(origin, pathnameOriginal, searchOriginal, hashOriginal);\n    assert(url === urlRecreated);\n}\nfunction createUrlFromComponents(origin, pathname, search, hash) {\n    const urlRecreated = `${origin || ''}${pathname}${search || ''}${hash || ''}`;\n    return urlRecreated;\n}\nfunction isUrl(url) {\n    // parseUrl() works with these URLs\n    return isUrlWithProtocol(url) || url.startsWith('/') || isUrlPathnameRelative(url);\n}\nfunction isUrlRedirectTarget(url) {\n    return url.startsWith('/') || isUri(url) || isUrlWithProtocol(url);\n}\nfunction isUrlPathnameRelative(url) {\n    return ['.', '?', '#'].some((c) => url.startsWith(c)) || url === '';\n}\nfunction isUrlExternal(url) {\n    return !url.startsWith('/') && !isUrlPathnameRelative(url);\n}\n/*\nURL with protocol.\n\n  http://example.com\n  https://exmaple.com\n  tauri://localhost\n  file://example.com\n  capacitor://localhost/assets/chunks/chunk-DJBYDrsP.js\n\n[Tauri](https://github.com/vikejs/vike/issues/808)\n[Electron (`file://`)](https://github.com/vikejs/vike/issues/1557)\n[Capacitor](https://github.com/vikejs/vike/issues/1706)\n */\nfunction isUrlWithProtocol(url) {\n    const { protocol } = parseProtocol(url);\n    return !!protocol && isUrlProtocol(protocol);\n}\n/*\nURIs that aren't URLs.\n\n  mailto:john@example.com\n\n  ipfs://bafybeiemxf5abjwjbikoz4mc3a3dla6ual3jsgpdr4cjr3oz3evfyavhwq/wiki/Vincent_van_Gogh.html\n\n  magnet:?xt=urn:btih:3a15e1ac49683d91b20c2ffc252ea612a6c01bd7&dn=The.Empire.Strikes.Back.1980.Remastered.1080p.BluRay.DDP.7.1.x265-EDGE2020.mkv&xl=3225443573&tr=udp://tracker.opentrackr.org:1337/announce&tr=udp://tracker.torrent.eu.org:451&tr=udp://open.stealth.si:80/announce&tr=udp://tracker.openbittorrent.com:6969&tr=udp://tracker.tiny-vps.com:6969/announce&tr=udp://open.demonii.com:1337\n\nWe need to treat URIs differently than URLs.\n - For example, we cannot parse URIs (their structure is unknown e.g. a `magnet:` URI is completely different than a `http://` URL).\n   - The protocols tauri:// file:// capacitor:// follow the same structure as http:// and https:// URLs.\n     - Thus we can parse them like http:// and https:// URLs.\n*/\nfunction isUri(uri) {\n    const { protocol } = parseProtocol(uri);\n    return !!protocol && !isUrlProtocol(uri);\n}\nfunction assertUsageUrlPathnameAbsolute(url, errPrefix) {\n    assertUsageUrl(url, errPrefix);\n}\nfunction assertUsageUrlRedirectTarget(url, errPrefix, isUnresolved) {\n    assertUsageUrl(url, errPrefix, { isRedirectTarget: isUnresolved ? 'unresolved' : true });\n}\nfunction assertUsageUrl(url, errPrefix, { isRedirectTarget } = {}) {\n    if (url.startsWith('/'))\n        return;\n    let errMsg = `${errPrefix} is ${pc.string(url)} but it should start with ${pc.string('/')}`;\n    if (isRedirectTarget) {\n        if (isUrlRedirectTarget(url))\n            return;\n        errMsg += ` or a protocol (${pc.string('http://')}, ${pc.string('mailto:')}, ...)`;\n        if (isRedirectTarget === 'unresolved') {\n            if (url === '*')\n                return;\n            errMsg += `, or be ${pc.string('*')}`;\n        }\n    }\n    assertUsage(false, errMsg);\n}\n","export { objectAssign };\nimport { assert } from './assert.js';\n// Same as Object.assign() but:\n//  - With type inference\n//  - Preserves property descriptors, which we need for preserving the getters added by getPageContextUrlComputed()\nfunction objectAssign(obj, objAddendum) {\n    if (objAddendum) {\n        assert(!('_isPageContextObject' in objAddendum));\n        Object.defineProperties(obj, Object.getOwnPropertyDescriptors(objAddendum));\n    }\n}\n","export function isCallable(thing) {\n    return thing instanceof Function || typeof thing === 'function';\n}\n","import { assert } from './assert.js';\nexport { higherFirst };\nexport { lowerFirst };\nexport { makeFirst };\nexport { makeLast };\nexport { reverse };\n// -1 => element1 first (i.e. `indexOf(element1) < indexOf(element2)`)\n// +1 => element2 first (i.e. `indexOf(element2) < indexOf(element1)`)\n// 0 => keep original order of element1 and element2\n/**\n * ```js\n * let arr = [\n *   { price: 10 },\n *   { price: 1000 },\n *   { price: 100 }\n * ]\n * arr = arr.sort(higherFirst(el => el.price))\n * isEqual(arr, [\n *   { price: 1000 },\n *   { price: 100 },\n *   { price: 10 }\n * ])\n * ```\n */\nfunction higherFirst(getValue) {\n    return (element1, element2) => {\n        const val1 = getValue(element1);\n        const val2 = getValue(element2);\n        if (val1 === val2) {\n            return 0;\n        }\n        return val1 > val2 ? -1 : 1;\n    };\n}\n/**\n * ```js\n * let arr = [\n *   { price: 10 },\n *   { price: 1000 },\n *   { price: 100 }\n * ]\n * arr = arr.sort(lowerFirst(el => el.price))\n * isEqual(arr, [\n *   { price: 10 },\n *   { price: 100 },\n *   { price: 1000 }\n * ])\n * ```\n */\nfunction lowerFirst(getValue) {\n    return (element1, element2) => {\n        const val1 = getValue(element1);\n        const val2 = getValue(element2);\n        if (val1 === val2) {\n            return 0;\n        }\n        return val1 < val2 ? -1 : 1;\n    };\n}\n/**\n * ```js\n * let arr = [\n *  { name: 'iphone', isRocket: false },\n *  { name: 'starship', isRocket: true }\n * ]\n * arr = arr.sort(makeFirst(el => el.isRocket))\n * isEqual(arr, [\n *  { name: 'starship', isRocket: true },\n *  { name: 'iphone', isRocket: false }\n * ])\n * ```\n */\nfunction makeFirst(getValue) {\n    return (element1, element2) => {\n        const val1 = getValue(element1);\n        const val2 = getValue(element2);\n        assert([true, false, null].includes(val1));\n        assert([true, false, null].includes(val2));\n        if (val1 === val2) {\n            return 0;\n        }\n        if (val1 === true || val2 === false) {\n            return -1;\n        }\n        if (val2 === true || val1 === false) {\n            return 1;\n        }\n        assert(false);\n    };\n}\n/**\n * ```js\n * let arr = [\n *  { name: 'starship', isRocket: true },\n *  { name: 'iphone', isRocket: false }\n * ]\n * arr = arr.sort(makeLast(el => el.isRocket))\n * isEqual(arr, [\n *  { name: 'iphone', isRocket: false },\n *  { name: 'starship', isRocket: true }\n * ])\n * ```\n */\nfunction makeLast(getValue) {\n    return makeFirst((element) => {\n        const val = getValue(element);\n        if (val === null) {\n            return null;\n        }\n        else {\n            return !val;\n        }\n    });\n}\n/** Reverse order result. */\nfunction reverse(sortKey) {\n    return (-1 * sortKey);\n}\n","// Same as Array.isArray() but typesafe: asserts unknown[] instead of any[]\nexport function isArray(value) {\n    return Array.isArray(value);\n}\n","export { isArrayOfStrings };\nimport { isArray } from './isArray.js';\nfunction isArrayOfStrings(val) {\n    return isArray(val) && val.every((v) => typeof v === 'string');\n}\n","export { isObjectOfStrings };\nimport { isObject } from './isObject.js';\nfunction isObjectOfStrings(val) {\n    return isObject(val) && Object.values(val).every((v) => typeof v === 'string');\n}\n","export { hasProp };\nimport { isCallable } from './isCallable.js';\nimport { isObject } from './isObject.js';\nimport { isArrayOfStrings } from './isArrayOfStrings.js';\nimport { isObjectOfStrings } from './isObjectOfStrings.js';\nimport { isArray } from './isArray.js';\nfunction hasProp(obj, prop, type) {\n    if (!isObject(obj))\n        return false;\n    if (!(prop in obj)) {\n        return type === 'undefined';\n    }\n    if (type === undefined) {\n        return true;\n    }\n    const propValue = obj[prop];\n    if (type === 'undefined') {\n        return propValue === undefined;\n    }\n    if (type === 'array') {\n        return isArray(propValue);\n    }\n    if (type === 'object') {\n        return isObject(propValue);\n    }\n    if (type === 'string[]') {\n        return isArrayOfStrings(propValue);\n    }\n    if (type === 'string{}') {\n        return isObjectOfStrings(propValue);\n    }\n    if (type === 'function') {\n        return isCallable(propValue);\n    }\n    if (isArray(type)) {\n        return typeof propValue === 'string' && type.includes(propValue);\n    }\n    if (type === 'null') {\n        return propValue === null;\n    }\n    if (type === 'true') {\n        return propValue === true;\n    }\n    if (type === 'false') {\n        return propValue === false;\n    }\n    return typeof propValue === type;\n}\n","export function isPlainObject(value) {\n    // Is object?\n    if (typeof value !== 'object' || value === null) {\n        return false;\n    }\n    // Support `Object.create(null)`\n    if (Object.getPrototypeOf(value) === null) {\n        return true;\n    }\n    // Is plain object?\n    return (\n    /* Doesn't work in Cloudflare Pages workers\n    value.constructor === Object\n    */\n    value.constructor.name === 'Object');\n}\n","export { compareString };\nfunction compareString(str1, str2) {\n    if (str1.toLowerCase() < str2.toLowerCase())\n        return -1;\n    if (str1.toLowerCase() > str2.toLowerCase())\n        return 1;\n    return 0;\n}\n","export const isNotNullish = (p) => p !== null && p !== undefined;\n","export { stringifyStringArray };\nfunction stringifyStringArray(stringList) {\n    return '[' + stringList.map((str) => \"'\" + str + \"'\").join(', ') + ']';\n}\n","export { toPosixPath };\nexport { assertPosixPath };\nimport { assert } from './assert.js';\nfunction toPosixPath(path) {\n    const pathPosix = path.split('\\\\').join('/');\n    assertPosixPath(pathPosix);\n    return pathPosix;\n}\nfunction assertPosixPath(path) {\n    const errMsg = (msg) => `Not a posix path: ${msg}`;\n    assert(path !== null, errMsg('null'));\n    assert(typeof path === 'string', errMsg(`typeof path === ${JSON.stringify(typeof path)}`));\n    assert(path !== '', errMsg('(empty string)'));\n    assert(path);\n    assert(!path.includes('\\\\'), errMsg(path));\n}\n","export function isPropertyGetter(obj, prop) {\n    const descriptor = Object.getOwnPropertyDescriptor(obj, prop);\n    return !!descriptor && !('value' in descriptor) && !!descriptor.get;\n}\n","import { isCallable } from './isCallable.js';\nexport function isPromise(val) {\n    return typeof val === 'object' && val !== null && 'then' in val && isCallable(val.then);\n}\n","export function getValuePrintable(value) {\n    if ([null, undefined].includes(value))\n        return String(value);\n    if (['boolean', 'number', 'string'].includes(typeof value))\n        return JSON.stringify(value);\n    return null;\n}\n","export function escapeRegex(str) {\n    // https://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript/3561711#3561711\n    return str.replace(/[/\\-\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n","/** Change enumerability of an object property. */\nexport function changeEnumerable(obj, prop, enumerable) {\n    const descriptor = Object.getOwnPropertyDescriptor(obj, prop);\n    Object.defineProperty(obj, prop, { ...descriptor, enumerable });\n}\n","/** Like Object.defineProperty() but with type inference */\nexport function objectDefineProperty(obj, prop, { get, ...args }) {\n    Object.defineProperty(obj, prop, { ...args, get });\n}\n","// TODO/v1-release: remove this\nexport { assertDefaultExports };\nexport { assertExportValues };\nexport { forbiddenDefaultExports };\nimport { assert, assertUsage } from '../utils.js';\nconst enforceTrue = ['clientRouting'];\nfunction assertExportValues(pageFile) {\n    enforceTrue.forEach((exportName) => {\n        assert(pageFile.fileExports);\n        if (!(exportName in pageFile.fileExports))\n            return;\n        const explainer = `The value of \\`${exportName}\\` is only allowed to be \\`true\\`.`;\n        assertUsage(pageFile.fileExports[exportName] !== false, `${pageFile.filePath} has \\`export { ${exportName} }\\` with the value \\`false\\` which is prohibited: remove \\`export { ${exportName} }\\` instead. (${explainer})`);\n        assertUsage(pageFile.fileExports[exportName] === true, `${pageFile.filePath} has \\`export { ${exportName} }\\` with a forbidden value. ${explainer}`);\n    });\n}\n// Forbid exports such as `export default { render }`, because only `export { render }` can be statically analyzed by `es-module-lexer`.\nconst forbiddenDefaultExports = ['render', 'clientRouting', 'prerender', 'doNotPrerender'];\nfunction assertDefaultExports(defaultExportName, filePath) {\n    assertUsage(!forbiddenDefaultExports.includes(defaultExportName), `${filePath} has \\`export default { ${defaultExportName} }\\` which is prohibited, use \\`export { ${defaultExportName} }\\` instead.`);\n}\n","export { determinePageIdOld };\nimport { slice, assert } from './utils.js';\n// TODO/v1-release: remove\nfunction determinePageIdOld(filePath) {\n    const pageSuffix = '.page.';\n    const pageId = slice(filePath.split(pageSuffix), 0, -1).join(pageSuffix);\n    assert(!pageId.includes('\\\\'));\n    return pageId;\n}\n","// TODO/v1-release: remove\nexport { assertPageFilePath };\nimport { assertPosixPath } from './utils.js';\nfunction assertPageFilePath(filePath) {\n    assertPosixPath(filePath);\n    /* This assert() is skipped to reduce client-side bundle size\n    assert(filePath.startsWith('/') || isNpmPackageImport(filePath), { filePath })\n    */\n}\n","export { getErrorPageId };\nexport { isErrorPageId };\nexport { isErrorPage };\n// TODO/v1-release: consider loading this file only for Client Routing\nimport { assert, assertUsage, unique } from './utils.js';\nfunction getErrorPageId(pageFilesAll, pageConfigs) {\n    if (pageConfigs.length > 0) {\n        const errorPageConfigs = pageConfigs.filter((p) => p.isErrorPage);\n        if (errorPageConfigs.length === 0)\n            return null;\n        assertUsage(errorPageConfigs.length === 1, 'Only one error page can be defined');\n        return errorPageConfigs[0].pageId;\n    }\n    // TODO/v1-release: remove\n    const errorPageIds = unique(pageFilesAll.map(({ pageId }) => pageId).filter((pageId) => isErrorPageId(pageId, false)));\n    assertUsage(errorPageIds.length <= 1, `Only one _error.page.js is allowed, but found several: ${errorPageIds.join(' ')}`);\n    if (errorPageIds.length > 0) {\n        const errorPageId = errorPageIds[0];\n        assert(errorPageId);\n        return errorPageId;\n    }\n    return null;\n}\n// TODO/v1-release: remove\nfunction isErrorPageId(pageId, _isV1Design) {\n    assert(!pageId.includes('\\\\'));\n    return pageId.includes('/_error');\n}\nfunction isErrorPage(pageId, pageConfigs) {\n    if (pageConfigs.length > 0) {\n        const pageConfig = pageConfigs.find((p) => p.pageId === pageId);\n        assert(pageConfig);\n        return !!pageConfig.isErrorPage;\n    }\n    else {\n        return isErrorPageId(pageId, false);\n    }\n}\n","export { isScriptFile };\nexport { isPlainJavaScriptFile };\nexport { isTemplateFile };\nexport { scriptFileExtensions };\nexport { scriptFileExtensionList };\nimport { assert } from './assert.js';\n// We can't use a RegExp:\n//  - Needs to work with Micromatch: https://github.com/micromatch/micromatch because:\n//    - Vite's `import.meta.glob()` uses Micromatch\n//  - We need this to be a whitelist because:\n//   - A pattern `*([a-zA-Z0-9]` doesn't work.\n//     - Because of ReScript: `.res` are ReScript source files which need to be ignored. (The ReScript compiler generates `.js` files alongside `.res` files.)\n//   - Black listing doesn't work.\n//     - We cannot implement a blacklist with a glob pattern.\n//     - A post `import.meta.glob()` blacklist filtering doesn't work because Vite would still process the files (e.g. including them in the bundle).\n// prettier-ignore\n// biome-ignore format:\nconst extJavaScript = [\n    'js',\n    'ts',\n    'cjs',\n    'cts',\n    'mjs',\n    'mts',\n];\n// prettier-ignore\n// biome-ignore format:\nconst extJsx = [\n    'jsx',\n    'tsx',\n    'cjsx',\n    'ctsx',\n    'mjsx',\n    'mtsx',\n];\n// prettier-ignore\n// biome-ignore format:\nconst extTemplates = [\n    'vue',\n    'svelte',\n    'marko',\n    'md',\n    'mdx'\n];\nconst scriptFileExtensionList = [...extJavaScript, ...extJsx, ...extTemplates];\nconst scriptFileExtensions = '(' + scriptFileExtensionList.join('|') + ')';\nfunction isScriptFile(filePath) {\n    const yes = scriptFileExtensionList.some((ext) => filePath.endsWith('.' + ext));\n    if (isPlainJavaScriptFile(filePath))\n        assert(yes);\n    return yes;\n}\nfunction isPlainJavaScriptFile(filePath) {\n    const yes1 = /\\.(c|m)?(j|t)s$/.test(filePath);\n    const yes2 = extJavaScript.some((ext) => filePath.endsWith('.' + ext));\n    assert(yes1 === yes2);\n    return yes1;\n}\nfunction isTemplateFile(filePath) {\n    return extTemplates.some((ext) => filePath.endsWith('.' + ext));\n}\n","// TODO/v1-release: remove\nexport { fileTypes };\nexport { isValidFileType };\nexport { determineFileType };\nimport { assert, assertPosixPath } from '../utils.js';\nimport { isScriptFile } from '../../utils/isScriptFile.js';\nconst fileTypes = [\n    '.page',\n    '.page.server',\n    '.page.route',\n    '.page.client',\n    // New type `.page.css`/`.page.server.css`/`.page.client.css` for `extensions[number].pageFileDist`.\n    //  - Extensions using `pageFileDist` are expected to use a bundler that generates a `.css` colocated next to the original `.page.js` file (e.g. `/renderer/_default.page.server.css` for `/renderer/_default.page.server.js`.\n    //  - Since these `.page.css` files Bundlers We can therefore expect that there isn't any `.page.server.sass`/...\n    '.css'\n];\nfunction isValidFileType(filePath) {\n    return ['.js', '.mjs', '.cjs', '.css'].some((ext) => filePath.endsWith(ext));\n}\nfunction determineFileType(filePath) {\n    assertPosixPath(filePath);\n    {\n        const isCSS = filePath.endsWith('.css');\n        if (isCSS) {\n            /* This assert() is skipped to reduce client-side bundle size\n            assert(isNpmPackageImport(filePath), filePath) // `.css` page files are only supported for npm packages\n            */\n            return '.css';\n        }\n    }\n    assert(isScriptFile(filePath), filePath);\n    const fileName = filePath.split('/').slice(-1)[0];\n    const parts = fileName.split('.');\n    const suffix1 = parts.slice(-3)[0];\n    const suffix2 = parts.slice(-2)[0];\n    if (suffix2 === 'page') {\n        return '.page';\n    }\n    assert(suffix1 === 'page', filePath);\n    if (suffix2 === 'server') {\n        return '.page.server';\n    }\n    if (suffix2 === 'client') {\n        return '.page.client';\n    }\n    if (suffix2 === 'route') {\n        return '.page.route';\n    }\n    assert(false, filePath);\n}\n","// TODO/v1-release: remove\nexport { getPageFileObject };\nimport { determinePageIdOld } from '../determinePageIdOld.js';\nimport { assertPageFilePath } from '../assertPageFilePath.js';\nimport { isErrorPageId } from '../error-page.js';\nimport { assert, slice } from '../utils.js';\nimport { determineFileType } from './fileTypes.js';\nfunction getPageFileObject(filePath) {\n    const isRelevant = (pageId) => pageFile.pageId === pageId ||\n        (pageFile.isDefaultPageFile &&\n            (isRendererFilePath(pageFile.filePath) || isAncestorDefaultPage(pageId, pageFile.filePath)));\n    const fileType = determineFileType(filePath);\n    const isEnv = (env) => {\n        assert(fileType !== '.page.route'); // We can't determine `.page.route.js`\n        if (env === 'CLIENT_ONLY') {\n            return fileType === '.page.client' || fileType === '.css';\n        }\n        if (env === 'SERVER_ONLY') {\n            return fileType === '.page.server';\n        }\n        if (env === 'CLIENT_AND_SERVER') {\n            return fileType === '.page';\n        }\n        assert(false);\n    };\n    const pageFile = {\n        filePath,\n        fileType,\n        isEnv,\n        isRelevant,\n        isDefaultPageFile: isDefaultFilePath(filePath),\n        isRendererPageFile: fileType !== '.css' && isDefaultFilePath(filePath) && isRendererFilePath(filePath),\n        isErrorPageFile: isErrorPageId(filePath, false),\n        pageId: determinePageIdOld(filePath)\n    };\n    return pageFile;\n}\nfunction isDefaultFilePath(filePath) {\n    assertPageFilePath(filePath);\n    if (isErrorPageId(filePath, false)) {\n        return false;\n    }\n    return filePath.includes('/_default');\n}\nfunction isRendererFilePath(filePath) {\n    assertPageFilePath(filePath);\n    return filePath.includes('/renderer/');\n}\nfunction isAncestorDefaultPage(pageId, defaultPageFilePath) {\n    assertPageFilePath(pageId);\n    assertPageFilePath(defaultPageFilePath);\n    assert(!pageId.endsWith('/'));\n    assert(!defaultPageFilePath.endsWith('/'));\n    assert(isDefaultFilePath(defaultPageFilePath));\n    const defaultPageDir = slice(defaultPageFilePath.split('/'), 0, -1)\n        .filter((filePathSegment) => filePathSegment !== '_default')\n        .join('/');\n    return pageId.startsWith(defaultPageDir);\n}\n","export { getExportPath };\nimport { assert } from '../utils.js';\nfunction getExportPath(fileExportPathToShowToUser, configName) {\n    if (!fileExportPathToShowToUser)\n        return null;\n    let [exportName, ...exportObjectPath] = fileExportPathToShowToUser;\n    if (!exportName)\n        return null;\n    if (exportObjectPath.length === 0 && ['*', 'default', configName].includes(exportName))\n        return null;\n    assert(exportName !== '*');\n    let prefix = '';\n    let suffix = '';\n    if (exportName === 'default') {\n        prefix = 'export default';\n    }\n    else {\n        prefix = 'export';\n        exportObjectPath = [exportName, ...exportObjectPath];\n    }\n    exportObjectPath.forEach((prop) => {\n        prefix = `${prefix} { ${prop}`;\n        suffix = ` }${suffix}`;\n    });\n    const exportPath = prefix + suffix;\n    return exportPath;\n}\n","export { getConfigDefinedAt };\nexport { getConfigDefinedAtOptional };\nexport { getDefinedAtString };\nimport { assert, isArray } from '../utils.js';\nimport pc from '@brillout/picocolors';\nimport { getExportPath } from './getExportPath.js';\nfunction getConfigDefinedAt(sentenceBegin, configName, definedAtData) {\n    return `${begin(sentenceBegin, configName)} at ${getDefinedAtString(definedAtData, configName)}`;\n}\nfunction getConfigDefinedAtOptional(sentenceBegin, configName, definedAtData) {\n    if (!definedAtData) {\n        return `${begin(sentenceBegin, configName)} internally`;\n    }\n    else {\n        return `${begin(sentenceBegin, configName)} at ${getDefinedAtString(definedAtData, configName)}`;\n    }\n}\nfunction begin(sentenceBegin, configName) {\n    return `${sentenceBegin} ${pc.cyan(configName)} defined`;\n}\nfunction getDefinedAtString(definedAtData, configName) {\n    let files;\n    if (isArray(definedAtData)) {\n        files = definedAtData;\n    }\n    else {\n        files = [definedAtData];\n    }\n    assert(files.length >= 1);\n    const definedAtString = files\n        .map((source) => {\n        const { filePathToShowToUser, fileExportPathToShowToUser } = source;\n        let s = filePathToShowToUser;\n        const exportPath = getExportPath(fileExportPathToShowToUser, configName);\n        if (exportPath) {\n            s = `${s} > ${pc.cyan(exportPath)}`;\n        }\n        return s;\n    })\n        .join(' / ');\n    return definedAtString;\n}\n","export { types };\nconst types = [\n    ts({\n        is: (val) => val === undefined,\n        match: (str) => str === '!undefined',\n        serialize: () => '!undefined',\n        deserialize: () => undefined,\n    }),\n    ts({\n        is: (val) => val === Infinity,\n        match: (str) => str === '!Infinity',\n        serialize: () => '!Infinity',\n        deserialize: () => Infinity,\n    }),\n    ts({\n        is: (val) => val === -Infinity,\n        match: (str) => str === '!-Infinity',\n        serialize: () => '!-Infinity',\n        deserialize: () => -Infinity,\n    }),\n    ts({\n        is: (val) => typeof val === 'number' && isNaN(val),\n        match: (str) => str === '!NaN',\n        serialize: () => '!NaN',\n        deserialize: () => NaN,\n    }),\n    ts({\n        is: (val) => val instanceof Date,\n        match: (str) => str.startsWith('!Date:'),\n        serialize: (val) => '!Date:' + val.toISOString(),\n        deserialize: (str) => new Date(str.slice('!Date:'.length)),\n    }),\n    ts({\n        is: (val) => typeof val === 'bigint',\n        match: (str) => str.startsWith('!BigInt:'),\n        serialize: (val) => '!BigInt:' + val.toString(),\n        deserialize: (str) => {\n            if (typeof BigInt === 'undefined') {\n                throw new Error('Your JavaScript environement does not support BigInt. Consider adding a polyfill.');\n            }\n            return BigInt(str.slice('!BigInt:'.length));\n        },\n    }),\n    ts({\n        is: (val) => val instanceof RegExp,\n        match: (str) => str.startsWith('!RegExp:'),\n        serialize: (val) => '!RegExp:' + val.toString(),\n        deserialize: (str) => {\n            str = str.slice('!RegExp:'.length);\n            // const args: string[] = str.match(/\\/(.*?)\\/([gimy])?$/)!\n            const args = str.match(/\\/(.*)\\/(.*)?/);\n            const pattern = args[1];\n            const flags = args[2];\n            return new RegExp(pattern, flags);\n        },\n    }),\n    ts({\n        is: (val) => val instanceof Map,\n        match: (str) => str.startsWith('!Map:'),\n        serialize: (val, serializer) => '!Map:' + serializer(Array.from(val.entries())),\n        deserialize: (str, deserializer) => new Map(deserializer(str.slice('!Map:'.length))),\n    }),\n    ts({\n        is: (val) => val instanceof Set,\n        match: (str) => str.startsWith('!Set:'),\n        serialize: (val, serializer) => '!Set:' + serializer(Array.from(val.values())),\n        deserialize: (str, deserializer) => new Set(deserializer(str.slice('!Set:'.length))),\n    }),\n    // Avoid collisions with the special strings defined above\n    ts({\n        is: (val) => typeof val === 'string' && val.startsWith('!'),\n        match: (str) => str.startsWith('!'),\n        serialize: (val) => '!' + val,\n        deserialize: (str) => str.slice(1),\n    }),\n];\n// Type check\nfunction ts(t) {\n    return t;\n}\n","export { parse };\n// Used by Vike: https://github.com/vikejs/vike/blob/b4ba6b70e6bdc2e1f460c0d2e4c3faae5d0a733c/vike/shared/page-configs/serialize/parseConfigValuesSerialized.ts#L13\nexport { parseTransform };\nimport { types } from './types';\nfunction parse(str) {\n    // We don't use the reviver option in `JSON.parse(str, reviver)` because it doesn't support `undefined` values\n    const value = JSON.parse(str);\n    return parseTransform(value);\n}\nfunction parseTransform(value) {\n    if (typeof value === 'string') {\n        return reviver(value);\n    }\n    if (\n    // Also matches arrays\n    typeof value === 'object' &&\n        value !== null) {\n        Object.entries(value).forEach(([key, val]) => {\n            ;\n            value[key] = parseTransform(val);\n        });\n    }\n    return value;\n}\nfunction reviver(value) {\n    for (const { match, deserialize } of types) {\n        if (match(value)) {\n            return deserialize(value, parse);\n        }\n    }\n    return value;\n}\n","export { assertPlusFileExport };\nimport { assert, assertUsage, assertWarning } from '../utils.js';\nimport pc from '@brillout/picocolors';\nconst EXPORTS_IGNORE = [\n    // vite-plugin-solid adds `export { $$registrations }`\n    '$$registrations',\n    // @vitejs/plugin-vue adds `export { _rerender_only }`\n    '_rerender_only'\n];\n// Tolerate `export { frontmatter }` in .mdx files\nconst TOLERATE_SIDE_EXPORTS = ['.md', '.mdx'];\nfunction assertPlusFileExport(fileExports, filePathToShowToUser, configName) {\n    const exportNames = Object.keys(fileExports).filter((exportName) => !EXPORTS_IGNORE.includes(exportName));\n    const isValid = (exportName) => exportName === 'default' || exportName === configName;\n    const exportNamesValid = exportNames.filter(isValid);\n    const exportNamesInvalid = exportNames.filter((e) => !isValid(e));\n    if (exportNamesValid.length === 1 && exportNamesInvalid.length === 0) {\n        return;\n    }\n    const exportDefault = pc.code('export default');\n    const exportNamed = pc.code(`export { ${configName} }`);\n    assert(exportNamesValid.length <= 2);\n    if (exportNamesValid.length === 0) {\n        assertUsage(false, `${filePathToShowToUser} should have a ${exportNamed} or ${exportDefault}`);\n    }\n    if (exportNamesValid.length === 2) {\n        assertWarning(false, `${filePathToShowToUser} is ambiguous: remove ${exportDefault} or ${exportNamed}`, {\n            onlyOnce: true\n        });\n    }\n    if (!TOLERATE_SIDE_EXPORTS.some((ext) => filePathToShowToUser.endsWith(ext))) {\n        exportNamesInvalid.forEach((exportInvalid) => {\n            assertWarning(false, `${filePathToShowToUser} unexpected ${pc.cyan(`export { ${exportInvalid} }`)}`, {\n                onlyOnce: true\n            });\n        });\n    }\n}\n","export { parsePageConfigs };\nexport { parseConfigValuesSerialized };\nimport { assert, assertUsage, isCallable } from '../../utils.js';\nimport { getConfigDefinedAt } from '../getConfigDefinedAt.js';\nimport { parseTransform } from '@brillout/json-serializer/parse';\nimport { assertPlusFileExport } from '../assertPlusFileExport.js';\nfunction parseConfigValuesSerialized(configValuesSerialized) {\n    const configValues = parseConfigValuesSerialized_tmp(configValuesSerialized);\n    return configValues;\n}\nfunction parsePageConfigs(pageConfigsSerialized, pageConfigGlobalSerialized) {\n    // pageConfigs\n    const pageConfigs = pageConfigsSerialized.map((pageConfigSerialized) => {\n        const configValues = parseConfigValuesSerialized(pageConfigSerialized.configValuesSerialized);\n        const { pageId, isErrorPage, routeFilesystem, loadConfigValuesAll } = pageConfigSerialized;\n        assertRouteConfigValue(configValues);\n        return {\n            pageId,\n            isErrorPage,\n            routeFilesystem,\n            configValues,\n            loadConfigValuesAll\n        };\n    });\n    // pageConfigsGlobal\n    const pageConfigGlobal = { configValues: {} };\n    {\n        const configValues = parseConfigValuesSerialized(pageConfigGlobalSerialized.configValuesSerialized);\n        Object.assign(pageConfigGlobal.configValues, configValues);\n    }\n    return { pageConfigs, pageConfigGlobal };\n}\nfunction assertRouteConfigValue(configValues) {\n    const configName = 'route';\n    const configValue = configValues[configName];\n    if (!configValue)\n        return;\n    const { value, definedAtData } = configValue;\n    const configValueType = typeof value;\n    assert(definedAtData);\n    const configDefinedAt = getConfigDefinedAt('Config', configName, definedAtData);\n    assertUsage(configValueType === 'string' || isCallable(value), `${configDefinedAt} has an invalid type '${configValueType}': it should be a string or a function instead, see https://vike.dev/route`);\n    /* We don't use assertRouteString() in order to avoid unnecessarily bloating the client-side bundle when using Server Routing:\n    * - When using Server Routing, this file is loaded => loading assertRouteString() would bloat the client bundle.\n    * - assertRouteString() is already called on the server-side\n    * - When using Server Routing, client-side validation is superfluous as Route Strings only need to be validated on the server-side\n   if (typeof configValue === 'string') {\n     assertRouteString(configValue, `${configElement.configDefinedAt} defines an`)\n   }\n   */\n}\nfunction parseConfigValuesSerialized_tmp(configValuesSerialized) {\n    const configValues = {};\n    Object.entries(configValuesSerialized).forEach(([configName, configValueSeriliazed]) => {\n        let configValue;\n        if (configValueSeriliazed.type === 'cumulative') {\n            const { valueSerialized, ...common } = configValueSeriliazed;\n            const value = valueSerialized.map((valueSerializedElement, i) => {\n                const { value, sideExports } = parseValueSerialized(valueSerializedElement, configName, () => {\n                    const definedAtFile = configValueSeriliazed.definedAtData[i];\n                    assert(definedAtFile);\n                    return definedAtFile;\n                });\n                addSideExports(sideExports);\n                return value;\n            });\n            configValue = { value, ...common };\n        }\n        else {\n            const { valueSerialized, ...common } = configValueSeriliazed;\n            const { value, sideExports } = parseValueSerialized(valueSerialized, configName, () => {\n                assert(configValueSeriliazed.type !== 'computed');\n                return configValueSeriliazed.definedAtData;\n            });\n            addSideExports(sideExports);\n            configValue = { value, ...common };\n        }\n        configValues[configName] = configValue;\n    });\n    return configValues;\n    function addSideExports(sideExports) {\n        sideExports.forEach((sideExport) => {\n            const { configName, configValue } = sideExport;\n            if (!configValues[configName]) {\n                configValues[configName] = configValue;\n            }\n            else {\n                // Side-exports have lower precedence.\n                // We can't avoid side-export conflicts upstream. (We cannot know about side-exports at build-time.)\n            }\n        });\n    }\n}\nfunction parseValueSerialized(valueSerialized, configName, getDefinedAtFile) {\n    if (valueSerialized.type === 'js-serialized') {\n        let { value } = valueSerialized;\n        value = parseTransform(value);\n        return { value, sideExports: [] };\n    }\n    if (valueSerialized.type === 'pointer-import') {\n        const { value } = valueSerialized;\n        return { value, sideExports: [] };\n    }\n    if (valueSerialized.type === 'plus-file') {\n        const definedAtFile = getDefinedAtFile();\n        const { exportValues } = valueSerialized;\n        assertPlusFileExport(exportValues, definedAtFile.filePathToShowToUser, configName);\n        let value;\n        let valueWasFound = false;\n        const sideExports = [];\n        Object.entries(exportValues).forEach(([exportName, exportValue]) => {\n            const isSideExport = exportName !== 'default' && exportName !== configName;\n            if (!isSideExport) {\n                value = exportValue;\n                assert(!valueWasFound);\n                valueWasFound = true;\n            }\n            else {\n                sideExports.push({\n                    configName: exportName,\n                    configValue: {\n                        type: 'standard', // We don't support side exports for cumulative values. We could support it but it isn't trivial.\n                        value: exportValue,\n                        definedAtData: {\n                            filePathToShowToUser: definedAtFile.filePathToShowToUser,\n                            fileExportPathToShowToUser: [exportName]\n                        }\n                    }\n                });\n            }\n        });\n        // Already validated by assertPlusFileExport() call above.\n        assert(valueWasFound);\n        return { value, sideExports };\n    }\n    assert(false);\n}\n/* [NULL_HANDLING] Do we really need this?\nfunction assertIsNotNull(configValue: unknown, configName: string, filePathToShowToUser: string) {\n  assert(!filePathToShowToUser.includes('+config.'))\n  // Re-use this for:\n  //  - upcoming config.requestPageContextOnNavigation\n  //  - for cumulative values in the future: we don't need this for now because, currently, cumulative values are never imported.\n  assertUsage(\n    configValue !== null,\n    `Set ${pc.cyan(configName)} to ${pc.cyan('null')} in a +config.js file instead of ${filePathToShowToUser}`\n  )\n}\n*/\n","export { parseGlobResults };\n// TODO/v1-release: remove old design code, and remove all assertions.\nimport { assert, hasProp, isCallable, isObject, cast, isArray } from '../utils.js';\nimport { assertExportValues } from './assert_exports_old_design.js';\nimport { getPageFileObject } from './getPageFileObject.js';\nimport { fileTypes } from './fileTypes.js';\nimport { parsePageConfigs } from '../page-configs/serialize/parsePageConfigs.js';\nfunction parseGlobResults(pageFilesExports) {\n    assert(hasProp(pageFilesExports, 'pageFilesLazy', 'object'));\n    assert(hasProp(pageFilesExports, 'pageFilesEager', 'object'));\n    assert(hasProp(pageFilesExports, 'pageFilesExportNamesLazy', 'object'));\n    assert(hasProp(pageFilesExports, 'pageFilesExportNamesEager', 'object'));\n    assert(hasProp(pageFilesExports.pageFilesLazy, '.page'));\n    assert(hasProp(pageFilesExports.pageFilesLazy, '.page.client') || hasProp(pageFilesExports.pageFilesLazy, '.page.server'));\n    assert(hasProp(pageFilesExports, 'pageFilesList', 'string[]'));\n    assert(hasProp(pageFilesExports, 'pageConfigsSerialized'));\n    assert(hasProp(pageFilesExports, 'pageConfigGlobalSerialized'));\n    const { pageConfigsSerialized, pageConfigGlobalSerialized } = pageFilesExports;\n    assertPageConfigsSerialized(pageConfigsSerialized);\n    assertPageConfigGlobalSerialized(pageConfigGlobalSerialized);\n    const { pageConfigs, pageConfigGlobal } = parsePageConfigs(pageConfigsSerialized, pageConfigGlobalSerialized);\n    const pageFilesMap = {};\n    parseGlobResult(pageFilesExports.pageFilesLazy).forEach(({ filePath, pageFile, globValue }) => {\n        pageFile = pageFilesMap[filePath] = pageFilesMap[filePath] ?? pageFile;\n        const loadModule = globValue;\n        assertLoadModule(loadModule);\n        pageFile.loadFile = async () => {\n            if (!('fileExports' in pageFile)) {\n                pageFile.fileExports = await loadModule();\n                assertExportValues(pageFile);\n            }\n        };\n    });\n    parseGlobResult(pageFilesExports.pageFilesExportNamesLazy).forEach(({ filePath, pageFile, globValue }) => {\n        pageFile = pageFilesMap[filePath] = pageFilesMap[filePath] ?? pageFile;\n        const loadModule = globValue;\n        assertLoadModule(loadModule);\n        pageFile.loadExportNames = async () => {\n            if (!('exportNames' in pageFile)) {\n                const moduleExports = await loadModule();\n                assert(hasProp(moduleExports, 'exportNames', 'string[]'), pageFile.filePath);\n                pageFile.exportNames = moduleExports.exportNames;\n            }\n        };\n    });\n    // `pageFilesEager` contains `.page.route.js` files\n    parseGlobResult(pageFilesExports.pageFilesEager).forEach(({ filePath, pageFile, globValue }) => {\n        pageFile = pageFilesMap[filePath] = pageFilesMap[filePath] ?? pageFile;\n        const moduleExports = globValue;\n        assert(isObject(moduleExports));\n        pageFile.fileExports = moduleExports;\n    });\n    parseGlobResult(pageFilesExports.pageFilesExportNamesEager).forEach(({ filePath, pageFile, globValue }) => {\n        pageFile = pageFilesMap[filePath] = pageFilesMap[filePath] ?? pageFile;\n        const moduleExports = globValue;\n        assert(isObject(moduleExports));\n        assert(hasProp(moduleExports, 'exportNames', 'string[]'), pageFile.filePath);\n        pageFile.exportNames = moduleExports.exportNames;\n    });\n    pageFilesExports.pageFilesList.forEach((filePath) => {\n        pageFilesMap[filePath] = pageFilesMap[filePath] ?? getPageFileObject(filePath);\n    });\n    const pageFiles = Object.values(pageFilesMap);\n    pageFiles.forEach(({ filePath }) => {\n        assert(!filePath.includes('\\\\'));\n    });\n    return { pageFiles, pageConfigs, pageConfigGlobal };\n}\nfunction parseGlobResult(globObject) {\n    const ret = [];\n    Object.entries(globObject).forEach(([fileType, globFiles]) => {\n        cast(fileType);\n        assert(fileTypes.includes(fileType));\n        assert(isObject(globFiles));\n        Object.entries(globFiles).forEach(([filePath, globValue]) => {\n            const pageFile = getPageFileObject(filePath);\n            assert(pageFile.fileType === fileType);\n            ret.push({ filePath, pageFile, globValue });\n        });\n    });\n    return ret;\n}\nfunction assertLoadModule(globValue) {\n    assert(isCallable(globValue));\n}\nfunction assertPageConfigsSerialized(pageConfigsSerialized) {\n    assert(isArray(pageConfigsSerialized));\n    pageConfigsSerialized.forEach((pageConfigSerialized) => {\n        assert(isObject(pageConfigSerialized));\n        assert(hasProp(pageConfigSerialized, 'pageId', 'string'));\n        assert(hasProp(pageConfigSerialized, 'routeFilesystem'));\n        assert(hasProp(pageConfigSerialized, 'configValuesSerialized'));\n    });\n}\nfunction assertPageConfigGlobalSerialized(pageConfigGlobalSerialized) {\n    assert(hasProp(pageConfigGlobalSerialized, 'configValuesSerialized'));\n}\n","export { setPageFiles };\nexport { setPageFilesAsync };\nexport { getPageFilesAll };\nimport { assert, unique } from '../utils.js';\nimport { parseGlobResults } from './parseGlobResults.js';\nimport { getGlobalObject } from '../../utils/getGlobalObject.js';\nconst globalObject = getGlobalObject('setPageFiles.ts', {});\n// TODO:v1-design-release: rename setPageFiles() getPageFilesAll() parseGlobResult()\nfunction setPageFiles(pageFilesExports) {\n    const { pageFiles, pageConfigs, pageConfigGlobal } = parseGlobResults(pageFilesExports);\n    globalObject.pageFilesAll = pageFiles;\n    globalObject.pageConfigs = pageConfigs;\n    globalObject.pageConfigGlobal = pageConfigGlobal;\n}\nfunction setPageFilesAsync(getPageFilesExports) {\n    globalObject.pageFilesGetter = async () => {\n        setPageFiles(await getPageFilesExports());\n    };\n}\nasync function getPageFilesAll(isClientSide, isProduction) {\n    if (isClientSide) {\n        assert(!globalObject.pageFilesGetter);\n        assert(isProduction === undefined);\n    }\n    else {\n        assert(globalObject.pageFilesGetter);\n        assert(typeof isProduction === 'boolean');\n        if (!globalObject.pageFilesAll ||\n            // We reload all glob imports in dev to make auto-reload work\n            !isProduction) {\n            await globalObject.pageFilesGetter();\n        }\n    }\n    const { pageFilesAll, pageConfigs, pageConfigGlobal } = globalObject;\n    assert(pageFilesAll && pageConfigs && pageConfigGlobal);\n    const allPageIds = getAllPageIds(pageFilesAll, pageConfigs);\n    return { pageFilesAll, allPageIds, pageConfigs, pageConfigGlobal };\n}\nfunction getAllPageIds(allPageFiles, pageConfigs) {\n    const fileIds = allPageFiles.filter(({ isDefaultPageFile }) => !isDefaultPageFile).map(({ pageId }) => pageId);\n    const allPageIds = unique(fileIds);\n    const allPageIds2 = pageConfigs.map((p) => p.pageId);\n    return [...allPageIds, ...allPageIds2];\n}\n","// TODO:v1-release: remove this file\nexport { getPageFilesClientSide };\nexport { getPageFilesServerSide };\nimport { assert, assertUsage, isNotNullish } from '../utils.js';\nimport { assertPageFilePath } from '../assertPageFilePath.js';\nfunction getPageFilesClientSide(pageFilesAll, pageId) {\n    return determine(pageFilesAll, pageId, true);\n}\nfunction getPageFilesServerSide(pageFilesAll, pageId) {\n    return determine(pageFilesAll, pageId, false);\n}\nfunction determine(pageFilesAll, pageId, envIsClient) {\n    const env = envIsClient ? 'CLIENT_ONLY' : 'SERVER_ONLY';\n    const pageFilesRelevant = pageFilesAll\n        .filter((p) => p.isRelevant(pageId) && p.fileType !== '.page.route')\n        .sort(getPageFilesSorter(envIsClient, pageId));\n    // Load the `.page.js` files specific to `pageId`\n    const getPageIdFile = (iso) => {\n        const files = pageFilesRelevant.filter((p) => p.pageId === pageId && p.isEnv(iso ? 'CLIENT_AND_SERVER' : env));\n        assertUsage(files.length <= 1, `Merge the following files into a single file: ${files.map((p) => p.filePath).join(' ')}`);\n        const pageIdFile = files[0];\n        assert(pageIdFile === undefined || !pageIdFile.isDefaultPageFile);\n        return pageIdFile;\n    };\n    const pageIdFileEnv = getPageIdFile(false);\n    const pageIdFileIso = getPageIdFile(true);\n    // A page can have only one renderer. In other words: Multiple `renderer/` overwrite each other.\n    // Load only load renderer (`/renderer/_default.*`)\n    const getRendererFile = (iso) => pageFilesRelevant.filter((p) => p.isRendererPageFile && p.isEnv(iso ? 'CLIENT_AND_SERVER' : env))[0];\n    const rendererFileEnv = getRendererFile(false);\n    const rendererFileIso = getRendererFile(true);\n    // A page can load multiple `_defaut.page.*` files of the same `fileType`. In other words: non-renderer `_default.page.*` files are cumulative.\n    // The exception being HTML-only pages because we pick a single page file as client entry. We handle that use case at `renderPage()`.\n    const defaultFilesNonRenderer = pageFilesRelevant.filter((p) => p.isDefaultPageFile && !p.isRendererPageFile && (p.isEnv(env) || p.isEnv('CLIENT_AND_SERVER')));\n    // Ordered by `pageContext.exports` precendence\n    const pageFiles = [pageIdFileEnv, pageIdFileIso, ...defaultFilesNonRenderer, rendererFileEnv, rendererFileIso].filter(isNotNullish);\n    return pageFiles;\n}\nfunction getPageFilesSorter(envIsClient, pageId) {\n    const env = envIsClient ? 'CLIENT_ONLY' : 'SERVER_ONLY';\n    const e1First = -1;\n    const e2First = +1;\n    const noOrder = 0;\n    return (e1, e2) => {\n        // `.page.js` files specific to `pageId` first\n        if (!e1.isDefaultPageFile && e2.isDefaultPageFile) {\n            return e1First;\n        }\n        if (!e2.isDefaultPageFile && e1.isDefaultPageFile) {\n            return e2First;\n        }\n        // Non-renderer `_default.page.*` before `renderer/**/_default.page.*`\n        {\n            const e1_isRenderer = e1.isRendererPageFile;\n            const e2_isRenderer = e2.isRendererPageFile;\n            if (!e1_isRenderer && e2_isRenderer) {\n                return e1First;\n            }\n            if (!e2_isRenderer && e1_isRenderer) {\n                return e2First;\n            }\n            assert(e1_isRenderer === e2_isRenderer);\n        }\n        // Filesystem nearest first\n        {\n            const e1_distance = getPathDistance(pageId, e1.filePath);\n            const e2_distance = getPathDistance(pageId, e2.filePath);\n            if (e1_distance < e2_distance) {\n                return e1First;\n            }\n            if (e2_distance < e1_distance) {\n                return e2First;\n            }\n            assert(e1_distance === e2_distance);\n        }\n        // `.page.server.js`/`.page.client.js` before `.page.js`\n        {\n            if (e1.isEnv(env) && e2.isEnv('CLIENT_AND_SERVER')) {\n                return e1First;\n            }\n            if (e2.isEnv(env) && e1.isEnv('CLIENT_AND_SERVER')) {\n                return e2First;\n            }\n        }\n        return noOrder;\n    };\n}\nfunction getPathDistance(pathA, pathB) {\n    assertPageFilePath(pathA);\n    assertPageFilePath(pathB);\n    // Index of first different character\n    let idx = 0;\n    for (; idx < pathA.length && idx < pathB.length; idx++) {\n        if (pathA[idx] !== pathB[idx])\n            break;\n    }\n    const pathAWithoutCommon = pathA.slice(idx);\n    const pathBWithoutCommon = pathB.slice(idx);\n    const distanceA = pathAWithoutCommon.split('/').length;\n    const distanceB = pathBWithoutCommon.split('/').length;\n    const distance = distanceA + distanceB;\n    return distance;\n}\n","export { getPageConfig };\nexport { getConfigValueFilePathToShowToUser };\nexport { getHookFilePathToShowToUser };\nimport { assert, isArray } from '../utils.js';\nfunction getPageConfig(pageId, pageConfigs) {\n    const pageConfig = pageConfigs.find((p) => p.pageId === pageId);\n    assert(pageConfigs.length > 0);\n    assert(pageConfig);\n    return pageConfig;\n}\nfunction getConfigValueFilePathToShowToUser(definedAtData) {\n    // A unique file path only exists if the config value isn't cumulative nor computed:\n    //  - cumulative config values have multiple file paths\n    //  - computed values don't have any file path\n    if (!definedAtData || isArray(definedAtData))\n        return null;\n    const { filePathToShowToUser } = definedAtData;\n    assert(filePathToShowToUser);\n    return filePathToShowToUser;\n}\nfunction getHookFilePathToShowToUser(definedAtData) {\n    const filePathToShowToUser = getConfigValueFilePathToShowToUser(definedAtData);\n    assert(filePathToShowToUser);\n    return filePathToShowToUser;\n}\n","export { getPageContextExports };\nimport { isScriptFile, isTemplateFile } from '../../utils/isScriptFile.js';\nimport { assert, isObject, assertWarning, assertUsage, makeLast, isBrowser } from '../utils.js';\nimport { assertDefaultExports, forbiddenDefaultExports } from './assert_exports_old_design.js';\nimport { getConfigDefinedAtOptional, getDefinedAtString } from '../page-configs/getConfigDefinedAt.js';\nimport { getConfigValueFilePathToShowToUser } from '../page-configs/helpers.js';\nimport pc from '@brillout/picocolors';\nfunction getPageContextExports(pageFiles, pageConfig) {\n    const configEntries = {};\n    const config = {};\n    const exportsAll = {};\n    // V0.4 design\n    // TODO/v1-release: remove\n    pageFiles.forEach((pageFile) => {\n        const exportValues = getExportValues(pageFile);\n        exportValues.forEach(({ exportName, exportValue, isFromDefaultExport }) => {\n            assert(exportName !== 'default');\n            exportsAll[exportName] = exportsAll[exportName] ?? [];\n            exportsAll[exportName].push({\n                exportValue,\n                exportSource: `${pageFile.filePath} > ${isFromDefaultExport ? `\\`export default { ${exportName} }\\`` : `\\`export { ${exportName} }\\``}`,\n                filePath: pageFile.filePath,\n                _filePath: pageFile.filePath, // TODO/next-major-release: remove\n                _fileType: pageFile.fileType,\n                _isFromDefaultExport: isFromDefaultExport\n            });\n        });\n    });\n    // V1 design\n    const source = {};\n    const sources = {};\n    const addSrc = (src, configName) => {\n        source[configName] = src;\n        sources[configName] ?? (sources[configName] = []);\n        sources[configName].push(src);\n    };\n    const from = {\n        configsStandard: {},\n        configsCumulative: {},\n        configsComputed: {}\n    };\n    if (pageConfig) {\n        Object.entries(pageConfig.configValues).forEach(([configName, configValue]) => {\n            const { value } = configValue;\n            const configValueFilePathToShowToUser = getConfigValueFilePathToShowToUser(configValue.definedAtData);\n            const configDefinedAt = getConfigDefinedAtOptional('Config', configName, configValue.definedAtData);\n            config[configName] = config[configName] ?? value;\n            configEntries[configName] = configEntries[configName] ?? [];\n            // Currently each configName has only one entry. Adding an entry for each overriden config value isn't implemented yet. (This is an isomorphic file and it isn't clear whether this can/should be implemented on the client-side. We should load a minimum amount of code on the client-side.)\n            assert(configEntries[configName].length === 0);\n            configEntries[configName].push({\n                configValue: value,\n                configDefinedAt,\n                configDefinedByFile: configValueFilePathToShowToUser\n            });\n            if (configValue.type === 'standard') {\n                const src = {\n                    type: 'configsStandard',\n                    value: configValue.value,\n                    definedAt: getDefinedAtString(configValue.definedAtData, configName)\n                };\n                addSrc(src, configName);\n                from.configsStandard[configName] = src;\n            }\n            if (configValue.type === 'cumulative') {\n                const src = {\n                    type: 'configsCumulative',\n                    values: configValue.value.map((value, i) => {\n                        const definedAtFile = configValue.definedAtData[i];\n                        assert(definedAtFile);\n                        const definedAt = getDefinedAtString(definedAtFile, configName);\n                        return {\n                            value,\n                            definedAt\n                        };\n                    })\n                };\n                addSrc(src, configName);\n                from.configsCumulative[configName] = src;\n            }\n            if (configValue.type === 'computed') {\n                const src = {\n                    type: 'configsComputed',\n                    value: configValue.value\n                };\n                addSrc(src, configName);\n                from.configsComputed[configName] = src;\n            }\n            // TODO/v1-release: remove\n            const exportName = configName;\n            exportsAll[exportName] = exportsAll[exportName] ?? [];\n            exportsAll[exportName].push({\n                exportValue: value,\n                exportSource: configDefinedAt,\n                filePath: configValueFilePathToShowToUser,\n                _filePath: configValueFilePathToShowToUser,\n                _fileType: null,\n                _isFromDefaultExport: null\n            });\n        });\n    }\n    const pageExports = createObjectWithDeprecationWarning();\n    const exports = {};\n    Object.entries(exportsAll).forEach(([exportName, values]) => {\n        values.forEach(({ exportValue, _fileType, _isFromDefaultExport }) => {\n            exports[exportName] = exports[exportName] ?? exportValue;\n            // Legacy pageContext.pageExports\n            if (_fileType === '.page' && !_isFromDefaultExport) {\n                if (!(exportName in pageExports)) {\n                    pageExports[exportName] = exportValue;\n                }\n            }\n        });\n    });\n    assert(!('default' in exports));\n    assert(!('default' in exportsAll));\n    const pageContextExports = {\n        from,\n        source,\n        sources,\n        // TODO/eventually: deprecate/remove every prop below\n        config,\n        configEntries,\n        exports,\n        exportsAll,\n        pageExports\n    };\n    return pageContextExports;\n}\nfunction getExportValues(pageFile) {\n    const { filePath, fileExports } = pageFile;\n    assert(fileExports); // assume pageFile.loadFile() was called\n    assert(isScriptFile(filePath));\n    const exportValues = [];\n    Object.entries(fileExports)\n        .sort(makeLast(([exportName]) => exportName === 'default')) // `export { bla }` should override `export default { bla }`\n        .forEach(([exportName, exportValue]) => {\n        let isFromDefaultExport = exportName === 'default';\n        if (isFromDefaultExport) {\n            if (isTemplateFile(filePath)) {\n                exportName = 'Page';\n            }\n            else {\n                assertUsage(isObject(exportValue), `The ${pc.cyan('export default')} of ${filePath} should be an object.`);\n                Object.entries(exportValue).forEach(([defaultExportName, defaultExportValue]) => {\n                    assertDefaultExports(defaultExportName, filePath);\n                    exportValues.push({\n                        exportName: defaultExportName,\n                        exportValue: defaultExportValue,\n                        isFromDefaultExport\n                    });\n                });\n                return;\n            }\n        }\n        exportValues.push({\n            exportName,\n            exportValue,\n            isFromDefaultExport\n        });\n    });\n    exportValues.forEach(({ exportName, isFromDefaultExport }) => {\n        assert(!(isFromDefaultExport && forbiddenDefaultExports.includes(exportName)));\n    });\n    return exportValues;\n}\n// TODO/v1-release: remove\nfunction createObjectWithDeprecationWarning() {\n    return new Proxy({}, {\n        get(...args) {\n            // We only show the warning in Node.js because when using Client Routing Vue integration uses `Object.assign(pageContextReactive, pageContext)` which will wrongully trigger the warning. There is no cross-browser way to catch whether the property accessor was initiated by an `Object.assign()` call.\n            if (!isBrowser()) {\n                assertWarning(false, '`pageContext.pageExports` is outdated. Use `pageContext.exports` instead, see https://vike.dev/exports', { onlyOnce: true, showStackTrace: true });\n            }\n            return Reflect.get(...args);\n        }\n    });\n}\n","import { setPageFiles } from '../../shared/getPageFiles.js';\n// @ts-ignore\nimport * as pageFilesExports from 'virtual:vike:importUserCode:client:client-routing';\nsetPageFiles(pageFilesExports);\n","export { assertIsBrowser };\nimport { isBrowser } from './isBrowser.js';\nimport { assert } from './assert.js';\nfunction assertIsBrowser() {\n    assert(isBrowser());\n}\n","export { onLoad };\nimport { assertIsBrowser } from '../../utils/assertIsBrowser.js';\nimport { assertClientRouting } from '../../utils/assertRoutingType.js';\nfunction onLoad() {\n    assertIsBrowser();\n    // Ensure we don't bloat the Server Routing runtime with Client Routing utils\n    assertClientRouting();\n}\n","export { onLoad };\nimport { assertIsBrowser } from '../../utils/assertIsBrowser.js';\nfunction onLoad() {\n    assertIsBrowser();\n}\n","export { getCurrentUrl };\nimport { parseUrl } from './parseUrl.js';\nimport { assert } from './assert.js';\nfunction getCurrentUrl(options) {\n    const url = window.location.href;\n    const { searchOriginal, hashOriginal, pathname } = parseUrl(url, '/');\n    let urlCurrent;\n    if (options?.withoutHash) {\n        urlCurrent = `${pathname}${searchOriginal || ''}`;\n    }\n    else {\n        urlCurrent = `${pathname}${searchOriginal || ''}${hashOriginal || ''}`;\n    }\n    assert(urlCurrent.startsWith('/'));\n    return urlCurrent;\n}\n","export function getPropAccessNotation(key) {\n    return typeof key === 'string' && isKeyDotNotationCompatible(key) ? `.${key}` : `[${JSON.stringify(key)}]`;\n}\nfunction isKeyDotNotationCompatible(key) {\n    return /^[a-z0-9\\$_]+$/i.test(key);\n}\n","// Utils needed by Server Routing.\n// We assume all runtime entries will load this utils.ts file\nimport { onLoad } from './onLoad.js';\nonLoad();\nexport * from '../../utils/assert.js';\nexport * from '../../utils/assertSingleInstance.js';\nexport * from '../../shared/hooks/executeHook.js';\nexport * from '../../utils/checkType.js'; // Only used by Server Routing (not needed for Client Routing)\nexport * from '../../utils/getCurrentUrl.js';\nexport * from '../../utils/getGlobalObject.js';\nexport * from '../../utils/hasProp.js';\nexport * from '../../utils/isCallable.js';\nexport * from '../../utils/isObject.js';\nexport * from '../../utils/objectAssign.js';\nexport * from '../../utils/parseUrl.js';\nexport * from '../../utils/slice.js';\nexport * from '../../utils/unique.js'; // Only used by Server Routing (not needed for Client Routing)\nexport * from '../../utils/getPropAccessNotation.js';\n","// There doesn't seem to be a reliable way to detect React:\n//  - https://stackoverflow.com/questions/73156433/detect-with-javascript-whether-the-website-is-using-react\nexport function isReact() {\n    // Heuristic using values set by React (Dev Tools)\n    // - `window.__REACT_DEVTOOLS_GLOBAL_HOOK__` is an internal API for React Dev Tools\n    //   - https://stackoverflow.com/questions/46807826/how-does-react-developer-tools-determine-that-the-webpage-is-using-react/46808361#46808361\n    //   - In principle, `window.__REACT_DEVTOOLS_GLOBAL_HOOK__` should exist only if React Dev Tools is installed. (Although it seems that it's sometimes defined even when React Dev Tools isn't installed; I don't know why.)\n    // - We use `isReact1`/`isReact2` merely to validate `isReact3` and `isReact4`. Because `isReact1`/`isReact2` can be false negatives:\n    //   - React populates `__REACT_DEVTOOLS_GLOBAL_HOOK__.renderers` fairly late => false negative early in the rendering phase\n    //   - `window.__REACT_DEVTOOLS_GLOBAL_HOOK__` is `undefined` if React Dev Tools isn't installed => false negative\n    const isReact1 = !!window.__REACT_DEVTOOLS_GLOBAL_HOOK__?.renderers?.size;\n    const isReact2 = !!window.__REACT_DEVTOOLS_GLOBAL_HOOK__?.rendererInterfaces?.size;\n    // Heuristic using values set by `@vitejs/plugin-react`\n    const isReact3 = !!window.__vite_plugin_react_preamble_installed__;\n    /* Also set by Preact Vite plugin `@preact/preset-vite`\n    const isReact4 = !!(window as any).$RefreshReg$\n    */\n    // console.log({ isReact1, isReact2, isReact3 })\n    return isReact1 || isReact2 || isReact3;\n}\n","import { isObject } from './isObject.js';\nexport { isSameErrorMessage };\nfunction isSameErrorMessage(err1, err2) {\n    if (!isObject(err1) || !isObject(err2))\n        return false;\n    return err1.message === err2.message;\n}\n","export function redirectHard(url) {\n    window.location.href = url;\n}\n","export function sleep(milliseconds) {\n    return new Promise((r) => setTimeout(r, milliseconds));\n}\n","export { throttle };\nfunction throttle(func, waitTime) {\n    let isQueued = false;\n    return () => {\n        if (!isQueued) {\n            isQueued = true;\n            setTimeout(() => {\n                isQueued = false;\n                func();\n            }, waitTime);\n        }\n    };\n}\n","export { onPageHide };\nexport { onPageShow };\nfunction onPageHide(listener) {\n    window.addEventListener('visibilitychange', () => {\n        if (document.visibilityState === 'hidden') {\n            listener();\n        }\n    });\n}\nfunction onPageShow(listener) {\n    window.addEventListener('visibilitychange', () => {\n        if (document.visibilityState === 'visible') {\n            listener();\n        }\n    });\n}\n","export { augmentType };\nimport { assert } from './assert.js';\n/** Help TypeScript augment the type of objects. */\nfunction augmentType(thing, clone) {\n    // @ts-ignore\n    assert(thing === clone);\n}\n","export function genPromise() {\n    let resolve;\n    const promise = new Promise((r) => (resolve = r));\n    return { promise, resolve };\n}\n","// Utils needed by Client Routing.\n// We assume all runtime entries will load this utils.ts file\nimport { onLoad } from './onLoad.js';\nonLoad();\n// We load the Server Routing utils: we tolerate the tiny amount of code that is only needed by Server Routing (only 1-2 lines).\n// We re-export some of the utils down below only to list the utils needed by Client Routing.\nexport * from '../server-routing-runtime/utils.js';\nexport * from '../../utils/assert.js';\nexport * from '../../utils/assertSingleInstance.js';\nexport * from '../../shared/hooks/executeHook.js';\nexport * from '../../utils/getCurrentUrl.js';\nexport * from '../../utils/getGlobalObject.js';\nexport * from '../../utils/hasProp.js';\nexport * from '../../utils/isBrowser.js';\nexport * from '../../utils/isCallable.js';\nexport * from '../../utils/isObject.js';\nexport * from '../../utils/isPlainObject.js';\nexport * from '../../utils/isReact.js';\nexport * from '../../utils/isSameErrorMessage.js';\nexport * from '../../utils/objectAssign.js';\nexport * from '../../utils/parseUrl.js';\nexport * from '../../utils/PromiseType.js';\nexport * from '../../utils/redirectHard.js';\nexport * from '../../utils/sleep.js';\nexport * from '../../utils/slice.js';\nexport * from '../../utils/throttle.js';\nexport * from '../../utils/assertRoutingType.js';\nexport * from '../../utils/onPageVisibilityChange.js';\nexport * from '../../utils/augmentType.js';\nexport * from '../../utils/PROJECT_VERSION.js';\nexport * from '../../utils/genPromise.js';\n","import { parse } from '@brillout/json-serializer/parse';\nimport { hasProp, assert, assertUsage } from '../server-routing-runtime/utils.js';\nexport { getPageContextSerializedInHtml };\nfunction getPageContextSerializedInHtml() {\n    // elem should exist because:\n    // 1. <script id=\"vike_pageContext\" type=\"application/json\"> appears before the <script> that loads Vike's client runtime (which includes this file)\n    // 2. <script id=\"vike_pageContext\" type=\"application/json\"> is neither async nor defer\n    // See https://github.com/vikejs/vike/pull/1271\n    const id = 'vike_pageContext';\n    const elem = document.getElementById(id);\n    assertUsage(elem, \n    // It seems like it can be missing because of malformed HTML: https://github.com/vikejs/vike/issues/913\n    `Couldn't find #${id} (which Vike automatically injects in the HTML): make sure it exists (i.e. don't remove it and make sure your HTML isn't malformed)`);\n    const pageContextJson = elem.textContent;\n    assert(pageContextJson);\n    const pageContextSerializedInHtml = parse(pageContextJson);\n    assert(hasProp(pageContextSerializedInHtml, 'pageId', 'string'));\n    assert(hasProp(pageContextSerializedInHtml, 'routeParams', 'string{}'));\n    return pageContextSerializedInHtml;\n}\n","export { analyzePageServerSide };\nimport { assert } from '../utils.js';\nimport { getPageFilesServerSide } from './getAllPageIdFiles.js';\nasync function analyzePageServerSide(pageFilesAll, pageId) {\n    const pageFilesServerSide = getPageFilesServerSide(pageFilesAll, pageId);\n    const pageFilesServerSideOnly = pageFilesServerSide.filter((p) => p.fileType === '.page.server');\n    await Promise.all(pageFilesServerSideOnly.map(async (p) => {\n        // In production, `exportNames` are preload\n        if (p.exportNames) {\n            return;\n        }\n        assert(p.loadExportNames, pageId);\n        await p.loadExportNames();\n    }));\n    const hasOnBeforeRenderServerSideOnlyHook = pageFilesServerSideOnly.some(({ exportNames }) => {\n        assert(exportNames);\n        return exportNames.includes('onBeforeRender');\n    });\n    return { hasOnBeforeRenderServerSideOnlyHook };\n}\n","export { getConfigValueRuntime };\nexport { getConfigValueTyped };\nimport { assert, assertUsage, getValuePrintable } from '../utils.js';\nimport pc from '@brillout/picocolors';\nimport { getConfigDefinedAtOptional } from './getConfigDefinedAt.js';\nfunction getConfigValueTyped(configValue, configName, type) {\n    /* [NULL_HANDLING] Do we really need this? This doesn't seem to make sense, let's eventually (re)move this.\n    // Enable users to suppress global config values by setting the local config value to null\n    if (configValue.value === null) return null\n    */\n    const { value, definedAtData } = configValue;\n    if (type)\n        assertConfigValueType(value, type, configName, definedAtData);\n    return configValue;\n}\nfunction getConfigValueRuntime(pageConfig, configName, type) {\n    const configValue = pageConfig.configValues[configName];\n    if (!configValue)\n        return null;\n    return getConfigValueTyped(configValue, configName, type);\n}\nfunction assertConfigValueType(value, type, configName, definedAtData) {\n    assert(value !== null);\n    const typeActual = typeof value;\n    if (typeActual === type)\n        return;\n    const valuePrintable = getValuePrintable(value);\n    const problem = valuePrintable !== null\n        ? `value ${pc.cyan(valuePrintable)}`\n        : `type ${pc.cyan(typeActual)}`;\n    const configDefinedAt = getConfigDefinedAtOptional('Config', configName, definedAtData);\n    const errMsg = `${configDefinedAt} has an invalid ${problem}: it should be a ${pc.cyan(type)} instead`;\n    assertUsage(false, errMsg);\n}\n","export { getHook };\nexport { getHookFromPageConfig };\nexport { getHookFromPageConfigGlobal };\nexport { assertHook };\nexport { getHook_setIsPrerenderering };\n// TODO/v1-release: remove\n// We export for old V0.4 design which doesn't support configooksTimeout\nexport { getHookTimeoutDefault };\nimport { getGlobalObject } from '../../utils/getGlobalObject.js';\nimport { getHookFilePathToShowToUser } from '../page-configs/helpers.js';\nimport { getConfigValueRuntime } from '../page-configs/getConfigValue.js';\nimport { assert, assertUsage, checkType, isCallable, isObject } from '../utils.js';\nimport pc from '@brillout/picocolors';\nconst globalObject = getGlobalObject('getHook.ts', {});\nfunction getHook(pageContext, hookName) {\n    if (!(hookName in pageContext.exports)) {\n        return null;\n    }\n    const { hooksTimeout } = pageContext.config;\n    const hookTimeout = getHookTimeout(hooksTimeout, hookName);\n    const hookFn = pageContext.exports[hookName];\n    const file = pageContext.exportsAll[hookName][0];\n    assert(file.exportValue === hookFn);\n    if (hookFn === null)\n        return null;\n    const hookFilePath = file.filePath;\n    assert(hookFilePath);\n    assert(!hookFilePath.endsWith(' '));\n    assertHookFn(hookFn, { hookName, hookFilePath });\n    return { hookFn, hookName, hookFilePath, hookTimeout };\n}\nfunction getHookFromPageConfig(pageConfig, hookName) {\n    const configValue = getConfigValueRuntime(pageConfig, hookName);\n    const hooksTimeout = getConfigValueRuntime(pageConfig, 'hooksTimeout')?.value;\n    if (!configValue)\n        return null;\n    const hookFn = configValue.value;\n    if (!hookFn)\n        return null;\n    const hookFilePath = getHookFilePathToShowToUser(configValue.definedAtData);\n    // hook isn't a computed nor a cumulative config => hookFilePath should always be defined\n    assert(hookFilePath);\n    assertHookFn(hookFn, { hookName, hookFilePath });\n    const hookTimeout = getHookTimeout(hooksTimeout, hookName);\n    return { hookFn, hookName, hookFilePath, hookTimeout };\n}\nfunction getHookFromPageConfigGlobal(pageConfigGlobal, hookName) {\n    const configValue = pageConfigGlobal.configValues[hookName];\n    if (!configValue)\n        return null;\n    const hookFn = configValue.value;\n    if (!hookFn)\n        return null;\n    const hookFilePath = getHookFilePathToShowToUser(configValue.definedAtData);\n    // hook isn't a computed nor a cumulative config => hookFilePath should always be defined\n    assert(hookFilePath);\n    assertHookFn(hookFn, { hookName, hookFilePath });\n    // We could use the global value of configooksTimeout but it requires some non-trivial refactoring\n    const hookTimeout = getHookTimeoutDefault(hookName);\n    return { hookFn, hookName, hookFilePath, hookTimeout };\n}\nfunction assertHook(pageContext, hookName) {\n    getHook(pageContext, hookName);\n}\nfunction assertHookFn(hookFn, { hookName, hookFilePath }) {\n    assert(hookName && hookFilePath);\n    assert(!hookName.endsWith(')'));\n    assertUsage(isCallable(hookFn), `Hook ${hookName}() defined by ${hookFilePath} should be a function`);\n    checkType(hookFn);\n}\nfunction getHookTimeout(hooksTimeoutProvidedByUser, hookName) {\n    const hooksTimeoutProvidedbyUserNormalized = getHooksTimeoutProvidedByUserNormalized(hooksTimeoutProvidedByUser);\n    if (hooksTimeoutProvidedbyUserNormalized === false)\n        return { error: false, warning: false };\n    const providedbyUser = hooksTimeoutProvidedbyUserNormalized[hookName];\n    const hookTimeout = getHookTimeoutDefault(hookName);\n    if (providedbyUser?.error !== undefined)\n        hookTimeout.error = providedbyUser.error;\n    if (providedbyUser?.warning !== undefined)\n        hookTimeout.warning = providedbyUser.warning;\n    return hookTimeout;\n}\n// Ideally this should be called only once and at build-time (to avoid bloating the client-side bundle), but we didn't implement any mechanism to valide config values at build-time yet\nfunction getHooksTimeoutProvidedByUserNormalized(hooksTimeoutProvidedByUser) {\n    if (hooksTimeoutProvidedByUser === undefined)\n        return {};\n    if (hooksTimeoutProvidedByUser === false)\n        return false;\n    assertUsage(isObject(hooksTimeoutProvidedByUser), `Setting ${pc.cyan('hooksTimeout')} should be ${pc.cyan('false')} or an object`);\n    const hooksTimeoutProvidedByUserNormalized = {};\n    Object.entries(hooksTimeoutProvidedByUser).forEach(([hookName, hookTimeoutProvidedbyUser]) => {\n        if (hookTimeoutProvidedbyUser === false) {\n            hooksTimeoutProvidedByUserNormalized[hookName] = { error: false, warning: false };\n            return;\n        }\n        assertUsage(isObject(hookTimeoutProvidedbyUser), `Setting ${pc.cyan(`hooksTimeout.${hookName}`)} should be ${pc.cyan('false')} or an object`);\n        const [error, warning] = ['error', 'warning'].map((timeoutName) => {\n            const timeoutVal = hookTimeoutProvidedbyUser[timeoutName];\n            if (timeoutVal === undefined || timeoutVal === false)\n                return timeoutVal;\n            const errPrefix = `Setting ${pc.cyan(`hooksTimeout.${hookName}.${timeoutName}`)} should be`;\n            assertUsage(typeof timeoutVal === 'number', `${errPrefix} ${pc.cyan('false')} or a number`);\n            assertUsage(timeoutVal > 0, `${errPrefix} a positive number`);\n            return timeoutVal;\n        });\n        hooksTimeoutProvidedByUserNormalized[hookName] = { error, warning };\n    });\n    return hooksTimeoutProvidedByUserNormalized;\n}\nfunction getHookTimeoutDefault(hookName) {\n    if (hookName === 'onBeforeRoute') {\n        return {\n            error: 5 * 1000,\n            warning: 1 * 1000\n        };\n    }\n    if (globalObject.isPrerendering) {\n        return {\n            error: 2 * 60 * 1000,\n            warning: 30 * 1000\n        };\n    }\n    else {\n        assert(!hookName.toLowerCase().includes('prerender'));\n    }\n    return {\n        error: 30 * 1000,\n        warning: 4 * 1000\n    };\n}\nfunction getHook_setIsPrerenderering() {\n    globalObject.isPrerendering = true;\n}\n","// TODO: move to ../node/runtime/html/notSerializable.ts once code is distributed as ESM\nexport const notSerializable = 'not-serializable';\n","export { getPageContextProxyForUser };\nimport { assert, assertUsage, assertWarning, getGlobalObject, getPropAccessNotation } from '../server-routing-runtime/utils.js';\nimport { notSerializable } from '../../shared/notSerializable.js';\nconst globalObject = getGlobalObject('getPageContextProxyForUser.ts', {});\n/**\n * Throw error when pageContext value isn't:\n * - serializable, or\n * - defined.\n */\nfunction getPageContextProxyForUser(pageContext) {\n    assert([true, false].includes(pageContext._hasPageContextFromServer));\n    assert([true, false].includes(pageContext._hasPageContextFromClient));\n    return new Proxy(pageContext, {\n        get(_, prop) {\n            const val = pageContext[prop];\n            const propName = getPropAccessNotation(prop);\n            assertUsage(val !== notSerializable, `Can't access pageContext${propName} on the client side. Because it can't be serialized, see server logs.`);\n            passToClientHint(pageContext, prop, propName);\n            return val;\n        }\n    });\n}\nfunction passToClientHint(pageContext, prop, propName) {\n    if (handleVueReactivity(prop))\n        return;\n    // `prop in pageContext` is the trick we use to know the passToClient value on the client-side, as we set a value to all passToClient props, even `undefined` ones:\n    // ```html\n    // <script id=\"vike_pageContext\" type=\"application/json\">{\"pageProps\":\"!undefined\"}</script>\n    // ```\n    if (prop in pageContext)\n        return;\n    if (isWhitelisted(prop))\n        return;\n    // The trick described above (`prop in pageContext`) doesn't work if Vike doesn't fetch any pageContext from the server.\n    // - There would still be some value to show a warning, but it isn't worth it because of the confusion that the first recommendation (adding `prop` to `passToClient`) wouldn't actually remove the warning, and only the second recommendation (using `prop in pageContext` instead of `pageContext[prop]`) would work.\n    if (!pageContext._hasPageContextFromServer)\n        return;\n    const errMsg = `pageContext${propName} isn't defined on the client-side, see https://vike.dev/passToClient#error`;\n    if (\n    // TODO/next-major-release always make it an error.\n    // - Remove pageContext._hasPageContextFromClient logic (IIRC this is its only use case).\n    pageContext._hasPageContextFromClient) {\n        assertWarning(false, errMsg, { onlyOnce: false, showStackTrace: true });\n    }\n    else {\n        assertUsage(false, errMsg);\n    }\n}\nconst WHITELIST = [\n    'then',\n    // Vue calls toJSON()\n    'toJSON'\n];\nfunction isWhitelisted(prop) {\n    if (WHITELIST.includes(prop))\n        return true;\n    if (typeof prop === 'symbol')\n        return true; // Vue tries to access some symbols\n    if (typeof prop !== 'string')\n        return true;\n    if (prop.startsWith('__v_'))\n        return true; // Vue internals upon `reactive(pageContext)`\n    return false;\n}\n// Handle Vue's reactivity.\n// When changing a reactive object:\n// - Vue tries to read its old value first. This triggers a `assertIsDefined()` failure if e.g. `pageContextReactive.routeParams = pageContextNew.routeParams` and `pageContextReactive` has no `routeParams`.\n// - Vue seems to read __v_raw before reading the property.\nfunction handleVueReactivity(prop) {\n    if (globalObject.prev === prop || globalObject.prev === '__v_raw')\n        return true;\n    globalObject.prev = prop;\n    window.setTimeout(() => {\n        globalObject.prev = undefined;\n    }, 0);\n    return false;\n}\n","export { addIs404ToPageProps };\nimport { assert, assertWarning, hasProp, isObject } from './utils.js';\nimport { isErrorPage } from './error-page.js';\nfunction addIs404ToPageProps(pageContext) {\n    assertIs404(pageContext);\n    addIs404(pageContext);\n}\nfunction assertIs404(pageContext) {\n    if (isErrorPage(pageContext.pageId, pageContext._pageConfigs)) {\n        assert(hasProp(pageContext, 'is404', 'boolean'));\n    }\n}\nfunction addIs404(pageContext) {\n    if (pageContext.is404 === undefined || pageContext.is404 === null)\n        return;\n    const pageProps = pageContext.pageProps || {};\n    if (!isObject(pageProps)) {\n        assertWarning(false, 'pageContext.pageProps should be an object', { showStackTrace: true, onlyOnce: true });\n        return;\n    }\n    pageProps.is404 = pageProps.is404 || pageContext.is404;\n    pageContext.pageProps = pageProps;\n}\n","export { preparePageContextForUserConsumption };\nimport { assert, assertWarning, compareString } from './utils.js';\nimport { addIs404ToPageProps } from './addIs404ToPageProps.js';\nfunction preparePageContextForUserConsumption(pageContext) {\n    assert(pageContext.pageId);\n    assert('config' in pageContext);\n    assert('configEntries' in pageContext);\n    addIs404ToPageProps(pageContext);\n    // TODO/next-major-release: remove\n    if (!('_pageId' in pageContext)) {\n        Object.defineProperty(pageContext, '_pageId', {\n            get() {\n                assertWarning(false, 'pageContext._pageId has been renamed to pageContext.pageId', {\n                    showStackTrace: true,\n                    onlyOnce: true\n                });\n                return pageContext.pageId;\n            },\n            enumerable: false\n        });\n    }\n    // For a more readable `console.log(pageContext)` output\n    sortPageContext(pageContext);\n}\n// Sort `pageContext` keys alphabetically, in order to make reading the `console.log(pageContext)` output easier\nfunction sortPageContext(pageContext) {\n    let descriptors = Object.getOwnPropertyDescriptors(pageContext);\n    for (const key of Object.keys(pageContext))\n        delete pageContext[key];\n    descriptors = Object.fromEntries(Object.entries(descriptors).sort(([key1], [key2]) => compareString(key1, key2)));\n    Object.defineProperties(pageContext, descriptors);\n}\n","export { preparePageContextForUserConsumptionClientSide };\nimport { assert, objectAssign } from '../server-routing-runtime/utils.js';\nimport { getPageContextProxyForUser } from './getPageContextProxyForUser.js';\nimport { preparePageContextForUserConsumption } from '../../shared/preparePageContextForUserConsumption.js';\nfunction preparePageContextForUserConsumptionClientSide(pageContext, isClientRouting) {\n    if (isClientRouting) {\n        const pageContextTyped = pageContext;\n        assert([true, false].includes(pageContextTyped.isHydration));\n        assert([true, false, null].includes(pageContextTyped.isBackwardNavigation));\n    }\n    else {\n        const pageContextTyped = pageContext;\n        assert(pageContextTyped.isHydration === true);\n        assert(pageContextTyped.isBackwardNavigation === null);\n    }\n    const Page = pageContext.config.Page ||\n        // TODO/next-major-release: remove\n        pageContext.exports.Page;\n    objectAssign(pageContext, { Page });\n    // TODO/next-major-release: remove\n    // - Requires https://github.com/vikejs/vike-vue/issues/198\n    // - Last time I tried to remove it (https://github.com/vikejs/vike/commit/705fd23598d9d69bf46a52c8550216cd7117ce71) the tests were failing as expected: only the Vue integrations that used shallowReactive() failed.\n    supportVueReactiviy(pageContext);\n    preparePageContextForUserConsumption(pageContext);\n    const pageContextProxy = getPageContextProxyForUser(pageContext);\n    return pageContextProxy;\n}\n// With Vue + Cient Routing, the `pageContext` is made reactive:\n// ```js\n// import { reactive } from 'vue'\n// // See /examples/vue-full/renderer/createVueApp.ts\n// const pageContextReactive = reactive(pageContext)\n// ```\nfunction supportVueReactiviy(pageContext) {\n    resolveGetters(pageContext);\n}\n// Remove propery descriptor getters because they break Vue's reactivity.\n// E.g. resolve the `pageContext.urlPathname` getter.\nfunction resolveGetters(pageContext) {\n    Object.entries(pageContext).forEach(([key, val]) => {\n        delete pageContext[key];\n        pageContext[key] = val;\n    });\n}\n","export { removeBuiltInOverrides };\nimport { assert, assertWarning } from '../utils.js';\nconst BUILT_IN_CLIENT_ROUTER = ['urlPathname', 'urlParsed'];\nconst BUILT_IN_CLIENT = ['Page', 'pageExports', 'exports'];\nfunction removeBuiltInOverrides(pageContext) {\n    const alreadySet = [...BUILT_IN_CLIENT, ...BUILT_IN_CLIENT_ROUTER];\n    alreadySet.forEach((prop) => {\n        if (prop in pageContext) {\n            // We need to cast `BUILT_IN_CLIENT` to `string[]`\n            //  - https://stackoverflow.com/questions/56565528/typescript-const-assertions-how-to-use-array-prototype-includes\n            //  - https://stackoverflow.com/questions/57646355/check-if-string-is-included-in-readonlyarray-in-typescript\n            if (BUILT_IN_CLIENT_ROUTER.includes(prop)) {\n                assert(prop.startsWith('url'));\n                assertWarning(false, `pageContext.${prop} is already available in the browser when using Client Routing; adding '${prop}' to passToClient has no effect`, { onlyOnce: true });\n            }\n            else {\n                assertWarning(false, `pageContext.${prop} is a built-in that cannot be overriden; adding '${prop}' to passToClient has no effect`, { onlyOnce: true });\n            }\n            delete pageContext[prop];\n        }\n    });\n}\n","export { urlToFile };\nexport { baseServer };\nimport { assert } from './assert.js';\nimport { parseUrl } from './parseUrl.js';\nimport { slice } from './slice.js';\n// - When doing a `.pageContext.json` HTTP request, the base URL should be preserved. (The server-side will handle the base URL.)\n// - While pre-rendering there is no base URL\nconst baseServer = '/';\nfunction urlToFile(url, fileExtension, doNotCreateExtraDirectory) {\n    const { pathnameOriginal, searchOriginal, hashOriginal } = parseUrl(url, baseServer);\n    if (url.startsWith('/')) {\n        assert(url === `${pathnameOriginal}${searchOriginal || ''}${hashOriginal || ''}`, { url });\n    }\n    const hasTrailingSlash = pathnameOriginal.endsWith('/');\n    let pathnameModified;\n    if (doNotCreateExtraDirectory && pathnameOriginal !== '/') {\n        if (hasTrailingSlash) {\n            pathnameModified = slice(pathnameOriginal, 0, -1);\n        }\n        else {\n            pathnameModified = pathnameOriginal;\n        }\n        assert(!pathnameModified.endsWith('/'), { url });\n        assert(pathnameModified !== '');\n    }\n    else {\n        pathnameModified = pathnameOriginal + (hasTrailingSlash ? '' : '/') + 'index';\n    }\n    assert(pathnameModified);\n    pathnameModified = pathnameModified + fileExtension;\n    const fileUrl = `${pathnameModified}${searchOriginal || ''}${hashOriginal || ''}`;\n    return fileUrl;\n}\n","export { getPageContextRequestUrl };\nexport { pageContextJsonFileExtension };\nexport { doNotCreateExtraDirectory };\n// This module isn't loaded by the client-side of Server Routing => we don't inlcude `urlToFile` to `./utils.ts`\nimport { urlToFile } from '../utils/urlToFile.js';\nconst pageContextJsonFileExtension = '.pageContext.json';\n// `/some-base-url/index.pageContext.json` instead of `/some-base-url.pageContext.json` in order to comply to common reverse proxy setups, see https://github.com/vikejs/vike/issues/443\nconst doNotCreateExtraDirectory = false;\n// See node/renderPage/handlePageContextRequestUrl.ts\nfunction getPageContextRequestUrl(url) {\n    const pageContextRequestUrl = urlToFile(url, pageContextJsonFileExtension, doNotCreateExtraDirectory);\n    return pageContextRequestUrl;\n}\n","export { assertPageContextProvidedByUser };\nimport { assert, assertUsage, assertWarning, isObject } from './utils.js';\nimport pc from '@brillout/picocolors';\nfunction assertPageContextProvidedByUser(pageContextProvidedByUser, { hookName, hookFilePath }) {\n    if (pageContextProvidedByUser === undefined || pageContextProvidedByUser === null)\n        return;\n    assert(!hookName.endsWith(')'));\n    const errPrefix = `The ${pc.cyan('pageContext')} object provided by the ${hookName}() hook defined by ${hookFilePath}`;\n    assertUsage(isObject(pageContextProvidedByUser), `${errPrefix} should be an object (but it's ${pc.cyan(`typeof pageContext === ${JSON.stringify(typeof pageContextProvidedByUser)}`)} instead)`);\n    assertUsage(!('_objectCreatedByVike' in pageContextProvidedByUser), `${errPrefix} shouldn't be the whole ${pc.cyan('pageContext')} object, see https://vike.dev/pageContext-manipulation#do-not-return-entire-pagecontext`);\n    // In principle, it's possible to use onBeforeRoute()` to override and define the whole routing.\n    // Is that a good idea to allow users to do this? Beyond deep integration with Vue Router or React Router, is there a use case for this?\n    assertWarning(!('pageId' in pageContextProvidedByUser), `${errPrefix} sets ${pc.cyan('pageContext.pageId')} which means that Vike's routing is overriden. This is an experimental feature: make sure to contact a vike maintainer before using this.`, { onlyOnce: true });\n    assertUsage(!('is404' in pageContextProvidedByUser), `${errPrefix} sets ${pc.cyan('pageContext.is404')} which is forbidden, use ${pc.cyan('throw render()')} instead, see https://vike.dev/render`);\n}\n","export { assertHookReturnedObject };\nimport { assert, assertUsage, stringifyStringArray } from './utils.js';\nfunction assertHookReturnedObject(obj, keysExpected, errPrefix) {\n    assert(!errPrefix.endsWith(' '));\n    const keysUnknown = [];\n    const keys = Object.keys(obj);\n    for (const key of keys) {\n        if (!keysExpected.includes(key)) {\n            keysUnknown.push(key);\n        }\n    }\n    assertUsage(keysUnknown.length === 0, [\n        errPrefix,\n        'returned an object with following unknown keys:',\n        stringifyStringArray(keysUnknown) + '.',\n        'Only following keys are allowed:',\n        stringifyStringArray(keysExpected) + '.'\n    ].join(' '));\n}\n","export { assertOnBeforeRenderHookReturn };\nimport { assertUsage, isPlainObject } from './utils.js';\nimport { assertPageContextProvidedByUser } from './assertPageContextProvidedByUser.js';\nimport { assertHookReturnedObject } from './assertHookReturnedObject.js';\nimport pc from '@brillout/picocolors';\nfunction assertOnBeforeRenderHookReturn(hookReturnValue, hookFilePath) {\n    if (hookReturnValue === undefined || hookReturnValue === null) {\n        return;\n    }\n    const errPrefix = `The onBeforeRender() hook defined by ${hookFilePath}`;\n    assertUsage(isPlainObject(hookReturnValue), `${errPrefix} should return a plain JavaScript object, ${pc.cyan('undefined')}, or ${pc.cyan('null')}`);\n    assertHookReturnedObject(hookReturnValue, ['pageContext'], errPrefix);\n    if (hookReturnValue.pageContext) {\n        assertPageContextProvidedByUser(hookReturnValue['pageContext'], { hookName: 'onBeforeRender', hookFilePath });\n    }\n}\n","import { isPlainObject } from './isPlainObject.js';\nexport { isObjectWithKeys };\nfunction isObjectWithKeys(obj, keys) {\n    if (!isPlainObject(obj)) {\n        return false;\n    }\n    for (const key of Object.keys(obj)) {\n        if (!keys.includes(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n","export { joinEnglish };\nimport { assert } from './assert.js';\n// https://stackoverflow.com/questions/53879088/join-an-array-by-commas-and-and/53879103#53879103\nfunction joinEnglish(arr, conjunction, colorizer = (s) => s) {\n    assert(arr.length > 0);\n    if (arr.length === 1)\n        return colorizer(arr[0]);\n    const firsts = arr.slice(0, arr.length - 1);\n    const last = arr[arr.length - 1];\n    return firsts.map(colorizer).join(', ') + `, ${conjunction} ` + colorizer(last);\n}\n","// Utils needed by:\n//  - runtime of server\n//  - runtime of client (Client Routing)\n// Ensure we don't bloat runtime of Server Routing with the utils down below\nimport { assertClientRouting } from '../../utils/assertRoutingType.js';\nimport { isBrowser } from '../../utils/isBrowser.js';\nif (isBrowser()) {\n    assertClientRouting();\n}\nexport * from '../../utils/assert.js';\nexport * from '../../utils/hasProp.js';\nexport * from '../../utils/isObjectWithKeys.js';\nexport * from '../../utils/sorter.js';\nexport * from '../../utils/isPromise.js';\nexport * from '../../utils/isPlainObject.js';\nexport * from '../../utils/objectAssign.js';\nexport * from '../../utils/slice.js';\nexport * from '../../utils/unique.js';\nexport * from '../../utils/isBrowser.js';\nexport * from '../../utils/parseUrl.js';\nexport * from '../../utils/checkType.js';\nexport * from '../../utils/joinEnglish.js';\nexport * from '../../utils/truncateString.js';\nexport * from '../../utils/isCallable.js';\n","export { executeGuardHook };\nimport { getHook, getHookTimeoutDefault } from '../hooks/getHook.js';\nimport { assert, assertUsage, isCallable } from './utils.js';\nimport { executeHook } from '../hooks/executeHook.js';\nconst errIntro = 'The guard() hook defined by';\nasync function executeGuardHook(pageContext, prepareForUserConsumption) {\n    let hook;\n    if (pageContext._pageFilesAll.length > 0) {\n        // V0.4 design\n        assert(pageContext._pageConfigs.length === 0);\n        hook = findPageGuard(pageContext.pageId, pageContext._pageFilesAll);\n    }\n    else {\n        // V1 design\n        hook = getHook(pageContext, 'guard');\n    }\n    if (!hook)\n        return;\n    const guard = hook.hookFn;\n    let pageContextForUserConsumption = pageContext;\n    const res = prepareForUserConsumption(pageContext);\n    if (res)\n        pageContextForUserConsumption = res;\n    const hookResult = await executeHook(() => guard(pageContextForUserConsumption), hook, pageContext);\n    assertUsage(hookResult === undefined, `${errIntro} ${hook.hookFilePath} returns a value, but guard() shouldn't return any value`);\n}\nfunction findPageGuard(pageId, pageFilesAll) {\n    const pageRouteFile = pageFilesAll.find((p) => p.pageId === pageId && p.fileType === '.page.route');\n    if (!pageRouteFile)\n        return null;\n    const { filePath, fileExports } = pageRouteFile;\n    assert(fileExports); // loadPageRoutes() should already have been called\n    const hookFn = fileExports.guard;\n    if (!hookFn)\n        return null;\n    const hookFilePath = filePath;\n    const hookTimeout = getHookTimeoutDefault('guard');\n    assertUsage(isCallable(hookFn), `${errIntro} ${hookFilePath} should be a function`);\n    return { hookFn, hookName: 'guard', hookFilePath, hookTimeout };\n}\n","export { redirect };\nexport { render };\nexport { RenderErrorPage };\nexport { isAbortError };\nexport { isAbortPageContext };\nexport { logAbortErrorHandled };\nexport { getPageContextFromAllRewrites };\nexport { AbortRender };\nexport { assertNoInfiniteAbortLoop };\nimport { isUserHookError } from '../hooks/executeHook.js';\nimport { assert, assertInfo, assertUsage, assertUsageUrlPathnameAbsolute, assertUsageUrlRedirectTarget, assertWarning, checkType, hasProp, joinEnglish, objectAssign, truncateString } from './utils.js';\nimport pc from '@brillout/picocolors';\n/**\n * Abort the rendering of the current page, and redirect the user to another URL instead.\n *\n * https://vike.dev/redirect\n *\n * @param url The URL to redirect to.\n * @param statusCode By default a temporary redirection (`302`) is performed. For permanent redirections (`301`), use `config.redirects` https://vike.dev/redirects instead or, alternatively, set the `statusCode` argument to `301`.\n */\nfunction redirect(url, statusCode) {\n    const abortCaller = 'throw redirect()';\n    assertUsageUrlRedirectTarget(url, getErrPrefix(abortCaller));\n    const args = [JSON.stringify(url)];\n    if (!statusCode) {\n        statusCode = 302;\n    }\n    else {\n        assertStatusCode(statusCode, [301, 302], 'redirect');\n        args.push(String(statusCode));\n    }\n    const pageContextAbort = {};\n    objectAssign(pageContextAbort, {\n        _abortCaller: abortCaller,\n        _abortCall: `redirect(${args.join(', ')})`,\n        _urlRedirect: {\n            url,\n            statusCode\n        }\n    });\n    return AbortRender(pageContextAbort);\n}\nfunction render(urlOrStatusCode, abortReason) {\n    const args = [typeof urlOrStatusCode === 'number' ? String(urlOrStatusCode) : JSON.stringify(urlOrStatusCode)];\n    if (abortReason !== undefined)\n        args.push(truncateString(JSON.stringify(abortReason), 30));\n    const abortCaller = 'throw render()';\n    const abortCall = `render(${args.join(', ')})`;\n    return render_(urlOrStatusCode, abortReason, abortCall, abortCaller);\n}\nfunction render_(urlOrStatusCode, abortReason, abortCall, abortCaller, pageContextAddendum) {\n    const pageContextAbort = {\n        abortReason,\n        _abortCaller: abortCaller,\n        _abortCall: abortCall\n    };\n    if (pageContextAddendum) {\n        assert(pageContextAddendum._isLegacyRenderErrorPage === true);\n        objectAssign(pageContextAbort, pageContextAddendum);\n    }\n    if (typeof urlOrStatusCode === 'string') {\n        const url = urlOrStatusCode;\n        assertUsageUrlPathnameAbsolute(url, getErrPrefix(abortCaller));\n        objectAssign(pageContextAbort, {\n            _urlRewrite: url\n        });\n        return AbortRender(pageContextAbort);\n    }\n    else {\n        const abortStatusCode = urlOrStatusCode;\n        assertStatusCode(urlOrStatusCode, [401, 403, 404, 410, 429, 500, 503], 'render');\n        objectAssign(pageContextAbort, {\n            abortStatusCode,\n            is404: abortStatusCode === 404\n        });\n        return AbortRender(pageContextAbort);\n    }\n}\nfunction AbortRender(pageContextAbort) {\n    const err = new Error('AbortRender');\n    objectAssign(err, { _pageContextAbort: pageContextAbort, [stamp]: true });\n    checkType(err);\n    return err;\n}\n// TODO/v1-release: remove\n/**\n * @deprecated Use `throw render()` or `throw redirect()` instead, see https://vike.dev/render'\n */\nfunction RenderErrorPage({ pageContext = {} } = {}) {\n    assertWarning(false, `${pc.cyan('throw RenderErrorPage()')} is deprecated and will be removed in the next major release. Use ${pc.cyan('throw render()')} or ${pc.cyan('throw redirect()')} instead, see https://vike.dev/render`, { onlyOnce: false });\n    let abortStatusCode = 404;\n    let abortReason = 'Page Not Found';\n    if (pageContext.is404 === false || pageContext.pageProps?.is404 === false) {\n        abortStatusCode = 500;\n        abortReason = 'Something went wrong';\n    }\n    objectAssign(pageContext, { _isLegacyRenderErrorPage: true });\n    return render_(abortStatusCode, abortReason, 'RenderErrorPage()', 'throw RenderErrorPage()', pageContext);\n}\nconst stamp = '_isAbortError';\nfunction isAbortError(thing) {\n    return typeof thing === 'object' && thing !== null && stamp in thing;\n}\nfunction isAbortPageContext(pageContext) {\n    if (!(pageContext._urlRewrite || pageContext._urlRedirect || pageContext.abortStatusCode)) {\n        return false;\n    }\n    assert(hasProp(pageContext, '_abortCall', 'string'));\n    /* Isn't needed and is missing on the client-side\n    assert(hasProp(pageContext, '_abortCaller', 'string'))\n    */\n    checkType(pageContext);\n    return true;\n}\nfunction logAbortErrorHandled(err, isProduction, pageContext) {\n    if (isProduction)\n        return;\n    const urlCurrent = pageContext._urlRewrite ?? pageContext.urlOriginal;\n    assert(urlCurrent);\n    const abortCall = err._pageContextAbort._abortCall;\n    assert(abortCall);\n    const hookLoc = isUserHookError(err);\n    let thrownBy = '';\n    if (hookLoc) {\n        thrownBy = ` by ${pc.cyan(`${hookLoc.hookName}()`)} hook defined at ${hookLoc.hookFilePath}`;\n    }\n    else {\n        // hookLoc is missing when serializing abort errors from server to client\n    }\n    assertInfo(false, `${pc.cyan(abortCall)} thrown${thrownBy} while rendering ${pc.cyan(urlCurrent)}`, {\n        onlyOnce: false\n    });\n}\nfunction assertStatusCode(statusCode, expected, caller) {\n    const expectedEnglish = joinEnglish(expected.map((s) => s.toString()), 'or');\n    assertWarning(expected.includes(statusCode), `Unepexected status code ${statusCode} passed to ${caller}(), we recommend ${expectedEnglish} instead. (Or reach out at https://github.com/vikejs/vike/issues/1008 if you believe ${statusCode} should be added.)`, { onlyOnce: true });\n}\nfunction getPageContextFromAllRewrites(pageContextsFromRewrite) {\n    assertNoInfiniteLoop(pageContextsFromRewrite);\n    const pageContextFromAllRewrites = { _urlRewrite: null };\n    pageContextsFromRewrite.forEach((pageContextFromRewrite) => {\n        Object.assign(pageContextFromAllRewrites, pageContextFromRewrite);\n    });\n    return pageContextFromAllRewrites;\n}\nfunction assertNoInfiniteLoop(pageContextsFromRewrite) {\n    const urlRewrites = [];\n    pageContextsFromRewrite.forEach((pageContext) => {\n        const urlRewrite = pageContext._urlRewrite;\n        {\n            const idx = urlRewrites.indexOf(urlRewrite);\n            if (idx !== -1) {\n                const loop = [...urlRewrites.slice(idx), urlRewrite].map((url) => `render('${url}')`).join(' => ');\n                assertUsage(false, `Infinite loop of render() calls: ${loop}`);\n            }\n        }\n        urlRewrites.push(urlRewrite);\n    });\n}\nfunction assertNoInfiniteAbortLoop(rewriteCount, redirectCount) {\n    const abortCalls = [\n        // prettier-ignore\n        // biome-ignore format:\n        rewriteCount > 0 && pc.cyan(\"throw render('/some-url')\"),\n        redirectCount > 0 && pc.cyan(\"throw redirect('/some-url')\")\n    ]\n        .filter(Boolean)\n        .join(' and ');\n    assertUsage(rewriteCount + redirectCount <= 7, `Maximum chain length of 7 ${abortCalls} exceeded. Did you define an infinite loop of ${abortCalls}?`);\n}\nfunction getErrPrefix(abortCaller) {\n    return `URL passed to ${pc.code(abortCaller)}`;\n}\n","export const pageContextInitIsPassedToClient = '_pageContextInitIsPassedToClient';\n","export const isServerSideError = '_isServerSideError';\n","export { getPageContextFromHooks_isHydration };\nexport { getPageContextFromHooks_serialized };\nexport { getPageContextFromServerHooks };\nexport { getPageContextFromClientHooks };\nexport { setPageContextInitIsPassedToClient };\nimport { assert, assertUsage, hasProp, objectAssign, getProjectError, redirectHard, executeHook, isObject, getGlobalObject } from './utils.js';\nimport { parse } from '@brillout/json-serializer/parse';\nimport { getPageContextSerializedInHtml } from '../shared/getPageContextSerializedInHtml.js';\nimport { analyzePageServerSide } from '../../shared/getPageFiles/analyzePageServerSide.js';\nimport { getHook } from '../../shared/hooks/getHook.js';\nimport { preparePageContextForUserConsumptionClientSide } from '../shared/preparePageContextForUserConsumptionClientSide.js';\nimport { removeBuiltInOverrides } from './getPageContext/removeBuiltInOverrides.js';\nimport { getPageContextRequestUrl } from '../../shared/getPageContextRequestUrl.js';\nimport { getPageConfig } from '../../shared/page-configs/helpers.js';\nimport { getConfigValueRuntime } from '../../shared/page-configs/getConfigValue.js';\nimport { assertOnBeforeRenderHookReturn } from '../../shared/assertOnBeforeRenderHookReturn.js';\nimport { executeGuardHook } from '../../shared/route/executeGuardHook.js';\nimport { AbortRender, isAbortPageContext } from '../../shared/route/abort.js';\nimport { pageContextInitIsPassedToClient } from '../../shared/misc/pageContextInitIsPassedToClient.js';\nimport { isServerSideError } from '../../shared/misc/isServerSideError.js';\nconst globalObject = getGlobalObject('router/getPageContext.ts', {});\n// TODO/eventually: rename\nfunction getPageContextFromHooks_serialized() {\n    const pageContextSerialized = getPageContextSerializedInHtml();\n    assertUsage(!('urlOriginal' in pageContextSerialized), \"Adding 'urlOriginal' to passToClient is forbidden\");\n    processPageContextFromServer(pageContextSerialized);\n    objectAssign(pageContextSerialized, {\n        _hasPageContextFromServer: true\n    });\n    return pageContextSerialized;\n}\n// TODO/eventually: rename\nasync function getPageContextFromHooks_isHydration(pageContext) {\n    objectAssign(pageContext, {\n        _hasPageContextFromClient: false\n    });\n    for (const hookName of ['data', 'onBeforeRender']) {\n        if (hookClientOnlyExists(hookName, pageContext)) {\n            const pageContextFromHook = await executeHookClientSide(hookName, pageContext);\n            assert(!('urlOriginal' in pageContextFromHook));\n            Object.assign(pageContext, pageContextFromHook);\n        }\n    }\n    return pageContext;\n}\nasync function getPageContextFromServerHooks(pageContext, isErrorPage) {\n    const pageContextFromServerHooks = {\n        _hasPageContextFromServer: false\n    };\n    // If pageContextInit has some client data or if one of the hooks guard(), data() or onBeforeRender() is server-side\n    // only, then we need to fetch pageContext from the server.\n    // We do it before executing any client-side hook, because it contains pageContextInit which may be needed for guard() / data() / onBeforeRender(), for example pageContextInit.user is crucial for guard()\n    if (\n    // For the error page, we cannot fetch pageContext from the server because the pageContext JSON request is based on the URL\n    !isErrorPage &&\n        // true if pageContextInit has some client data or at least one of the data() and onBeforeRender() hooks is server-side only:\n        (await hasPageContextServer(pageContext))) {\n        const res = await fetchPageContextFromServer(pageContext);\n        if ('is404ServerSideRouted' in res)\n            return { is404ServerSideRouted: true };\n        const { pageContextFromServer } = res;\n        pageContextFromServerHooks._hasPageContextFromServer = true;\n        // Already handled\n        assert(!(isServerSideError in pageContextFromServer));\n        assert(!('serverSideError' in pageContextFromServer));\n        objectAssign(pageContextFromServerHooks, pageContextFromServer);\n    }\n    // We cannot return the whole pageContext because this function is used for prefetching `pageContext` (which requires a partial pageContext to be merged with the future pageContext created upon rendering the page in the future).\n    return { pageContextFromServerHooks };\n}\nasync function getPageContextFromClientHooks(pageContext, isErrorPage) {\n    objectAssign(pageContext, {\n        _hasPageContextFromClient: false\n    });\n    // At this point, we need to call the client-side guard(), data() and onBeforeRender() hooks, if they exist on client\n    // env. However if we have fetched pageContext from the server, some of them might have run already on the\n    // server-side, so we run only the client-only ones in this case.\n    // Note: for the error page, we also execute the client-side data() and onBeforeRender() hooks, but maybe we\n    // shouldn't? The server-side does it as well (but maybe it shouldn't).\n    for (const hookName of ['guard', 'data', 'onBeforeRender']) {\n        if (hookName === 'guard') {\n            if (!isErrorPage &&\n                // We don't need to call guard() on the client-side if we fetch pageContext from the server side. (Because the `${url}.pageContext.json` HTTP request will already trigger the routing and guard() hook on the server-side.)\n                !pageContext._hasPageContextFromServer) {\n                // Should we really call the guard() hook on the client-side? Shouldn't we make the guard() hook a server-side\n                // only hook? Or maybe make its env configurable like data() and onBeforeRender()?\n                await executeGuardHook(pageContext, (pageContext) => preparePageContextForUserConsumptionClientSide(pageContext, true));\n            }\n        }\n        else {\n            assert(hookName === 'data' || hookName === 'onBeforeRender');\n            if (hookClientOnlyExists(hookName, pageContext) || !pageContext._hasPageContextFromServer) {\n                // This won't do anything if no hook has been defined or if the hook's env.client is false.\n                const pageContextFromHook = await executeHookClientSide(hookName, pageContext);\n                assert(!('urlOriginal' in pageContextFromHook));\n                Object.assign(pageContext, pageContextFromHook);\n            }\n        }\n    }\n    const pageContextFromClientHooks = pageContext;\n    return pageContextFromClientHooks;\n}\nasync function executeHookClientSide(hookName, pageContext) {\n    const hook = getHook(pageContext, hookName);\n    if (!hook) {\n        // No hook defined or hook's env.client is false\n        return {};\n    }\n    const pageContextForUserConsumption = preparePageContextForUserConsumptionClientSide(pageContext, true);\n    const hookResult = await executeHook(() => hook.hookFn(pageContextForUserConsumption), hook, pageContext);\n    const pageContextFromHook = {};\n    if (hookName === 'onBeforeRender') {\n        assertOnBeforeRenderHookReturn(hookResult, hook.hookFilePath);\n        // Note: hookResult looks like { pageContext: { ... } }\n        const pageContextFromOnBeforeRender = hookResult?.pageContext;\n        if (pageContextFromOnBeforeRender) {\n            objectAssign(pageContextFromHook, { _hasPageContextFromClient: true });\n            objectAssign(pageContextFromHook, pageContextFromOnBeforeRender);\n        }\n    }\n    else {\n        assert(hookName === 'data');\n        // Note: hookResult can be anything (e.g. an object) and is to be assigned to pageContext.data\n        const pageContextFromData = {\n            data: hookResult\n        };\n        if (hookResult) {\n            objectAssign(pageContextFromHook, { _hasPageContextFromClient: true });\n        }\n        objectAssign(pageContextFromHook, pageContextFromData);\n    }\n    return pageContextFromHook;\n}\n// Workaround for the fact that the client-side cannot known whether a pageContext JSON request is needed in order to fetch pageContextInit data passed to the client.\n//  - The workaround is reliable as long as the user sets additional pageContextInit to undefined instead of not defining the property:\n//    ```diff\n//    - // Breaks the workaround:\n//    - const pageContextInit = { urlOriginal: req.url }\n//    - if (user) pageContextInit.user = user\n//    + // Makes the workaround reliable:\n//    + const pageContextInit = { urlOriginal: req.url, user }\n//    ```\n// - We can show a warning to users when the pageContextInit keys aren't always the same. (We didn't implement the waning yet because it would require a new doc page https://vike.dev/pageContextInit#avoid-conditional-properties\n// - Workaround cannot be made completely reliable because the workaround assumes that passToClient is always the same, but the user may set a different passToClient value for another page\n// - Alternatively, we could define a new config `alwaysFetchPageContextFromServer: boolean`\nfunction setPageContextInitIsPassedToClient(pageContext) {\n    if (pageContext[pageContextInitIsPassedToClient]) {\n        globalObject.pageContextInitIsPassedToClient = true;\n    }\n}\n// TODO/v1-release: make it sync\nasync function hasPageContextServer(pageContext) {\n    return (!!globalObject.pageContextInitIsPassedToClient ||\n        (await hookServerOnlyExists('data', pageContext)) ||\n        (await hookServerOnlyExists('onBeforeRender', pageContext)));\n}\n// TODO/v1-release: make it sync\n/**\n * @param hookName\n * @param pageContext\n * @returns `true` if the given page has a `hookName` hook defined with a server-only env.\n */\nasync function hookServerOnlyExists(hookName, pageContext) {\n    if (pageContext._pageConfigs.length > 0) {\n        // V1\n        const pageConfig = getPageConfig(pageContext.pageId, pageContext._pageConfigs);\n        const hookEnv = getConfigValueRuntime(pageConfig, `${hookName}Env`)?.value;\n        if (hookEnv === null)\n            return false;\n        assert(isObject(hookEnv));\n        const { client, server } = hookEnv;\n        assert(client === true || client === undefined);\n        assert(server === true || server === undefined);\n        assert(client || server);\n        return !!server && !client;\n    }\n    else {\n        // TODO/v1-release: remove\n        // V0.4\n        // data() hooks didn't exist in the V0.4 design\n        if (hookName === 'data')\n            return false;\n        assert(hookName === 'onBeforeRender');\n        const { hasOnBeforeRenderServerSideOnlyHook } = await analyzePageServerSide(pageContext._pageFilesAll, pageContext.pageId);\n        return hasOnBeforeRenderServerSideOnlyHook;\n    }\n}\n/**\n * @param hookName\n * @param pageContext\n * @returns `true` if the given page has a `hookName` hook defined with a client-only env.\n */\nfunction hookClientOnlyExists(hookName, pageContext) {\n    if (pageContext._pageConfigs.length > 0) {\n        // V1\n        const pageConfig = getPageConfig(pageContext.pageId, pageContext._pageConfigs);\n        const hookEnv = getConfigValueRuntime(pageConfig, `${hookName}Env`)?.value ?? {};\n        assert(isObject(hookEnv));\n        return !!hookEnv.client && !hookEnv.server;\n    }\n    else {\n        // TODO/v1-release: remove\n        // Client-only onBeforeRender() or data() hooks were never supported for the V0.4 design\n        return false;\n    }\n}\nasync function fetchPageContextFromServer(pageContext) {\n    const pageContextUrl = getPageContextRequestUrl(pageContext._urlRewrite ?? pageContext.urlOriginal);\n    const response = await fetch(pageContextUrl);\n    {\n        const contentType = response.headers.get('content-type');\n        const contentTypeCorrect = 'application/json';\n        const isCorrect = contentType && contentType.includes(contentTypeCorrect);\n        // Static hosts + page doesn't exist\n        if (!isCorrect && response.status === 404) {\n            redirectHard(pageContext.urlOriginal);\n            return { is404ServerSideRouted: true };\n        }\n        assertUsage(isCorrect, `Wrong Content-Type for ${pageContextUrl}: it should be ${contentTypeCorrect} but it's ${contentType} instead. Make sure to properly use pageContext.httpResponse.headers, see https://vike.dev/renderPage`);\n    }\n    const responseText = await response.text();\n    const pageContextFromServer = parse(responseText);\n    assert(isObject(pageContextFromServer));\n    if (isAbortPageContext(pageContextFromServer)) {\n        throw AbortRender(pageContextFromServer);\n    }\n    // Is there a reason for having two different properties? Can't we use only one property? I guess/think the isServerSideError property was an attempt (a bad idea really) for rendering the error page even though an error occured on the server-side (which is a bad idea because the added complexity is non-negligible while the added value is minuscule since the error page usually doesn't have any (meaningful / server-side) hooks).\n    if ('serverSideError' in pageContextFromServer || isServerSideError in pageContextFromServer) {\n        throw getProjectError(`pageContext couldn't be fetched because an error occurred on the server-side`);\n    }\n    assert(hasProp(pageContextFromServer, 'pageId', 'string'));\n    processPageContextFromServer(pageContextFromServer);\n    return { pageContextFromServer };\n}\nfunction processPageContextFromServer(pageContextFromServer) {\n    removeBuiltInOverrides(pageContextFromServer);\n}\n","export { getPageContextUrlComputed };\nexport { assertPageContextUrl };\n// =====================\n// File determining the URL logic.\n// URLs need to be computed, because the user can modify the URL e.g. with onBeforeRoute() for i18n.\n// =====================\nimport { objectDefineProperty } from '../utils/objectDefineProperty.js';\nimport { assert, parseUrl, assertWarning, isPlainObject, isPropertyGetter, isBrowser, changeEnumerable } from './utils.js';\nfunction getPageContextUrlComputed(pageContext) {\n    assert(typeof pageContext.urlOriginal === 'string');\n    assertPageContextUrlComputed(pageContext);\n    const pageContextUrlComputed = {};\n    objectDefineProperty(pageContextUrlComputed, 'urlPathname', {\n        get: urlPathnameGetter,\n        enumerable: true,\n        configurable: true\n    });\n    objectDefineProperty(pageContextUrlComputed, 'url', {\n        get: urlGetter,\n        enumerable: false,\n        configurable: true\n    });\n    objectDefineProperty(pageContextUrlComputed, 'urlParsed', {\n        get: urlParsedGetter,\n        enumerable: true,\n        configurable: true\n    });\n    return pageContextUrlComputed;\n}\nfunction getUrlParsed(pageContext) {\n    // Example of i18n app using `throw render()`:\n    //  1. User goes to '/fr-FR/admin'.\n    //  2. The first onBeforeRoute() call accesses pageContext.urlPathname (its value is '/fr-FR/admin': the pathname of pageContext.urlOriginal, since both pageContext.urlLogical and pageContext._urlRewrite are undefined) and sets pageContext.urlLogical to '/admin'.\n    //  3. A guard() hooks accesses pageContext.urlPathname (its value is '/admin': the pathname of pageContext.urlLogical) and calls `throw render('/fr-FR/login')`\n    //  4. Vike create a new pageContext object (pageContext.urlLogical is erased) and sets pageContext._urlRewrite to '/fr-FR/login'. (While pageContext.urlOriginal is still '/fr-FR/admin'.)\n    //  5. The second onBeforeRoute() call accesses pageContext.urlPathname (its value is '/fr-FR/login': the pathname of pageContext._urlRewrite, since pageContext.urlLogical is undefined) and sets pageContext.urlLogical to '/login'.\n    //  6. The value of pageContext.urlPathname is now '/login': the pathname of `pageContext.urlLogical`. (While pageContext.urlOriginal is still '/fr-FR/admin'.)\n    // Reproduction: https://github.com/vikejs/vike/discussions/1436#discussioncomment-8142023\n    // Determine logical URL\n    let urlResolved;\n    let baseToBeRemoved;\n    if (pageContext.urlLogical) {\n        // Set by onBeforeRoute()\n        urlResolved = pageContext.urlLogical;\n        baseToBeRemoved = false;\n    }\n    else if (pageContext._urlRewrite) {\n        // Set by `throw render()`\n        urlResolved = pageContext._urlRewrite;\n        baseToBeRemoved = false;\n    }\n    else {\n        // Set by renderPage()\n        urlResolved = pageContext.urlOriginal;\n        baseToBeRemoved = true;\n    }\n    assert(urlResolved && typeof urlResolved === 'string');\n    // Remove .pageContext.json\n    let urlHandler = pageContext._urlHandler;\n    if (!urlHandler)\n        urlHandler = (url) => url;\n    urlResolved = urlHandler(urlResolved);\n    // Remove Base URL.\n    // - We assume there isn't any Base URL to the URLs set by the user at `throw render()` and onBeforeRoute()\n    //   - This makes sense because the Base URL is merely a setting: ideally the user should write code that doesn't know anything about it (so that the user can remove/add/change Base URL without having to modify any code).\n    // - pageContext.urlOriginal is the URL of the HTTP request and thus contains the Base URL.\n    const baseServer = !baseToBeRemoved ? '/' : pageContext._baseServer;\n    // Parse URL\n    return parseUrl(urlResolved, baseServer);\n}\nfunction urlPathnameGetter() {\n    const { pathname } = getUrlParsed(this);\n    const urlPathname = pathname;\n    assert(urlPathname.startsWith('/'));\n    return urlPathname;\n}\nfunction urlGetter() {\n    // TODO/v1-release: remove\n    assertWarning(false, '`pageContext.url` is outdated. Use `pageContext.urlPathname`, `pageContext.urlParsed`, or `pageContext.urlOriginal` instead. (See https://vike.dev/migration/0.4.23 for more information.)', { onlyOnce: true, showStackTrace: true });\n    return urlPathnameGetter.call(this);\n}\nfunction urlParsedGetter() {\n    const { \n    // remove hasBaseServer as it isn't part of UrlPublic\n    hasBaseServer: _, ...urlParsed } = getUrlParsed(this);\n    const hashIsAvailable = isBrowser();\n    const warnHashNotAvailable = (prop) => {\n        assertWarning(hashIsAvailable, `pageContext.urlParsed.${prop} isn't available on the server-side (HTTP requests don't include the URL hash)`, { onlyOnce: true, showStackTrace: true });\n    };\n    const urlParsedEnhanced = {\n        ...urlParsed,\n        get hash() {\n            warnHashNotAvailable('hash');\n            return urlParsed.hash;\n        },\n        get hashOriginal() {\n            warnHashNotAvailable('hashOriginal');\n            return urlParsed.hashOriginal;\n        },\n        // TODO/next-major-release: remove\n        get hashString() {\n            assertWarning(false, 'pageContext.urlParsed.hashString has been renamed to pageContext.urlParsed.hashOriginal', {\n                onlyOnce: true,\n                showStackTrace: true\n            });\n            warnHashNotAvailable('hashString');\n            return urlParsed.hashOriginal;\n        },\n        // TODO/next-major-release: remove\n        get searchString() {\n            assertWarning(false, 'pageContext.urlParsed.searchString has been renamed to pageContext.urlParsed.searchOriginal', { onlyOnce: true, showStackTrace: true });\n            return urlParsed.searchOriginal;\n        }\n    };\n    changeEnumerable(urlParsedEnhanced, 'hashString', false);\n    changeEnumerable(urlParsedEnhanced, 'searchString', false);\n    if (!hashIsAvailable) {\n        changeEnumerable(urlParsedEnhanced, 'hash', false);\n        changeEnumerable(urlParsedEnhanced, 'hashOriginal', false);\n    }\n    return urlParsedEnhanced;\n}\nfunction assertPageContextUrl(pageContext) {\n    assert(typeof pageContext.urlOriginal === 'string');\n    assert(typeof pageContext.urlPathname === 'string');\n    assert(isPlainObject(pageContext.urlParsed));\n    assert(pageContext.urlPathname === pageContext.urlParsed.pathname);\n    assertPageContextUrlComputed(pageContext);\n}\nfunction assertPageContextUrlComputed(pageContext) {\n    /*\n    If the isPropertyGetter() assertions fail then it's most likely because Object.assign() was used instead of `objectAssign()`:\n    ```js\n    const PageContextUrlComputed = getPageContextUrlComputed(pageContext)\n  \n    // ❌ Breaks the property descriptors/getters of pageContext defined by getPageContextUrlComputed() such as pageContext.urlPathname\n    Object.assign(pageContext, pageContextUrlComputed)\n  \n    // ❌ Also breaks property descriptors/getters\n    const pageContext = { ...pageContextUrlComputed }\n  \n    // ✅ Preserves property descriptors/getters (see objectAssign() implementation)\n    objectAssign(pageContext, pageContextUrlComputed)\n    ```\n    */\n    if ('urlPathname' in pageContext) {\n        assert(typeof pageContext.urlPathname === 'string');\n        assert(isPropertyGetter(pageContext, 'urlPathname'));\n        assert(isPropertyGetter(pageContext, 'urlParsed'));\n        assert(isPropertyGetter(pageContext, 'url'));\n    }\n    else {\n        assert(!('urlParsed' in pageContext));\n        assert(!('url' in pageContext));\n    }\n}\n","// Unit tests at ./deduceRouteStringFromFilesystemPath.spec.ts\nimport { assert, higherFirst, slice } from './utils.js';\nexport { deduceRouteStringFromFilesystemPath };\n// TODO/next-major-update: remove this and whole filesystemRoot mechanism\nfunction deduceRouteStringFromFilesystemPath(pageId, filesystemRoots) {\n    // Handle Filesystem Routing Root\n    const filesystemRootsMatch = filesystemRoots\n        .filter(({ filesystemRoot }) => pageId.startsWith(filesystemRoot))\n        .sort(higherFirst(({ filesystemRoot }) => filesystemRoot.length));\n    const fsBase = filesystemRootsMatch[0];\n    let filesystemRoute;\n    if (fsBase) {\n        // Example values:\n        //  - `{\"pageId\":\"/pages/index\",\"filesystemRoot\":\"/\",\"urlRoot\":\"/client_portal\"}`\n        const { filesystemRoot, urlRoot } = fsBase;\n        const debugInfo = { pageId, filesystemRoot, urlRoot };\n        assert(urlRoot.startsWith('/') && pageId.startsWith('/') && filesystemRoot.startsWith('/'), debugInfo);\n        assert(pageId.startsWith(filesystemRoot), debugInfo);\n        if (filesystemRoot !== '/') {\n            assert(!filesystemRoot.endsWith('/'), debugInfo);\n            filesystemRoute = slice(pageId, filesystemRoot.length, 0);\n        }\n        else {\n            filesystemRoute = pageId;\n        }\n        assert(filesystemRoute.startsWith('/'), debugInfo);\n        filesystemRoute = urlRoot + (urlRoot.endsWith('/') ? '' : '/') + slice(filesystemRoute, 1, 0);\n    }\n    else {\n        filesystemRoute = pageId;\n    }\n    assert(filesystemRoute.startsWith('/'));\n    // Remove `pages/`, `index/, and `src/`, directories\n    filesystemRoute = filesystemRoute\n        .split('/')\n        .filter((dir) => dir !== 'pages' && dir !== 'src' && dir !== 'index')\n        .join('/');\n    // Hanlde `/index.page.*` suffix\n    assert(!filesystemRoute.includes('.page.'));\n    assert(!filesystemRoute.endsWith('.'));\n    if (filesystemRoute.endsWith('/index')) {\n        filesystemRoute = slice(filesystemRoute, 0, -'/index'.length);\n    }\n    if (filesystemRoute === '') {\n        filesystemRoute = '/';\n    }\n    assert(filesystemRoute.startsWith('/'));\n    assert(!filesystemRoute.endsWith('/') || filesystemRoute === '/');\n    return filesystemRoute;\n}\n","export { resolveRouteFunction };\nexport { assertRouteParams };\nexport { assertSyncRouting };\nexport { warnDeprecatedAllowKey };\nimport { assertPageContextUrl } from '../getPageContextUrlComputed.js';\nimport { assert, assertUsage, assertWarning, hasProp, isPlainObject, isPromise } from './utils.js';\nimport pc from '@brillout/picocolors';\nasync function resolveRouteFunction(routeFunction, pageContext, routeDefinedAtString) {\n    assertPageContextUrl(pageContext);\n    let result = routeFunction(pageContext);\n    assertSyncRouting(result, `The Route Function ${routeDefinedAtString}`);\n    // TODO/v1-release: make resolveRouteFunction() and route() sync\n    //* We disallow asynchronous routing, because we need to check whether a link is a Vike link in a synchronous fashion before calling ev.preventDefault() in the 'click' event listener\n    result = await result;\n    //*/\n    if (result === false) {\n        return null;\n    }\n    if (result === true) {\n        result = {};\n    }\n    assertUsage(isPlainObject(result), `The Route Function ${routeDefinedAtString} should return a boolean or a plain JavaScript object (but it's ${pc.cyan(`typeof result === ${JSON.stringify(typeof result)}`)} instead)`);\n    // AFAICT this return interface is superfluous. Should we soft-deprecate it and remove it?\n    if ('match' in result) {\n        const { match } = result;\n        assertUsage(typeof match === 'boolean', `The ${pc.cyan('match')} value returned by the Route Function ${routeDefinedAtString} should be a boolean.`);\n        if (!match) {\n            return null;\n        }\n    }\n    let precedence = null;\n    if ('precedence' in result) {\n        precedence = result.precedence;\n        assertUsage(typeof precedence === 'number', `The ${pc.cyan('precedence')} value returned by the Route Function ${routeDefinedAtString} should be a number.`);\n    }\n    assertRouteParams(result, `The ${pc.cyan('routeParams')} object returned by the Route Function ${routeDefinedAtString} should`);\n    const routeParams = result.routeParams || {};\n    assertUsage(!('pageContext' in result), `Providing ${pc.cyan('pageContext')} in Route Functions is prohibited, see https://vike.dev/route-function#cannot-provide-pagecontext`);\n    assert(isPlainObject(routeParams));\n    Object.keys(result).forEach((key) => {\n        assertUsage(key === 'match' || key === 'routeParams' || key === 'precedence', `The Route Function ${routeDefinedAtString} returned an object with an unknown property ${pc.cyan(key)} (the known properties are ${pc.cyan('match')}, ${pc.cyan('routeParams')}, and ${pc.cyan('precedence')})`);\n    });\n    return {\n        precedence,\n        routeParams\n    };\n}\n// TODO/v1-release: remove, and make routing synchronous (enabling Vike to synchronously check whether a link is a Vike link before even calling ev.preventDefault())\nfunction assertSyncRouting(res, errPrefix) {\n    assertWarning(!isPromise(res), `${errPrefix} returned a promise, but asynchronous routing is deprecated and will be removed in the next major release, see https://vike.dev/route-function#async`, { onlyOnce: true });\n}\n// TODO/v1-release: remove\nfunction warnDeprecatedAllowKey() {\n    const allowKey = pc.cyan('iKnowThePerformanceRisksOfAsyncRouteFunctions');\n    assertWarning(false, `${allowKey} is deprecated and will be removed in the next major release`, { onlyOnce: true });\n}\nfunction assertRouteParams(result, errPrefix) {\n    assert(errPrefix.endsWith(' should'));\n    if (!hasProp(result, 'routeParams')) {\n        return;\n    }\n    assert(errPrefix.endsWith(' should'));\n    assertUsage(hasProp(result, 'routeParams', 'string{}'), `${errPrefix} be an object holding string values.`);\n}\n","export { loadPageRoutes };\nimport { isErrorPageId } from '../error-page.js';\nimport { assert, assertUsage, hasProp, slice } from './utils.js';\nimport { deduceRouteStringFromFilesystemPath } from './deduceRouteStringFromFilesystemPath.js';\nimport { isCallable } from '../utils.js';\nimport { getConfigValueRuntime } from '../page-configs/getConfigValue.js';\nimport { getDefinedAtString } from '../page-configs/getConfigDefinedAt.js';\nimport { warnDeprecatedAllowKey } from './resolveRouteFunction.js';\nimport { getHookFromPageConfigGlobal, getHookTimeoutDefault } from '../hooks/getHook.js';\nasync function loadPageRoutes(\n// Remove all arguments and use GlobalContext instead?\npageFilesAll, pageConfigs, pageConfigGlobal, allPageIds) {\n    await Promise.all(pageFilesAll.filter((p) => p.fileType === '.page.route').map((p) => p.loadFile?.()));\n    const { onBeforeRouteHook, filesystemRoots } = getGlobalHooks(pageFilesAll, pageConfigs, pageConfigGlobal);\n    const pageRoutes = getPageRoutes(filesystemRoots, pageFilesAll, pageConfigs, allPageIds);\n    return { pageRoutes, onBeforeRouteHook };\n}\nfunction getPageRoutes(filesystemRoots, pageFilesAll, pageConfigs, allPageIds) {\n    const pageRoutes = [];\n    // V1 Design\n    if (pageConfigs.length > 0) {\n        assert(filesystemRoots === null);\n        const comesFromV1PageConfig = true;\n        pageConfigs\n            .filter((p) => !p.isErrorPage)\n            .forEach((pageConfig) => {\n            const pageId = pageConfig.pageId;\n            let pageRoute = null;\n            {\n                const configName = 'route';\n                const configValue = getConfigValueRuntime(pageConfig, configName);\n                if (configValue) {\n                    const route = configValue.value;\n                    assert(configValue.definedAtData);\n                    const definedAtString = getDefinedAtString(configValue.definedAtData, configName);\n                    if (typeof route === 'string') {\n                        pageRoute = {\n                            pageId,\n                            comesFromV1PageConfig,\n                            routeString: route,\n                            routeDefinedAtString: definedAtString,\n                            routeType: 'STRING'\n                        };\n                    }\n                    else {\n                        assert(isCallable(route));\n                        if (getConfigValueRuntime(pageConfig, 'iKnowThePerformanceRisksOfAsyncRouteFunctions', 'boolean'))\n                            warnDeprecatedAllowKey();\n                        pageRoute = {\n                            pageId,\n                            comesFromV1PageConfig,\n                            routeFunction: route,\n                            routeDefinedAtString: definedAtString,\n                            routeType: 'FUNCTION'\n                        };\n                    }\n                }\n            }\n            if (!pageRoute) {\n                const { routeFilesystem } = pageConfig;\n                assert(routeFilesystem);\n                const { routeString, definedBy } = routeFilesystem;\n                assert(routeFilesystem.routeString.startsWith('/'));\n                pageRoute = {\n                    pageId,\n                    routeFilesystemDefinedBy: definedBy,\n                    comesFromV1PageConfig,\n                    routeString,\n                    routeDefinedAtString: null,\n                    routeType: 'FILESYSTEM'\n                };\n            }\n            assert(pageRoute);\n            pageRoutes.push(pageRoute);\n        });\n    }\n    // Old design\n    // TODO/v1-release: remove\n    if (pageConfigs.length === 0) {\n        assert(filesystemRoots);\n        const comesFromV1PageConfig = false;\n        allPageIds\n            .filter((pageId) => !isErrorPageId(pageId, false))\n            .forEach((pageId) => {\n            const pageRouteFile = pageFilesAll.find((p) => p.pageId === pageId && p.fileType === '.page.route');\n            if (!pageRouteFile || !('default' in pageRouteFile.fileExports)) {\n                const routeString = deduceRouteStringFromFilesystemPath(pageId, filesystemRoots);\n                assert(routeString.startsWith('/'));\n                assert(!routeString.endsWith('/') || routeString === '/');\n                pageRoutes.push({\n                    pageId,\n                    comesFromV1PageConfig,\n                    routeString,\n                    routeDefinedAtString: null,\n                    routeFilesystemDefinedBy: `${pageId}.page.*`,\n                    routeType: 'FILESYSTEM'\n                });\n            }\n            else {\n                const { filePath, fileExports } = pageRouteFile;\n                assert(fileExports.default);\n                if (hasProp(fileExports, 'default', 'string')) {\n                    const routeString = fileExports.default;\n                    assertUsage(routeString.startsWith('/'), `A Route String should start with a leading slash '/' but ${filePath} has \\`export default '${routeString}'\\`. Make sure to \\`export default '/${routeString}'\\` instead.`);\n                    pageRoutes.push({\n                        pageId,\n                        comesFromV1PageConfig,\n                        routeString,\n                        routeDefinedAtString: filePath,\n                        routeType: 'STRING'\n                    });\n                    return;\n                }\n                if (hasProp(fileExports, 'default', 'function')) {\n                    const routeFunction = fileExports.default;\n                    {\n                        const allowKey = 'iKnowThePerformanceRisksOfAsyncRouteFunctions';\n                        if (allowKey in fileExports) {\n                            warnDeprecatedAllowKey();\n                        }\n                    }\n                    pageRoutes.push({\n                        pageId,\n                        comesFromV1PageConfig,\n                        routeFunction,\n                        routeDefinedAtString: filePath,\n                        routeType: 'FUNCTION'\n                    });\n                    return;\n                }\n                assertUsage(false, `The default export of ${filePath} should be a string or a function.`);\n            }\n        });\n    }\n    return pageRoutes;\n}\nfunction getGlobalHooks(pageFilesAll, pageConfigs, pageConfigGlobal) {\n    // V1 Design\n    if (pageConfigs.length > 0) {\n        const hook = getHookFromPageConfigGlobal(pageConfigGlobal, 'onBeforeRoute');\n        return { onBeforeRouteHook: hook, filesystemRoots: null };\n    }\n    // Old design\n    // TODO/v1-release: remove\n    let onBeforeRouteHook = null;\n    const filesystemRoots = [];\n    pageFilesAll\n        .filter((p) => p.fileType === '.page.route' && p.isDefaultPageFile)\n        .forEach(({ filePath, fileExports }) => {\n        assert(fileExports);\n        if ('onBeforeRoute' in fileExports) {\n            assertUsage(hasProp(fileExports, 'onBeforeRoute', 'function'), `\\`export { onBeforeRoute }\\` of ${filePath} should be a function.`);\n            const { onBeforeRoute } = fileExports;\n            const hookName = 'onBeforeRoute';\n            onBeforeRouteHook = {\n                hookFilePath: filePath,\n                hookFn: onBeforeRoute,\n                hookName,\n                hookTimeout: getHookTimeoutDefault(hookName)\n            };\n        }\n        if ('filesystemRoutingRoot' in fileExports) {\n            assertUsage(hasProp(fileExports, 'filesystemRoutingRoot', 'string'), `\\`export { filesystemRoutingRoot }\\` of ${filePath} should be a string.`);\n            assertUsage(hasProp(fileExports, 'filesystemRoutingRoot', 'string'), `\\`export { filesystemRoutingRoot }\\` of ${filePath} is \\`'${fileExports.filesystemRoutingRoot}'\\` but it should start with a leading slash \\`/\\`.`);\n            filesystemRoots.push({\n                filesystemRoot: dirname(filePath),\n                urlRoot: fileExports.filesystemRoutingRoot\n            });\n        }\n    });\n    return { onBeforeRouteHook, filesystemRoots };\n}\nfunction dirname(filePath) {\n    assert(filePath.startsWith('/'));\n    assert(!filePath.endsWith('/'));\n    const paths = filePath.split('/');\n    const dirPath = slice(paths, 0, -1).join('/') || '/';\n    assert(dirPath.startsWith('/'));\n    assert(!dirPath.endsWith('/') || dirPath === '/');\n    return dirPath;\n}\n","export { getBaseServer };\nimport { assert } from '../server-routing-runtime/utils.js';\nfunction getBaseServer() {\n    // @ts-ignore Since dist/cjs/client/ is never used, we can ignore this error.\n    const baseServer = import.meta.env.BASE_SERVER;\n    assert(isBaseServer(baseServer));\n    return baseServer;\n}\n// We don't use isBaseServer() defined in utils/parseUrl.ts to avoid loading the whole file in the browser\nfunction isBaseServer(baseServer) {\n    return baseServer.startsWith('/');\n}\n","export { createPageContext };\nimport { getPageContextUrlComputed } from '../../shared/getPageContextUrlComputed.js';\nimport { getPageFilesAll } from '../../shared/getPageFiles.js';\nimport { loadPageRoutes } from '../../shared/route/loadPageRoutes.js';\nimport { getBaseServer } from './getBaseServer.js';\nimport { assert, isBaseServer, getGlobalObject, objectAssign } from './utils.js';\nconst globalObject = getGlobalObject('createPageContext.ts', {});\nasync function createPageContext(urlOriginal) {\n    if (!globalObject.pageFilesData) {\n        globalObject.pageFilesData = await getPageFilesAll(true);\n    }\n    const { pageFilesAll, allPageIds, pageConfigs, pageConfigGlobal } = globalObject.pageFilesData;\n    const { pageRoutes, onBeforeRouteHook } = await loadPageRoutes(pageFilesAll, pageConfigs, pageConfigGlobal, allPageIds);\n    const baseServer = getBaseServer();\n    assert(isBaseServer(baseServer));\n    const pageContext = {\n        urlOriginal,\n        _objectCreatedByVike: true,\n        _urlHandler: null,\n        _urlRewrite: null,\n        _baseServer: baseServer,\n        _pageFilesAll: pageFilesAll,\n        _pageConfigs: pageConfigs,\n        _pageConfigGlobal: pageConfigGlobal,\n        _allPageIds: allPageIds,\n        _pageRoutes: pageRoutes,\n        _onBeforeRouteHook: onBeforeRouteHook,\n        _isPageContextObject: true\n    };\n    const pageContextUrlComputed = getPageContextUrlComputed(pageContext);\n    objectAssign(pageContext, pageContextUrlComputed);\n    return pageContext;\n}\n","export { findPageConfig };\nimport { assert } from '../utils.js';\nfunction findPageConfig(pageConfigs, pageId) {\n    const result = pageConfigs.filter((p) => p.pageId === pageId);\n    assert(result.length <= 1);\n    const pageConfig = result[0] ?? null;\n    return pageConfig;\n}\n","export { loadConfigValues };\nimport { objectAssign } from '../utils.js';\nimport { parseConfigValuesSerialized } from './serialize/parsePageConfigs.js';\nasync function loadConfigValues(pageConfig, isDev) {\n    if ('isAllLoaded' in pageConfig &&\n        // We don't need to cache in dev, since Vite already caches the virtual module\n        !isDev) {\n        return pageConfig;\n    }\n    const configValuesLoaded = await pageConfig.loadConfigValuesAll();\n    const configValues = parseConfigValuesSerialized(configValuesLoaded.configValuesSerialized);\n    Object.assign(pageConfig.configValues, configValues);\n    objectAssign(pageConfig, { isAllLoaded: true });\n    return pageConfig;\n}\n","export { loadUserFilesClientSide };\nexport { isErrorFetchingStaticAssets };\nimport { getPageFilesClientSide, getPageContextExports } from '../../shared/getPageFiles.js';\nimport { findPageConfig } from '../../shared/page-configs/findPageConfig.js';\nimport { loadConfigValues } from '../../shared/page-configs/loadConfigValues.js';\nimport { objectAssign } from '../server-routing-runtime/utils.js';\nconst stamp = '__whileFetchingAssets';\nasync function loadUserFilesClientSide(pageId, pageFilesAll, pageConfigs) {\n    const pageFilesClientSide = getPageFilesClientSide(pageFilesAll, pageId);\n    const pageConfig = findPageConfig(pageConfigs, pageId);\n    let pageConfigLoaded;\n    // @ts-ignore Since dist/cjs/client/ is never used, we can ignore this error.\n    const isDev = import.meta.env.DEV;\n    try {\n        // prettier-ignore\n        // biome-ignore format:\n        const result = await Promise.all([\n            pageConfig && loadConfigValues(pageConfig, isDev),\n            ...pageFilesClientSide.map((p) => p.loadFile?.()),\n        ]);\n        pageConfigLoaded = result[0];\n    }\n    catch (err) {\n        if (isFetchError(err)) {\n            Object.assign(err, { [stamp]: true });\n        }\n        else {\n            // A user file has a syntax error\n        }\n        throw err;\n    }\n    const pageContextExports = getPageContextExports(pageFilesClientSide, pageConfigLoaded);\n    const pageContextAddendum = {};\n    objectAssign(pageContextAddendum, pageContextExports);\n    objectAssign(pageContextAddendum, { _pageFilesLoaded: pageFilesClientSide });\n    return pageContextAddendum;\n}\nfunction isErrorFetchingStaticAssets(err) {\n    if (!err) {\n        return false;\n    }\n    return err[stamp] === true;\n}\n// https://stackoverflow.com/questions/75928310/how-to-detect-that-import-some-url-failed-because-some-url-isnt-a-javasc\nfunction isFetchError(err) {\n    if (!(err instanceof Error))\n        return false;\n    // https://github.com/stacks-network/clarity-js-sdk/blob/e757666b59af00b5db04dd1bf0df016e3a459ea2/packages/clarity/src/providers/registry.ts#L40-L45\n    // https://github.com/modernweb-dev/web/blob/0a59b56e4c1b50af81fbf4588f36a1ceb71f3976/integration/test-runner/tests/test-failure/runTestFailureTest.ts#L11-L18\n    const FAILED_TO_FETCH_MESSAGES = [\n        // chromium\n        'Failed to fetch dynamically imported module',\n        // firefox\n        'error loading dynamically imported module',\n        // safari\n        'Importing a module script failed',\n        // ??\n        'error resolving module specifier',\n        // ??\n        'failed to resolve module'\n    ];\n    return FAILED_TO_FETCH_MESSAGES.some((s) => err.message.toLowerCase().includes(s.toLowerCase()));\n}\n","export { skipLink };\nimport { getBaseServer } from './getBaseServer.js';\nimport { assert, parseUrl, isBaseServer, isUrl, isUrlExternal } from './utils.js';\nfunction skipLink(linkTag) {\n    const url = linkTag.getAttribute('href');\n    return (url === null ||\n        !isUrl(url) ||\n        url === '' ||\n        isUrlExternal(url) ||\n        isHashUrl(url) ||\n        isNewTabLink(linkTag) ||\n        !hasBaseServer(url) ||\n        // Purposely last because disableAutomaticLinkInterception will be removed in the next major release\n        !isVikeLink(linkTag));\n}\n// TODO/next-major-release: remove this in favor of synchronously checking whether URL matches the route of a page (possible since Async Route Functions will be deprecated)\nfunction isVikeLink(linkTag) {\n    const disableAutomaticLinkInterception = isDisableAutomaticLinkInterception();\n    if (!disableAutomaticLinkInterception) {\n        return true;\n    }\n    else {\n        const target = linkTag.getAttribute('data-vike-link');\n        return target !== null && target !== 'false';\n    }\n}\nfunction isNewTabLink(linkTag) {\n    const target = linkTag.getAttribute('target');\n    const rel = linkTag.getAttribute('rel');\n    return target === '_blank' || target === '_external' || rel === 'external' || linkTag.hasAttribute('download');\n}\nfunction isHashUrl(url) {\n    if (url.startsWith('#')) {\n        return true;\n    }\n    const removeHash = (url) => url.split('#')[0];\n    if (url.includes('#') && removeHash(url) === removeHash(window.location.pathname)) {\n        return true;\n    }\n    return false;\n}\nfunction hasBaseServer(url) {\n    const baseServer = getBaseServer();\n    assert(isBaseServer(baseServer));\n    const { hasBaseServer } = parseUrl(url, baseServer);\n    return hasBaseServer;\n}\nfunction isDisableAutomaticLinkInterception() {\n    // @ts-ignore\n    return !!window._disableAutomaticLinkInterception;\n    /* globalObject should be used if we want to make disableAutomaticLinkInterception a page-by-page setting\n    return globalObject.disableAutomaticLinkInterception ?? false\n    */\n}\n","export { getExportNames };\nimport { assert } from '../../utils.js';\nfunction getExportNames(p) {\n    if (p.fileType === '.css') {\n        return [];\n    }\n    if (p.exportNames) {\n        return p.exportNames;\n    }\n    assert(p.fileExports, p.filePath);\n    const exportNames = Object.keys(p.fileExports);\n    return exportNames;\n}\n","export { analyzeExports };\nimport { getExportNames } from './getExportNames.js';\nimport { assertUsage } from '../../utils.js';\n// TODO/v1-release: remove\nfunction analyzeExports({ pageFilesClientSide, pageFilesServerSide, pageId }) {\n    return { isHtmlOnly: isHtmlOnly(), isClientRouting: isClientRouting() };\n    function isHtmlOnly() {\n        {\n            const hasPageIdIsmrphFile = pageFilesServerSide.some((p) => p.pageId === pageId && p.fileType === '.page');\n            if (hasPageIdIsmrphFile) {\n                assertClientSideRenderHook();\n                return false;\n            }\n        }\n        {\n            const hasPageIdServerFile = pageFilesServerSide.some((p) => p.pageId === pageId && p.fileType === '.page.server');\n            if (!hasPageIdServerFile) {\n                return false;\n            }\n        }\n        {\n            const definesClientRenderer = pageFilesClientSide.some((p) => p.pageId === pageId && p.fileType === '.page.client' && getExportNames(p).includes('render'));\n            if (definesClientRenderer) {\n                return false;\n            }\n        }\n        return true;\n    }\n    function assertClientSideRenderHook() {\n        const hasClientSideRenderHook = pageFilesClientSide.some((p) => {\n            return getExportNames(p).includes('render');\n        });\n        assertUsage(hasClientSideRenderHook, [\n            'No client-side `render()` hook found.',\n            'See https://vike.dev/render-modes for more information.',\n            [\n                'Loaded client-side page files (none of them `export { render }`):',\n                ...pageFilesClientSide.map((p, i) => ` (${i + 1}): ${p.filePath}`)\n            ].join('\\n')\n        ].join(' '));\n    }\n    function isClientRouting() {\n        const hasClientRoutingExport = pageFilesClientSide.some((p) => {\n            return getExportNames(p).includes('clientRouting');\n        });\n        return hasClientRoutingExport;\n    }\n}\n","// TODO/v1-release: remove\nexport { determineClientEntry };\nexport { getVikeClientEntry };\nfunction determineClientEntry({ pageFilesClientSide, pageFilesServerSide, isHtmlOnly, isClientRouting }) {\n    let clientEntries = [];\n    const pageFilesServerSideOnly = pageFilesServerSide.filter((p) => !pageFilesClientSide.includes(p));\n    const clientDependencies = [];\n    clientDependencies.push(...pageFilesClientSide.map((p) => ({ id: p.filePath, onlyAssets: false, eagerlyImported: false })));\n    // CSS & assets\n    clientDependencies.push(...pageFilesServerSideOnly.map((p) => ({ id: p.filePath, onlyAssets: true, eagerlyImported: false })));\n    // Handle SPA & SSR pages.\n    if (isHtmlOnly) {\n        clientEntries = pageFilesClientSide.map((p) => p.filePath);\n    }\n    else {\n        // Add the vike client entry\n        const clientEntry = getVikeClientEntry(isClientRouting);\n        clientDependencies.push({ id: clientEntry, onlyAssets: false, eagerlyImported: false });\n        clientEntries = [clientEntry];\n    }\n    // console.log(pageFilesClientSide, pageFilesServerSide, clientDependencies, clientEntry)\n    return { clientEntries, clientDependencies };\n}\nfunction getVikeClientEntry(isClientRouting) {\n    return isClientRouting\n        ? '@@vike/dist/esm/client/client-routing-runtime/entry.js'\n        : '@@vike/dist/esm/client/server-routing-runtime/entry.js';\n}\n","export { analyzePageClientSide };\nexport { analyzePageClientSideInit };\nimport { analyzeExports } from './analyzePageClientSide/analyzeExports.js';\nimport { determineClientEntry } from './analyzePageClientSide/determineClientEntry.js';\nimport { getPageFilesClientSide } from './getAllPageIdFiles.js';\nimport { getPageFilesServerSide } from './getAllPageIdFiles.js';\nimport { assert } from '../utils.js';\nimport { getExportNames } from './analyzePageClientSide/getExportNames.js';\n// TODO/v1-release: remove analyzePageClientSide(), use analyzeClientSide() instead\nfunction analyzePageClientSide(pageFilesAll, pageId) {\n    let pageFilesClientSide = getPageFilesClientSide(pageFilesAll, pageId);\n    const pageFilesServerSide = getPageFilesServerSide(pageFilesAll, pageId);\n    const { isHtmlOnly, isClientRouting } = analyzeExports({ pageFilesClientSide, pageFilesServerSide, pageId });\n    if (isHtmlOnly) {\n        // HTML-only pages don't need any client-side `render()` hook. For apps that have both HTML-only and SSR/SPA pages, we skip the `.page.client.js` file that defines `render()` for HTML-only pages.\n        pageFilesClientSide = pageFilesClientSide.filter((p) => p.isEnv('CLIENT_ONLY') && !getExportNames(p).includes('render'));\n        pageFilesClientSide = removeOverridenPageFiles(pageFilesClientSide);\n    }\n    const { clientEntries, clientDependencies } = determineClientEntry({\n        pageFilesClientSide,\n        pageFilesServerSide,\n        isHtmlOnly,\n        isClientRouting\n    });\n    return { isHtmlOnly, isClientRouting, clientEntries, clientDependencies, pageFilesClientSide, pageFilesServerSide };\n}\n// TODO:v1-release: remove\nasync function analyzePageClientSideInit(pageFilesAll, pageId, { sharedPageFilesAlreadyLoaded }) {\n    const pageFilesClientSide = getPageFilesClientSide(pageFilesAll, pageId);\n    await Promise.all(pageFilesClientSide.map(async (p) => {\n        assert(p.isEnv('CLIENT_ONLY') || p.isEnv('CLIENT_AND_SERVER'));\n        if (sharedPageFilesAlreadyLoaded && p.isEnv('CLIENT_AND_SERVER')) {\n            return;\n        }\n        // TODO: Is `loadExportNames()` cached ? Does it use filesExports if possible? HMR?\n        await p.loadExportNames?.();\n        /*\n        if (pageFile.exportNames) {\n          return pageFile.exportNames.includes(clientRouting)\n        }\n        if (pageFile.fileExports) {\n          return Object.keys(pageFile.fileExports).includes(clientRouting)\n        }\n        */\n    }));\n}\n// [WIP] Just an experiment needed by https://vike.dev/banner\n//  - Not sure I want to make something like a public API: the CSS of `_default.page.server.js` are still loaded -> weird DX.\nfunction removeOverridenPageFiles(pageFilesClientSide) {\n    const pageFilesClientSide_ = [];\n    for (const p of pageFilesClientSide) {\n        pageFilesClientSide_.push(p);\n        if (getExportNames(p).includes('overrideDefaultPages')) {\n            break;\n        }\n    }\n    return pageFilesClientSide_;\n}\n","export { analyzeClientSide };\nimport { getConfigValueRuntime } from '../page-configs/getConfigValue.js';\nimport { analyzePageClientSide } from './analyzePageClientSide.js';\nfunction analyzeClientSide(pageConfig, pageFilesAll, pageId) {\n    // V1 design\n    if (pageConfig) {\n        const isClientRouting = getConfigValueRuntime(pageConfig, 'clientRouting', 'boolean')?.value ?? false;\n        const isClientRuntimeLoaded = getConfigValueRuntime(pageConfig, 'isClientRuntimeLoaded', 'boolean')?.value ?? false;\n        return { isClientRuntimeLoaded, isClientRouting };\n    }\n    else {\n        // TODO/v1-release: remove\n        // V0.4 design\n        const { isHtmlOnly, isClientRouting } = analyzePageClientSide(pageFilesAll, pageId);\n        return { isClientRuntimeLoaded: !isHtmlOnly, isClientRouting };\n    }\n}\n","export { isClientSideRoutable };\nimport { analyzePageClientSideInit } from '../../shared/getPageFiles/analyzePageClientSide.js';\nimport { findPageConfig } from '../../shared/page-configs/findPageConfig.js';\nimport { analyzeClientSide } from '../../shared/getPageFiles/analyzeClientSide.js';\n// TODO/next-major-release: make it sync\nasync function isClientSideRoutable(pageId, pageContext) {\n    await analyzePageClientSideInit(pageContext._pageFilesAll, pageId, {\n        sharedPageFilesAlreadyLoaded: false\n    });\n    const pageConfig = findPageConfig(pageContext._pageConfigs, pageId);\n    const { isClientRuntimeLoaded, isClientRouting } = analyzeClientSide(pageConfig, pageContext._pageFilesAll, pageId);\n    return isClientRuntimeLoaded && isClientRouting;\n}\n","export { resolveRouteString };\nexport { getUrlFromRouteString };\nexport { isStaticRouteString };\nexport { analyzeRouteString };\nexport { assertRouteString };\nexport { getRouteStringParameterList };\nimport { assertWarning, isBrowser, escapeRegex } from '../utils.js';\nimport { assert, assertUsage } from './utils.js';\nimport pc from '@brillout/picocolors';\nconst PARAM_TOKEN_NEW = '@';\n// TODO/v1-release: remove\nconst PARAM_TOKEN_OLD = ':';\nfunction assertRouteString(routeString, errPrefix = 'Invalid') {\n    let errPrefix2 = `${errPrefix} Route String ${highlight(routeString)}`;\n    assertUsage(routeString !== '', `${errPrefix2} (empty string): set it to ${highlight('/')} instead`);\n    assertUsage(['/', '*'].includes(routeString[0]), `${errPrefix2}: it should start with ${highlight('/')} or ${highlight('*')}`);\n    assertUsage(!routeString.includes('**'), `${errPrefix2}: set it to ${highlight(routeString.split('**').join('*'))} instead`);\n}\nfunction resolveRouteString(routeString, urlPathname) {\n    assertRouteString(routeString);\n    const segments = parseRouteString(routeString);\n    const routeRegexStrInner = segments\n        .map((segment) => {\n        if (segment.param) {\n            return '[^/]+';\n        }\n        if (segment.glob) {\n            return '.*';\n        }\n        // segment.static\n        return escapeRegex(segment.static);\n    })\n        .map((s) => `(${s})`)\n        .join('');\n    const routeRegex = new RegExp(`^${routeRegexStrInner}/?$`);\n    const routeRegexMatch = urlPathname.match(routeRegex);\n    /* DEBUG\n    console.log()\n    console.log('routeString', routeString)\n    console.log('urlPathname', urlPathname)\n    console.log('routeSegments', segments)\n    console.log('routeRegex', routeRegex)\n    console.log('routeRegexMatch', routeRegexMatch)\n    //*/\n    if (!routeRegexMatch)\n        return null;\n    const routeParams = {};\n    const [_, ...segmentsValue] = routeRegexMatch;\n    let globIdx = 0;\n    const hasMultipleGlobs = segments.filter((segment) => segment.glob).length > 1;\n    segments.forEach((segment, i) => {\n        let val = segmentsValue[i];\n        if (segment.param) {\n            routeParams[segment.param] = val;\n        }\n        if (segment.glob) {\n            const param = `*${hasMultipleGlobs ? ++globIdx : ''}`;\n            routeParams[param] = val;\n        }\n    });\n    return { routeParams };\n}\nfunction parseRouteString(routeString) {\n    const segments = [];\n    const pushStatic = (s) => {\n        const segmentLast = segments[segments.length - 1];\n        if (segmentLast?.static) {\n            segmentLast.static += s;\n        }\n        else {\n            segments.push({ static: s });\n        }\n    };\n    const parts = routeString.split('/');\n    parts.forEach((s, i) => {\n        if (i !== 0)\n            pushStatic('/');\n        if (isParam(s)) {\n            assertWarning(!s.startsWith(PARAM_TOKEN_OLD), `Outdated Route String ${highlight(routeString)}, use ${highlight(routeString.split(PARAM_TOKEN_OLD).join(PARAM_TOKEN_NEW))} instead`, { onlyOnce: true });\n            segments.push({ param: s.slice(1) });\n        }\n        else {\n            if (s === '*' && i === parts.length - 1 && routeString !== '*' && routeString !== '/*') {\n                segments.push({ glob: true });\n            }\n            else {\n                s.split('*').forEach((s, i) => {\n                    if (i !== 0)\n                        segments.push({ glob: true });\n                    if (s !== '') {\n                        pushStatic(s);\n                    }\n                });\n            }\n        }\n    });\n    return segments;\n}\nfunction getRouteStringParameterList(routeString) {\n    const routeParameterList = [];\n    const segments = parseRouteString(routeString);\n    segments.forEach((segment) => {\n        if (segment.param)\n            routeParameterList.push(segment.param);\n    });\n    return routeParameterList;\n}\nfunction getUrlFromRouteString(routeString) {\n    if (isStaticRouteString(routeString)) {\n        const url = routeString;\n        return url;\n    }\n    return null;\n}\nfunction analyzeRouteString(routeString) {\n    const segments = parseRouteString(routeString);\n    const countStaticParts = (s) => s?.split('/').filter(Boolean).length || 0;\n    let numberOfStaticPartsBeginning = 0;\n    for (const segment of segments) {\n        if (!segment.static)\n            break;\n        numberOfStaticPartsBeginning += countStaticParts(segment.static);\n    }\n    const numberOfStaticParts = segments.map((s) => countStaticParts(s.static)).reduce((sum, a) => sum + a, 0);\n    const numberOfParams = segments.filter((s) => s.param).length;\n    const numberOfGlobs = segments.filter((s) => s.glob).length;\n    return { numberOfStaticPartsBeginning, numberOfStaticParts, numberOfParams, numberOfGlobs };\n}\nfunction isParam(routeSegment) {\n    return routeSegment.startsWith(PARAM_TOKEN_NEW) || routeSegment.startsWith(PARAM_TOKEN_OLD);\n}\nfunction isStaticRouteString(routeString) {\n    const url = routeString;\n    const match = resolveRouteString(routeString, url);\n    assert(match);\n    return Object.keys(match.routeParams).length === 0;\n}\nfunction highlight(routeString) {\n    if (isBrowser()) {\n        return `'${routeString}'`;\n    }\n    else {\n        if (routeString === '') {\n            routeString = \"''\";\n        }\n        return pc.cyan(routeString);\n    }\n}\n","export { resolvePrecendence };\n// export type { RouteMatch }\nimport { analyzeRouteString } from './resolveRouteString.js';\nimport { higherFirst, lowerFirst } from './utils.js';\nimport { makeFirst } from './utils.js';\nimport { isStaticRouteString } from './resolveRouteString.js';\n// See https://vike.dev/route-function#precedence\nfunction resolvePrecendence(routeMatches) {\n    // prettier-ignore\n    // biome-ignore format:\n    routeMatches\n        .sort(sortMatches)\n        .sort(makeFirst((routeMatch) => routeMatch.routeType === 'FUNCTION' && !!routeMatch.precedence && routeMatch.precedence < 0))\n        .sort(makeFirst((routeMatch) => routeMatch.routeType === 'STRING' && isStaticRouteString(routeMatch.routeString) === false))\n        .sort(makeFirst((routeMatch) => routeMatch.routeType === 'FUNCTION' && !routeMatch.precedence))\n        .sort(makeFirst((routeMatch) => routeMatch.routeType === 'STRING' && isStaticRouteString(routeMatch.routeString) === true))\n        .sort(makeFirst((routeMatch) => routeMatch.routeType === 'FILESYSTEM'))\n        .sort(makeFirst((routeMatch) => routeMatch.routeType === 'FUNCTION' && !!routeMatch.precedence && routeMatch.precedence > 0));\n}\n// -1 => routeMatch1 higher precedence\n// +1 => routeMatch2 higher precedence\nfunction sortMatches(routeMatch1, routeMatch2) {\n    {\n        const precedence1 = routeMatch1.precedence ?? 0;\n        const precedence2 = routeMatch2.precedence ?? 0;\n        if (precedence1 !== precedence2) {\n            return precedence1 > precedence2 ? -1 : 1;\n        }\n    }\n    if (!routeMatch2.routeString) {\n        return 0;\n    }\n    if (!routeMatch1.routeString) {\n        return 0;\n    }\n    /* DEBUG\n    console.log('routeMatch1.routeString', routeMatch1.routeString)\n    console.log('routeMatch2.routeString', routeMatch2.routeString)\n    console.log('parseRouteString(routeMatch1.routeString)', parseRouteString(routeMatch1.routeString))\n    console.log('parseRouteString(routeMatch2.routeString)', parseRouteString(routeMatch2.routeString))\n    //*/\n    // Return route with highest number of static path segments at beginning first\n    {\n        const getValue = (routeString) => analyzeRouteString(routeString).numberOfStaticPartsBeginning;\n        const result = higherFirst(getValue)(routeMatch1.routeString, routeMatch2.routeString);\n        if (result !== 0) {\n            /* DEBUG\n            console.log('analyzeRouteString(routeMatch1.routeString).numberOfStaticPartsBeginning', getValue(routeMatch1.routeString))\n            console.log('analyzeRouteString(routeMatch2.routeString).numberOfStaticPartsBeginning', getValue(routeMatch2.routeString))\n            //*/\n            return result;\n        }\n    }\n    // Return route with highest number of static path segments in total first\n    {\n        const getValue = (routeString) => analyzeRouteString(routeString).numberOfStaticParts;\n        const result = higherFirst(getValue)(routeMatch1.routeString, routeMatch2.routeString);\n        if (result !== 0) {\n            /* DEBUG\n            console.log('analyzeRouteString(routeMatch1.routeString).numberOfStaticParts', getValue(routeMatch1.routeString))\n            console.log('analyzeRouteString(routeMatch2.routeString).numberOfStaticParts', getValue(routeMatch2.routeString))\n            //*/\n            return result;\n        }\n    }\n    // Return route with least amount of globs first\n    {\n        const getValue = (routeString) => analyzeRouteString(routeString).numberOfGlobs;\n        const result = lowerFirst(getValue)(routeMatch1.routeString, routeMatch2.routeString);\n        if (result !== 0) {\n            /* DEBUG\n            console.log('analyzeRouteString(routeMatch1.routeString).numberOfGlobs', getValue(routeMatch1.routeString))\n            console.log('analyzeRouteString(routeMatch2.routeString).numberOfGlobs', getValue(routeMatch2.routeString))\n            //*/\n            return result;\n        }\n    }\n    // Return route with highest number of parameters first\n    {\n        const getValue = (routeString) => analyzeRouteString(routeString).numberOfParams;\n        const result = higherFirst(getValue)(routeMatch1.routeString, routeMatch2.routeString);\n        if (result !== 0) {\n            /* DEBUG\n            console.log('analyzeRouteString(routeMatch1.routeString).numberOfParams', getValue(routeMatch1.routeString))\n            console.log('analyzeRouteString(routeMatch2.routeString).numberOfParams', getValue(routeMatch2.routeString))\n            //*/\n            return result;\n        }\n    }\n    return 0;\n}\n","export { executeOnBeforeRouteHook };\nimport { assertPageContextProvidedByUser } from '../assertPageContextProvidedByUser.js';\nimport { assertUsage, hasProp, isObjectWithKeys, objectAssign, assertWarning, assertUsageUrlPathnameAbsolute, joinEnglish, assert } from './utils.js';\nimport { assertRouteParams, assertSyncRouting } from './resolveRouteFunction.js';\nimport pc from '@brillout/picocolors';\nimport { executeHook } from '../hooks/executeHook.js';\nasync function executeOnBeforeRouteHook(pageContext) {\n    const pageContextFromOnBeforeRouteHook = {};\n    if (!pageContext._onBeforeRouteHook)\n        return null;\n    const pageContextFromHook = await getPageContextFromHook(pageContext._onBeforeRouteHook, pageContext);\n    if (pageContextFromHook) {\n        objectAssign(pageContextFromOnBeforeRouteHook, pageContextFromHook);\n        if (hasProp(pageContextFromOnBeforeRouteHook, 'pageId', 'string') ||\n            hasProp(pageContextFromOnBeforeRouteHook, 'pageId', 'null')) {\n            // We bypass Vike's routing\n            if (!hasProp(pageContextFromOnBeforeRouteHook, 'routeParams')) {\n                objectAssign(pageContextFromOnBeforeRouteHook, { routeParams: {} });\n            }\n            else {\n                assert(hasProp(pageContextFromOnBeforeRouteHook, 'routeParams', 'object'));\n            }\n            objectAssign(pageContextFromOnBeforeRouteHook, {\n                _routingProvidedByOnBeforeRouteHook: true,\n                _debugRouteMatches: 'CUSTOM_ROUTING'\n            });\n            return pageContextFromOnBeforeRouteHook;\n        }\n    }\n    objectAssign(pageContextFromOnBeforeRouteHook, {\n        _routingProvidedByOnBeforeRouteHook: false\n    });\n    return pageContextFromOnBeforeRouteHook;\n}\nasync function getPageContextFromHook(onBeforeRouteHook, pageContext) {\n    let hookReturn = onBeforeRouteHook.hookFn(pageContext);\n    assertSyncRouting(hookReturn, `The onBeforeRoute() hook ${onBeforeRouteHook.hookFilePath}`);\n    // TODO/v1-release: make executeOnBeforeRouteHook() and route() sync\n    hookReturn = await executeHook(() => hookReturn, onBeforeRouteHook, pageContext);\n    const errPrefix = `The onBeforeRoute() hook defined by ${onBeforeRouteHook.hookFilePath}`;\n    assertUsage(hookReturn === null ||\n        hookReturn === undefined ||\n        (isObjectWithKeys(hookReturn, ['pageContext']) && hasProp(hookReturn, 'pageContext')), `${errPrefix} should return ${pc.cyan('null')}, ${pc.cyan('undefined')}, or a plain JavaScript object ${pc.cyan('{ pageContext: { /* ... */ } }')}`);\n    if (hookReturn === null || hookReturn === undefined) {\n        return null;\n    }\n    assertUsage(hasProp(hookReturn, 'pageContext', 'object'), `${errPrefix} returned ${pc.cyan('{ pageContext }')} but pageContext should be a plain JavaScript object.`);\n    if (hasProp(hookReturn.pageContext, 'pageId') && !hasProp(hookReturn.pageContext, 'pageId', 'null')) {\n        const errPrefix2 = `${errPrefix} returned ${pc.cyan('{ pageContext: { pageId } }')} but ${pc.cyan('pageId')} should be`;\n        assertUsage(hasProp(hookReturn.pageContext, 'pageId', 'string'), `${errPrefix2} a string or null`);\n        assertUsage(pageContext._allPageIds.includes(hookReturn.pageContext.pageId), `${errPrefix2} ${joinEnglish(pageContext._allPageIds.map((s) => pc.cyan(s)), 'or')}`);\n    }\n    if (hasProp(hookReturn.pageContext, 'routeParams')) {\n        assertRouteParams(hookReturn.pageContext, `${errPrefix} returned ${pc.cyan('{ pageContext: { routeParams } }')} but routeParams should`);\n    }\n    const deprecatedReturn = (prop) => `${errPrefix} returned ${pc.cyan(`{ pageContext: { ${prop} } }`)} which is deprecated. Return ${pc.cyan('{ pageContext: { urlLogical } }')} instead.`;\n    if (hasProp(hookReturn.pageContext, 'url')) {\n        assertWarning(false, deprecatedReturn('url'), { onlyOnce: true });\n        hookReturn.pageContext.urlLogical = hookReturn.pageContext.url;\n        delete hookReturn.pageContext.url;\n    }\n    if (hasProp(hookReturn.pageContext, 'urlOriginal')) {\n        assertWarning(false, deprecatedReturn('urlOriginal'), { onlyOnce: true });\n        hookReturn.pageContext.urlLogical = hookReturn.pageContext.urlOriginal;\n        delete hookReturn.pageContext.urlOriginal;\n    }\n    if (hasProp(hookReturn.pageContext, 'urlLogical')) {\n        assertUsageUrlPathnameAbsolute(\n        // We skip validation and type-cast instead of assertUsage() in order to save client-side KBs\n        hookReturn.pageContext.urlLogical, `${errPrefix} returned ${pc.cyan('{ pageContext: { urlLogical } }')} but ${pc.cyan('urlLogical')}`);\n    }\n    assertPageContextProvidedByUser(hookReturn.pageContext, {\n        hookFilePath: onBeforeRouteHook.hookFilePath,\n        hookName: 'onBeforeRoute'\n    });\n    const pageContextAddendumHook = {};\n    objectAssign(pageContextAddendumHook, hookReturn.pageContext);\n    return pageContextAddendumHook;\n}\n","export { debug };\nvar _debug;\nfunction debug(...args) {\n    if (!_debug) {\n        // We use this trick instead of `import { createDebugger } from '../../utils/debug` in order to ensure that the `debug` mechanism is only loaded on the server-side\n        _debug = globalThis.__brillout_debug_createDebugger?.('vike:routing');\n    }\n    if (_debug) {\n        _debug(...args);\n    }\n}\n","export { route };\n// Ensure we don't bloat runtime of Server Routing\nimport { assertClientRouting } from '../../utils/assertRoutingType.js';\nimport { isBrowser } from '../../utils/isBrowser.js';\nif (isBrowser()) {\n    assertClientRouting();\n}\nimport { assert, assertUsage, isPlainObject, objectAssign } from './utils.js';\nimport { assertPageContextUrl } from '../getPageContextUrlComputed.js';\nimport { resolvePrecendence } from './resolvePrecedence.js';\nimport { resolveRouteString } from './resolveRouteString.js';\nimport { resolveRouteFunction } from './resolveRouteFunction.js';\nimport { executeOnBeforeRouteHook } from './executeOnBeforeRouteHook.js';\nimport { debug } from './debug.js';\nimport pc from '@brillout/picocolors';\nasync function route(pageContext) {\n    debug('Pages routes:', pageContext._pageRoutes);\n    assertPageContextUrl(pageContext);\n    const pageContextFromRoute = {};\n    // onBeforeRoute()\n    const pageContextFromOnBeforeRouteHook = await executeOnBeforeRouteHook(pageContext);\n    if (pageContextFromOnBeforeRouteHook) {\n        if (pageContextFromOnBeforeRouteHook._routingProvidedByOnBeforeRouteHook) {\n            assert(pageContextFromOnBeforeRouteHook.pageId);\n            return pageContextFromOnBeforeRouteHook;\n        }\n        else {\n            objectAssign(pageContextFromRoute, pageContextFromOnBeforeRouteHook);\n        }\n    }\n    // We take into account pageContext.urlLogical set by onBeforeRoute()\n    objectAssign(pageContext, pageContextFromOnBeforeRouteHook);\n    // Vike's routing\n    const allPageIds = pageContext._allPageIds;\n    assertUsage(allPageIds.length > 0, 'No page found. You must create at least one page.');\n    assert(pageContext._pageFilesAll.length > 0 || pageContext._pageConfigs.length > 0);\n    const { urlPathname } = pageContext;\n    assert(urlPathname.startsWith('/'));\n    const routeMatches = [];\n    await Promise.all(pageContext._pageRoutes.map(async (pageRoute) => {\n        const { pageId, routeType } = pageRoute;\n        // Filesytem Routing\n        if (pageRoute.routeType === 'FILESYSTEM') {\n            const { routeString } = pageRoute;\n            const match = resolveRouteString(routeString, urlPathname);\n            if (match) {\n                const { routeParams } = match;\n                routeMatches.push({ pageId, routeParams, routeString, routeType });\n            }\n            return;\n        }\n        // Route String defined in `.page.route.js`\n        if (pageRoute.routeType === 'STRING') {\n            const { routeString } = pageRoute;\n            const match = resolveRouteString(routeString, urlPathname);\n            if (match) {\n                const { routeParams } = match;\n                assert(routeType === 'STRING');\n                routeMatches.push({\n                    pageId,\n                    routeString,\n                    routeParams,\n                    routeType\n                });\n            }\n            return;\n        }\n        // Route Function defined in `.page.route.js`\n        if (pageRoute.routeType === 'FUNCTION') {\n            const { routeFunction, routeDefinedAtString } = pageRoute;\n            const match = await resolveRouteFunction(routeFunction, pageContext, routeDefinedAtString);\n            if (match) {\n                const { routeParams, precedence } = match;\n                routeMatches.push({ pageId, precedence, routeParams, routeType });\n            }\n            return;\n        }\n        assert(false);\n    }));\n    resolvePrecendence(routeMatches);\n    const winner = routeMatches[0] ?? null;\n    debug(`Route matches for URL ${pc.cyan(urlPathname)} (in precedence order):`, routeMatches);\n    objectAssign(pageContextFromRoute, { _debugRouteMatches: routeMatches });\n    // For vite-plugin-vercel https://github.com/magne4000/vite-plugin-vercel/blob/main/packages/vike-integration/vike.ts#L173\n    objectAssign(pageContextFromRoute, { _routeMatch: winner });\n    if (!winner) {\n        objectAssign(pageContextFromRoute, {\n            pageId: null,\n            routeParams: {}\n        });\n        return pageContextFromRoute;\n    }\n    {\n        const { routeParams } = winner;\n        assert(isPlainObject(routeParams));\n        objectAssign(pageContextFromRoute, {\n            pageId: winner.pageId,\n            routeParams: winner.routeParams\n        });\n    }\n    return pageContextFromRoute;\n}\n","export { setPageContextCurrent };\nexport { getPageContextCurrent };\nimport { getGlobalObject } from './utils.js';\nconst globalObject = getGlobalObject('getPageContextCurrent.ts', {\n    pageContextCurrent: null\n});\nfunction getPageContextCurrent() {\n    const { pageContextCurrent } = globalObject;\n    return pageContextCurrent;\n}\nfunction setPageContextCurrent(pageContextCurrent) {\n    globalObject.pageContextCurrent = pageContextCurrent;\n}\n","// TODO/pageContext-prefetch: rename this file to getPrefetchSettingResolved.ts\nexport { getPrefetchSettings };\nexport { PAGE_CONTEXT_MAX_AGE_DEFAULT };\nimport { assertUsage, assertInfo } from '../utils.js';\n// TODO/pageContext-prefetch: Make it `Infinity` for pre-rendered pages.\nconst PAGE_CONTEXT_MAX_AGE_DEFAULT = 5000;\nconst prefetchSettingTrue = {\n    staticAssets: 'hover',\n    pageContext: PAGE_CONTEXT_MAX_AGE_DEFAULT\n};\nconst prefetchSettingFalse = {\n    staticAssets: 'hover',\n    pageContext: false\n};\n// TODO/v1-release: change to `prefetchSettingTrue`?\nconst prefetchSettingDefault = prefetchSettingFalse;\nfunction getPrefetchSettings(pageContext, linkTag) {\n    let prefetchSetting = prefetchSettingDefault;\n    // TODO/v1-release: remove\n    if ('prefetchLinks' in pageContext.exports) {\n        assertUsage(false, '`export { prefetchLinks }` is deprecated, use `export { prefetchStaticAssets }` instead.');\n    }\n    // TODO/v1-release: remove\n    if ('prefetchStaticAssets' in pageContext.exports) {\n        const prefetchStaticAssets = pageContext.exports.prefetchStaticAssets;\n        /* TODO/pageContext-prefetch: uncomment\n        const msg = `The 'prefetchStaticAssets' setting is deprecated in favor of the 'prefetch' setting, see https://vike.dev/prefetch`\n        assertWarning(false, msg, { onlyOnce: true })\n        assertUsage(\n          prefetchStaticAssets === false || prefetchStaticAssets === 'hover' || prefetchStaticAssets === 'viewport',\n          msg\n        )\n        //*/\n        prefetchSetting.staticAssets = prefetchStaticAssets;\n    }\n    if ('prefetch' in pageContext.exports) {\n        const { prefetch } = pageContext.exports;\n        if (prefetch === true)\n            prefetchSetting = prefetchSettingTrue;\n        if (prefetch === false)\n            prefetchSetting = prefetchSettingFalse;\n        // No validation in order to save client-side KBs\n        Object.assign(prefetchSetting, prefetch);\n        if (prefetchSetting.pageContext === true) {\n            prefetchSetting.pageContext = PAGE_CONTEXT_MAX_AGE_DEFAULT;\n        }\n    }\n    if (prefetchSetting.staticAssets === 'viewport' && import.meta.env.DEV) {\n        assertInfo(false, 'Viewport prefetching is disabled in development', { onlyOnce: true });\n        prefetchSetting.staticAssets = 'hover';\n    }\n    if (linkTag) {\n        {\n            let attr = linkTag.getAttribute('data-prefetch');\n            if (attr !== null) {\n                if (attr === '')\n                    attr = 'true';\n                if (attr === 'true')\n                    prefetchSetting = prefetchSettingTrue;\n                if (attr === 'false')\n                    prefetchSetting = prefetchSettingFalse;\n            }\n        }\n        {\n            let attr = linkTag.getAttribute('data-prefetch-static-assets');\n            if (attr !== null) {\n                if (attr === 'false')\n                    prefetchSetting.staticAssets = false;\n                // No validation in order to save client-side KBs\n                prefetchSetting.staticAssets = attr;\n            }\n        }\n        {\n            let attr = linkTag.getAttribute('data-prefetch-page-context');\n            if (attr !== null) {\n                if (attr === '')\n                    attr = 'true';\n                if (attr === 'true')\n                    prefetchSetting.pageContext = PAGE_CONTEXT_MAX_AGE_DEFAULT;\n                if (attr === 'false')\n                    prefetchSetting.pageContext = false;\n                const n = parseInt(attr, 10);\n                if (!Number.isNaN(n))\n                    prefetchSetting.pageContext = n;\n                // No validation in order to save client-side KBs\n            }\n        }\n    }\n    return prefetchSetting;\n}\n","export { prefetch };\nexport { getPageContextPrefetched };\nexport { initLinkPrefetchHandlers };\nexport { populatePageContextPrefetchCache };\nexport { addLinkPrefetchHandlers };\nexport { addLinkPrefetchHandlers_watch };\nexport { addLinkPrefetchHandlers_unwatch };\nimport { assert, assertClientRouting, assertUsage, assertWarning, checkIfClientRouting, getGlobalObject, hasProp, objectAssign } from './utils.js';\nimport { isErrorFetchingStaticAssets, loadUserFilesClientSide } from '../shared/loadUserFilesClientSide.js';\nimport { skipLink } from './skipLink.js';\nimport { disableClientRouting } from './renderPageClientSide.js';\nimport { isClientSideRoutable } from './isClientSideRoutable.js';\nimport { createPageContext } from './createPageContext.js';\nimport { route } from '../../shared/route/index.js';\nimport { noRouteMatch } from '../../shared/route/noRouteMatch.js';\nimport { getPageContextFromServerHooks } from './getPageContextFromHooks.js';\nimport { getPageContextCurrent } from './getPageContextCurrent.js';\nimport { PAGE_CONTEXT_MAX_AGE_DEFAULT, getPrefetchSettings } from './prefetch/getPrefetchSettings.js';\nimport pc from '@brillout/picocolors';\nimport { normalizeUrlArgument } from './normalizeUrlArgument.js';\nassertClientRouting();\nconst globalObject = getGlobalObject('prefetch.ts', {\n    linkPrefetchHandlerAdded: new WeakSet(),\n    addLinkPrefetchHandlers_debounce: null,\n    mutationObserver: new MutationObserver(addLinkPrefetchHandlers),\n    // `linkTags` [is automatically updated](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCollection#:~:text=An%20HTMLCollection%20in%20the%20HTML%20DOM%20is%20live%3B%20it%20is%20automatically%20updated%20when%20the%20underlying%20document%20is%20changed.)\n    linkTags: document.getElementsByTagName('A'),\n    prefetchedPageContexts: {}\n});\nfunction getPageContextPrefetched(pageContext) {\n    const prefetchSettings = getPrefetchSettings(pageContext, null);\n    // TODO/pageContext-prefetch: I guess we need linkTag to make this condition work\n    if (!prefetchSettings.pageContext)\n        return null;\n    const key = getCacheKey(pageContext.urlPathname);\n    const found = globalObject.prefetchedPageContexts[key];\n    if (!found || found.result.is404ServerSideRouted || isExpired(found))\n        return null;\n    const pageContextPrefetched = found.result.pageContextFromServerHooks;\n    /* TODO/pageContext-prefetch: make it work for when resultMaxAge is Infinity.\n    // We discard the prefetched pageContext whenever we use it, so that the user always sees fresh data upon naivgating.\n    delete globalObject.prefetchedPageContexts[key]\n    */\n    return pageContextPrefetched;\n}\nasync function prefetchAssets(pageContextLink) {\n    try {\n        await loadUserFilesClientSide(pageContextLink.pageId, pageContextLink._pageFilesAll, pageContextLink._pageConfigs);\n    }\n    catch (err) {\n        if (isErrorFetchingStaticAssets(err)) {\n            disableClientRouting(err, true);\n        }\n        else {\n            throw err;\n        }\n    }\n}\nasync function prefetchPageContextFromServerHooks(pageContextLink, resultMaxAge) {\n    const result = await getPageContextFromServerHooks(pageContextLink, false);\n    setPageContextPrefetchCache(pageContextLink, result, resultMaxAge);\n}\nfunction populatePageContextPrefetchCache(pageContext /*& PageContextExports*/, result) {\n    // TODO/pageContext-prefetch: replace with using pageContext.config.prerender instead. (For being able to do that: eager configs need to be accessible without have to use PageContextExports as it isn't available here.)\n    if (!isBrilloutDocpress())\n        return;\n    setPageContextPrefetchCache(pageContext, result, null);\n}\nfunction setPageContextPrefetchCache(pageContext, result, resultMaxAge) {\n    if (resultMaxAge === null)\n        resultMaxAge = getResultMaxAge();\n    const key = getCacheKey(pageContext.urlPathname);\n    assert(isBrilloutDocpress()); // Ensure this API isn't used by anyone else\n    globalObject.prefetchedPageContexts[key] = {\n        resultFetchedAt: Date.now(),\n        resultMaxAge,\n        result\n    };\n}\nfunction getResultMaxAge() {\n    const pageContextCurrent = getPageContextCurrent();\n    // TODO/pageContext-prefetch: remove this dirty hack used by @brillout/docpress and, instead, use Vike's default if pageContextCurrent isn't defined yet.\n    if (!pageContextCurrent)\n        return Infinity;\n    const prefetchSettings = getPrefetchSettings(pageContextCurrent, null);\n    const resultMaxAge = typeof prefetchSettings.pageContext === 'number' ? prefetchSettings.pageContext : PAGE_CONTEXT_MAX_AGE_DEFAULT;\n    return resultMaxAge;\n}\n/**\n * Programmatically prefetch client assets.\n *\n * https://vike.dev/prefetch\n *\n * @param url - The URL of the page you want to prefetch.\n */\nasync function prefetch(url, \n/* TODO/pageContext-prefetch\noptions?: {\n  pageContext?: boolean\n  staticAssets?: boolean\n}\n*/\noptions_) {\n    const options = {\n        staticAssets: true,\n        pageContext: options_?.pageContext ?? false\n    };\n    assertUsage(checkIfClientRouting(), 'prefetch() only works with Client Routing, see https://vike.dev/prefetch', {\n        showStackTrace: true\n    });\n    url = normalizeUrlArgument(url, 'prefetch');\n    const pageContextLink = await getPageContextLink(url);\n    if (!pageContextLink?.pageId) {\n        assertWarning(false, `[prefetch(url)] ${pc.string(url)} ${noRouteMatch}`, {\n            showStackTrace: true,\n            onlyOnce: false\n        });\n        return;\n    }\n    assert(hasProp(pageContextLink, 'pageId', 'string')); // help TypeScript\n    await Promise.all([\n        (async () => {\n            if (options?.staticAssets !== false) {\n                await prefetchAssets(pageContextLink);\n            }\n        })(),\n        (async () => {\n            if (options?.pageContext !== false) {\n                assertUsage(isBrilloutDocpress(), \"prefetching pageContext isn't supported yet\");\n                const resultMaxAge = typeof options?.pageContext === 'number' ? options.pageContext : null;\n                await prefetchPageContextFromServerHooks(pageContextLink, resultMaxAge);\n            }\n        })()\n    ]);\n}\n// Lazy execution logic copied from: https://github.com/withastro/astro/blob/2594eb088d53a98181ac820243bcb1a765856ecf/packages/astro/src/runtime/client/dev-toolbar/apps/audit/index.ts#L53-L72\nfunction addLinkPrefetchHandlers() {\n    if (globalObject.addLinkPrefetchHandlers_debounce)\n        clearTimeout(globalObject.addLinkPrefetchHandlers_debounce);\n    globalObject.addLinkPrefetchHandlers_debounce = setTimeout(() => {\n        // Wait for the next idle period, as it is less likely to interfere with any other work the browser is doing post-mutation.\n        if ('requestIdleCallback' in window) {\n            requestIdleCallback(addLinkPrefetchHandlers_apply, { timeout: 300 });\n        }\n        else {\n            // Fallback for old versions of Safari, we'll assume that things are less likely to be busy after 150ms.\n            setTimeout(addLinkPrefetchHandlers_apply, 150);\n        }\n    }, 250);\n}\nfunction initLinkPrefetchHandlers() {\n    addLinkPrefetchHandlers();\n}\nfunction addLinkPrefetchHandlers_watch() {\n    // Notes about performance:\n    // - https://stackoverflow.com/questions/31659567/performance-of-mutationobserver-to-detect-nodes-in-entire-dom/39332340#39332340\n    // - https://news.ycombinator.com/item?id=15274211\n    //   - https://github.com/kubetail-org/sentineljs\n    // - https://stackoverflow.com/questions/55046093/listening-for-changes-in-htmlcollection-or-achieving-a-similar-effect\n    globalObject.mutationObserver.observe(document.body, {\n        childList: true,\n        subtree: true\n    });\n}\nfunction addLinkPrefetchHandlers_unwatch() {\n    globalObject.mutationObserver.disconnect();\n}\nfunction addLinkPrefetchHandlers_apply() {\n    for (let linkTag of globalObject.linkTags) {\n        if (globalObject.linkPrefetchHandlerAdded.has(linkTag))\n            continue;\n        globalObject.linkPrefetchHandlerAdded.add(linkTag);\n        if (skipLink(linkTag))\n            continue;\n        linkTag.addEventListener('mouseover', () => {\n            prefetchOnEvent(linkTag, 'hover');\n        }, { passive: true });\n        linkTag.addEventListener('touchstart', () => {\n            prefetchOnEvent(linkTag, 'hover');\n        }, { passive: true });\n        const observer = new IntersectionObserver((entries) => {\n            entries.forEach((entry) => {\n                if (entry.isIntersecting) {\n                    prefetchOnEvent(linkTag, 'viewport');\n                }\n            });\n        });\n        observer.observe(linkTag);\n    }\n}\nasync function prefetchOnEvent(linkTag, event) {\n    let prefetchSettings;\n    const pageContextCurrent = getPageContextCurrent();\n    if (pageContextCurrent) {\n        prefetchSettings = getPrefetchSettings(pageContextCurrent, linkTag);\n    }\n    else {\n        if (isBrilloutDocpress()) {\n            // TODO/pageContext-prefetch: remove this dirty hack used by @brillout/docpress and, instead, use Vike's default if pageContextCurrent isn't defined yet.\n            prefetchSettings = { staticAssets: 'hover', pageContext: Infinity };\n        }\n        else {\n            // TODO/pageContext-prefetch: consider pageContextLink\n            return;\n        }\n    }\n    // Check again in case DOM was manipulated since last check\n    if (skipLink(linkTag))\n        return;\n    const urlOfLink = linkTag.getAttribute('href');\n    const pageContextLink = await getPageContextLink(urlOfLink);\n    if (!pageContextLink?.pageId)\n        return;\n    assert(hasProp(pageContextLink, 'pageId', 'string')); // help TypeScript\n    if (!(await isClientSideRoutable(pageContextLink.pageId, pageContextLink)))\n        return;\n    await Promise.all([\n        (async () => {\n            if (prefetchSettings.staticAssets === event) {\n                await prefetchAssets(pageContextLink);\n            }\n        })(),\n        (async () => {\n            if (event !== 'viewport' && prefetchSettings.pageContext) {\n                const key = getCacheKey(urlOfLink);\n                const found = globalObject.prefetchedPageContexts[key];\n                if (!found || isExpired(found)) {\n                    // TODO/pageContext-prefetch: move this logic in getPrefetchSettings()\n                    const resultMaxAge = prefetchSettings.pageContext;\n                    await prefetchPageContextFromServerHooks(pageContextLink, resultMaxAge);\n                }\n            }\n        })()\n    ]);\n}\nfunction isExpired(found) {\n    return Date.now() - found.resultFetchedAt > found.resultMaxAge;\n}\n// TODO/next-major-release: make it sync\nasync function getPageContextLink(urlOfLink) {\n    const pageContextLink = await createPageContext(urlOfLink);\n    let pageContextFromRoute;\n    try {\n        pageContextFromRoute = await route(pageContextLink);\n    }\n    catch {\n        // If a route() hook has a bug or `throw render()` / `throw redirect()`\n        return null;\n    }\n    objectAssign(pageContextLink, pageContextFromRoute);\n    return pageContextLink;\n}\nfunction getCacheKey(url) {\n    if (url.startsWith('#'))\n        url = '/';\n    assert(url.startsWith('/'), { urlPathname: url });\n    const key = url.split('#')[0];\n    return key;\n}\n// TODO/pageContext-prefetch: remove\nfunction isBrilloutDocpress() {\n    return '_isBrilloutDocpress' in window;\n}\n","export { executeOnRenderClientHook };\nimport { assert, assertUsage, executeHook } from '../server-routing-runtime/utils.js';\nimport { getHook } from '../../shared/hooks/getHook.js';\nimport { preparePageContextForUserConsumptionClientSide } from './preparePageContextForUserConsumptionClientSide.js';\nasync function executeOnRenderClientHook(pageContext, isClientRouting) {\n    const pageContextForUserConsumption = preparePageContextForUserConsumptionClientSide(pageContext, isClientRouting);\n    let hook = null;\n    let hookName;\n    {\n        const renderHook = getHook(pageContext, 'render');\n        hook = renderHook;\n        hookName = 'render';\n    }\n    {\n        const renderHook = getHook(pageContext, 'onRenderClient');\n        if (renderHook) {\n            hook = renderHook;\n            hookName = 'onRenderClient';\n        }\n    }\n    if (!hook) {\n        const urlToShowToUser = getUrlToShowToUser(pageContext);\n        assert(urlToShowToUser);\n        if (pageContext._pageConfigs.length > 0) {\n            // V1 design\n            assertUsage(false, `No onRenderClient() hook defined for URL '${urlToShowToUser}', but it's needed, see https://vike.dev/onRenderClient`);\n        }\n        else {\n            // TODO/v1-release: remove\n            // V0.4 design\n            const pageClientsFilesLoaded = pageContext._pageFilesLoaded.filter((p) => p.fileType === '.page.client');\n            let errMsg;\n            if (pageClientsFilesLoaded.length === 0) {\n                errMsg = 'No file `*.page.client.*` found for URL ' + urlToShowToUser;\n            }\n            else {\n                errMsg =\n                    'One of the following files should export a render() hook: ' +\n                        pageClientsFilesLoaded.map((p) => p.filePath).join(' ');\n            }\n            assertUsage(false, errMsg);\n        }\n    }\n    assert(hook);\n    const renderHook = hook.hookFn;\n    assert(hookName);\n    // We don't use a try-catch wrapper because rendering errors are usually handled by the UI framework. (E.g. React's Error Boundaries.)\n    const hookResult = await executeHook(() => renderHook(pageContextForUserConsumption), hook, pageContext);\n    assertUsage(hookResult === undefined, `The ${hookName}() hook defined by ${hook.hookFilePath} isn't allowed to return a value`);\n}\nfunction getUrlToShowToUser(pageContext) {\n    let url;\n    // try/catch to avoid passToClient assertUsage() (although: this may not be needed anymore, since we're now accessing pageContext and not pageContextForUserConsumption)\n    try {\n        url =\n            // Client Routing\n            pageContext.urlPathname ??\n                // Server Routing\n                pageContext.urlOriginal;\n    }\n    catch { }\n    url = url ?? window.location.href;\n    return url;\n}\n","export { pushHistoryState };\nexport { onPopStateBegin };\nexport { saveScrollPosition };\nimport { assert, assertUsage, getCurrentUrl, getGlobalObject, hasProp, isObject } from './utils.js';\ninit();\nconst globalObject = getGlobalObject('history.ts', { previous: getHistoryInfo() });\n// `window.history.state === null` when:\n// - The very first render\n// - Click on `<a href=\"#some-hash\" />`\n// - `location.hash = 'some-hash'`\nfunction enhanceHistoryState() {\n    const stateNotEnhanced = getStateNotEnhanced();\n    if (isVikeEnhanced(stateNotEnhanced))\n        return;\n    const stateVikeEnhanced = enhance(stateNotEnhanced);\n    replaceHistoryState(stateVikeEnhanced);\n}\nfunction enhance(stateNotEnhanced) {\n    const timestamp = getTimestamp();\n    const scrollPosition = getScrollPosition();\n    const triggeredBy = 'browser';\n    let stateVikeEnhanced;\n    if (!stateNotEnhanced) {\n        stateVikeEnhanced = {\n            timestamp,\n            scrollPosition,\n            triggeredBy,\n            _isVikeEnhanced: true\n        };\n    }\n    else {\n        // State information may be incomplete if `window.history.state` is set by an old Vike version. (E.g. `state.timestamp` was introduced for `pageContext.isBackwardNavigation` in `0.4.19`.)\n        stateVikeEnhanced = {\n            timestamp: stateNotEnhanced.timestamp ?? timestamp,\n            scrollPosition: stateNotEnhanced.scrollPosition ?? scrollPosition,\n            triggeredBy: stateNotEnhanced.triggeredBy ?? triggeredBy,\n            _isVikeEnhanced: true\n        };\n    }\n    assert(isVikeEnhanced(stateVikeEnhanced));\n    return stateVikeEnhanced;\n}\nfunction getState() {\n    const state = getStateNotEnhanced();\n    // *Every* state added to the history needs to go through Vike.\n    // - Otherwise Vike's `popstate` listener won't work. (Because, for example, if globalObject.previous is outdated => isHashNavigation faulty => client-side navigation is wrongfully skipped.)\n    // - Therefore, we have to monkey patch history.pushState() and history.replaceState()\n    // - Therefore, we need the assert() below to ensure history.state has been enhanced by Vike\n    //   - If users stumble upon this assert() then let's make it a assertUsage()\n    assert(isVikeEnhanced(state));\n    return state;\n}\nfunction getStateNotEnhanced() {\n    const state = window.history.state;\n    return state;\n}\nfunction getScrollPosition() {\n    const scrollPosition = { x: window.scrollX, y: window.scrollY };\n    return scrollPosition;\n}\nfunction getTimestamp() {\n    return new Date().getTime();\n}\nfunction saveScrollPosition() {\n    const scrollPosition = getScrollPosition();\n    const state = getState();\n    replaceHistoryState({ ...state, scrollPosition });\n}\nfunction pushHistoryState(url, overwriteLastHistoryEntry) {\n    if (!overwriteLastHistoryEntry) {\n        const state = {\n            timestamp: getTimestamp(),\n            // I don't remember why I set it to `null`, maybe because setting it now would be too early? (Maybe there is a delay between renderPageClientSide() is finished and the browser updating the scroll position.) Anyways, it seems like autoSaveScrollPosition() is enough.\n            scrollPosition: null,\n            triggeredBy: 'vike',\n            _isVikeEnhanced: true\n        };\n        // Calling the monkey patched history.pushState() (and not the orignal) so that other tools (e.g. user tracking) can listen to Vike's pushState() calls.\n        // - https://github.com/vikejs/vike/issues/1582\n        window.history.pushState(state, '', url);\n    }\n    else {\n        replaceHistoryState(getState(), url);\n    }\n}\nfunction replaceHistoryState(state, url) {\n    const url_ = url ?? null; // Passing `undefined` chokes older Edge versions.\n    window.history.replaceState(state, '', url_);\n}\n// Monkey patch:\n// - history.pushState()\n// - history.replaceState()\nfunction monkeyPatchHistoryAPI() {\n    ;\n    ['pushState', 'replaceState'].forEach((funcName) => {\n        const funcOriginal = window.history[funcName].bind(window.history);\n        window.history[funcName] = (stateOriginal = {}, ...rest) => {\n            assertUsage(stateOriginal === undefined || stateOriginal === null || isObject(stateOriginal), `history.${funcName}(state) argument state must be an object`);\n            const stateEnhanced = isVikeEnhanced(stateOriginal)\n                ? stateOriginal\n                : {\n                    _isVikeEnhanced: true,\n                    scrollPosition: getScrollPosition(),\n                    timestamp: getTimestamp(),\n                    triggeredBy: 'user',\n                    ...stateOriginal\n                };\n            assert(isVikeEnhanced(stateEnhanced));\n            const ret = funcOriginal(stateEnhanced, ...rest);\n            globalObject.previous = getHistoryInfo();\n            return ret;\n        };\n    });\n}\nfunction isVikeEnhanced(state) {\n    const yes = isObject(state) && '_isVikeEnhanced' in state;\n    if (yes)\n        assertStateVikeEnhanced(state);\n    return yes;\n}\nfunction assertStateVikeEnhanced(state) {\n    assert(isObject(state));\n    assert(hasProp(state, '_isVikeEnhanced', 'true'));\n    // TODO/eventually: remove assert() below to save client-side KBs\n    assert(hasProp(state, 'timestamp', 'number'));\n    assert(hasProp(state, 'scrollPosition'));\n    if (state.scrollPosition !== null) {\n        assert(hasProp(state, 'scrollPosition', 'object'));\n        assert(hasProp(state.scrollPosition, 'x', 'number') && hasProp(state.scrollPosition, 'y', 'number'));\n    }\n}\nfunction init() {\n    enhanceHistoryState();\n    monkeyPatchHistoryAPI();\n}\nfunction getHistoryInfo() {\n    return {\n        url: getCurrentUrl(),\n        state: getState()\n    };\n}\nfunction onPopStateBegin() {\n    const { previous } = globalObject;\n    const isNewState = window.history.state === null;\n    if (isNewState)\n        enhanceHistoryState();\n    const current = getHistoryInfo();\n    globalObject.previous = current;\n    return { isNewState, previous, current };\n}\n","export { setScrollPosition };\nexport { autoSaveScrollPosition };\nimport { assert, onPageHide, sleep, throttle } from './utils.js';\nimport { saveScrollPosition } from './history.js';\nfunction setScrollPosition(scrollTarget) {\n    if (scrollTarget && 'x' in scrollTarget) {\n        setScroll(scrollTarget);\n        return;\n    }\n    if (scrollTarget?.preserveScroll) {\n        return;\n    }\n    scrollToTopOrHash();\n}\n// Replicates the browser's native behavior\nfunction scrollToTopOrHash() {\n    const hash = getUrlHash();\n    if (!hash || hash === 'top') {\n        setScroll({ x: 0, y: 0 });\n    }\n    else {\n        const hashTarget = document.getElementById(hash) || document.getElementsByName(hash)[0];\n        if (hashTarget) {\n            hashTarget.scrollIntoView();\n        }\n    }\n}\n/** Change the browser's scoll position, in a way that works during a repaint. */\nfunction setScroll(scrollPosition) {\n    const scroll = () => window.scrollTo(scrollPosition.x, scrollPosition.y);\n    const done = () => window.scrollX === scrollPosition.x && window.scrollY === scrollPosition.y;\n    // In principle, this `done()` call should force the repaint to be finished. But that doesn't seem to be the case with `Firefox 97.0.1`.\n    if (done())\n        return;\n    scroll();\n    // Because `done()` doesn't seem to always force the repaint to be finished, we potentially need to retry again.\n    if (done())\n        return;\n    requestAnimationFrame(() => {\n        scroll();\n        if (done())\n            return;\n        setTimeout(async () => {\n            scroll();\n            if (done())\n                return;\n            // In principle, `requestAnimationFrame() -> setTimeout(, 0)` should be enough.\n            //  - https://stackoverflow.com/questions/61281139/waiting-for-repaint-in-javascript\n            //  - But it's not enough for `Firefox 97.0.1`.\n            //  - The following strategy is very agressive. It doesn't need to be that aggressive for Firefox. But we do it to be safe.\n            const start = new Date().getTime();\n            while (true) {\n                await sleep(10);\n                scroll();\n                if (done())\n                    return;\n                const millisecondsElapsed = new Date().getTime() - start;\n                if (millisecondsElapsed > 100)\n                    return;\n            }\n        }, 0);\n    });\n}\nfunction getUrlHash() {\n    let { hash } = window.location;\n    if (hash === '')\n        return null;\n    assert(hash.startsWith('#'));\n    hash = hash.slice(1);\n    return hash;\n}\n// Save scroll position (needed for back-/forward navigation)\nfunction autoSaveScrollPosition() {\n    // Safari cannot handle more than 100 `history.replaceState()` calls within 30 seconds (https://github.com/vikejs/vike/issues/46)\n    window.addEventListener('scroll', throttle(saveScrollPosition, Math.ceil(1000 / 3)), { passive: true });\n    onPageHide(saveScrollPosition);\n}\n","// Handle the browser's native scroll restoration mechanism\nexport { browserNativeScrollRestoration_disable };\nexport { setupNativeScrollRestoration };\nexport { setInitialRenderIsDone };\nimport { getGlobalObject, onPageHide, onPageShow } from './utils.js';\nconst globalObject = getGlobalObject('scrollRestoration.ts', {});\n// We use the browser's native scroll restoration mechanism only for the first render\nfunction setupNativeScrollRestoration() {\n    browserNativeScrollRestoration_enable();\n    onPageHide(browserNativeScrollRestoration_enable);\n    onPageShow(() => globalObject.initialRenderIsDone && browserNativeScrollRestoration_disable());\n}\nfunction setInitialRenderIsDone() {\n    globalObject.initialRenderIsDone = true;\n}\nfunction browserNativeScrollRestoration_disable() {\n    if ('scrollRestoration' in window.history) {\n        window.history.scrollRestoration = 'manual';\n    }\n}\nfunction browserNativeScrollRestoration_enable() {\n    if ('scrollRestoration' in window.history) {\n        window.history.scrollRestoration = 'auto';\n    }\n}\n","export { renderPageClientSide };\nexport { getRenderCount };\nexport { disableClientRouting };\nexport { firstRenderStartPromise };\nimport { assert, getCurrentUrl, isSameErrorMessage, objectAssign, redirectHard, getGlobalObject, executeHook, hasProp, augmentType, genPromise, isCallable } from './utils.js';\nimport { getPageContextFromClientHooks, getPageContextFromServerHooks, getPageContextFromHooks_isHydration, getPageContextFromHooks_serialized, setPageContextInitIsPassedToClient } from './getPageContextFromHooks.js';\nimport { createPageContext } from './createPageContext.js';\nimport { addLinkPrefetchHandlers, addLinkPrefetchHandlers_unwatch, addLinkPrefetchHandlers_watch, getPageContextPrefetched, populatePageContextPrefetchCache } from './prefetch.js';\nimport { assertInfo, assertWarning, isReact } from './utils.js';\nimport { executeOnRenderClientHook } from '../shared/executeOnRenderClientHook.js';\nimport { assertHook, getHook } from '../../shared/hooks/getHook.js';\nimport { isErrorFetchingStaticAssets, loadUserFilesClientSide } from '../shared/loadUserFilesClientSide.js';\nimport { pushHistoryState } from './history.js';\nimport { assertNoInfiniteAbortLoop, getPageContextFromAllRewrites, isAbortError, logAbortErrorHandled } from '../../shared/route/abort.js';\nimport { route } from '../../shared/route/index.js';\nimport { isClientSideRoutable } from './isClientSideRoutable.js';\nimport { setScrollPosition } from './setScrollPosition.js';\nimport { browserNativeScrollRestoration_disable, setInitialRenderIsDone } from './scrollRestoration.js';\nimport { getErrorPageId } from '../../shared/error-page.js';\nimport { setPageContextCurrent } from './getPageContextCurrent.js';\nimport { getRouteStringParameterList } from '../../shared/route/resolveRouteString.js';\nconst globalObject = getGlobalObject('renderPageClientSide.ts', (() => {\n    const { promise: firstRenderStartPromise, resolve: firstRenderStartPromiseResolve } = genPromise();\n    return {\n        renderCounter: 0,\n        firstRenderStartPromise,\n        firstRenderStartPromiseResolve\n    };\n})());\nconst { firstRenderStartPromise } = globalObject;\nasync function renderPageClientSide(renderArgs) {\n    const { urlOriginal = getCurrentUrl(), overwriteLastHistoryEntry = false, isBackwardNavigation, pageContextsFromRewrite = [], redirectCount = 0, doNotRenderIfSamePage, isClientSideNavigation = true } = renderArgs;\n    let { scrollTarget } = renderArgs;\n    const { previousPageContext } = globalObject;\n    addLinkPrefetchHandlers_unwatch();\n    const { isRenderOutdated, setHydrationCanBeAborted, isFirstRender } = getIsRenderOutdated();\n    assertNoInfiniteAbortLoop(pageContextsFromRewrite.length, redirectCount);\n    if (globalObject.clientRoutingIsDisabled) {\n        redirectHard(urlOriginal);\n        return;\n    }\n    globalObject.firstRenderStartPromiseResolve();\n    if (isRenderOutdated())\n        return;\n    await renderPageNominal();\n    return;\n    async function renderPageNominal() {\n        const onError = async (err) => {\n            await renderErrorPage({ err });\n        };\n        const pageContext = await getPageContextBegin(false);\n        if (isRenderOutdated())\n            return;\n        // onPageTransitionStart()\n        if (globalObject.isFirstRenderDone) {\n            assert(previousPageContext);\n            // We use the hook of the previous page in order to be able to call onPageTransitionStart() before fetching the files of the next page.\n            // https://github.com/vikejs/vike/issues/1560\n            assertHook(previousPageContext, 'onPageTransitionStart');\n            if (!globalObject.isTransitioning) {\n                globalObject.isTransitioning = true;\n                const onPageTransitionStartHook = getHook(previousPageContext, 'onPageTransitionStart');\n                if (onPageTransitionStartHook) {\n                    const hook = onPageTransitionStartHook;\n                    const { hookFn } = hook;\n                    try {\n                        await executeHook(() => hookFn(pageContext), hook, pageContext);\n                    }\n                    catch (err) {\n                        await onError(err);\n                        return;\n                    }\n                    if (isRenderOutdated())\n                        return;\n                }\n            }\n        }\n        // Route\n        if (isFirstRender) {\n            const pageContextSerialized = getPageContextFromHooks_serialized();\n            // TODO/eventually: create helper assertPageContextFromHook()\n            assert(!('urlOriginal' in pageContextSerialized));\n            objectAssign(pageContext, pageContextSerialized);\n            // TODO/pageContext-prefetch: remove or change, because this only makes sense for a pre-rendered page\n            populatePageContextPrefetchCache(pageContext, { pageContextFromServerHooks: pageContextSerialized });\n        }\n        else {\n            let pageContextFromRoute;\n            try {\n                pageContextFromRoute = await route(pageContext);\n            }\n            catch (err) {\n                await onError(err);\n                return;\n            }\n            if (isRenderOutdated())\n                return;\n            if (!pageContextFromRoute.pageId) {\n                /*\n                // We don't use the client router to render the 404 page:\n                //  - So that the +redirects setting (https://vike.dev/redirects) can be applied.\n                //    - This is the main argument.\n                //    - See also failed CI: https://github.com/vikejs/vike/pull/1871\n                //  - So that server-side error tracking can track 404 links?\n                //    - We do use the client router for rendering the error page, so I don't think this is much of an argument.\n                await renderErrorPage({ is404: true })\n                */\n                redirectHard(urlOriginal);\n                return;\n            }\n            assert(hasProp(pageContextFromRoute, 'pageId', 'string')); // Help TS\n            const isClientRoutable = await isClientSideRoutable(pageContextFromRoute.pageId, pageContext);\n            if (isRenderOutdated())\n                return;\n            if (!isClientRoutable) {\n                redirectHard(urlOriginal);\n                return;\n            }\n            const isSamePage = pageContextFromRoute.pageId &&\n                previousPageContext?.pageId &&\n                pageContextFromRoute.pageId === previousPageContext.pageId;\n            if (doNotRenderIfSamePage && isSamePage) {\n                // Skip's Vike's rendering; let the user handle the navigation\n                return;\n            }\n            // TODO/eventually: create helper assertPageContextFromHook()\n            assert(!('urlOriginal' in pageContextFromRoute));\n            objectAssign(pageContext, pageContextFromRoute);\n        }\n        try {\n            objectAssign(pageContext, await loadUserFilesClientSide(pageContext.pageId, pageContext._pageFilesAll, pageContext._pageConfigs));\n        }\n        catch (err) {\n            if (handleErrorFetchingStaticAssets(err, pageContext, isFirstRender)) {\n                return;\n            }\n            else {\n                // A user file has a syntax error\n                await onError(err);\n                return;\n            }\n        }\n        if (isRenderOutdated())\n            return;\n        setPageContextCurrent(pageContext);\n        // Set global hydrationCanBeAborted\n        if (pageContext.exports.hydrationCanBeAborted) {\n            setHydrationCanBeAborted();\n        }\n        else {\n            assertWarning(!isReact(), 'You seem to be using React; we recommend setting hydrationCanBeAborted to true, see https://vike.dev/hydrationCanBeAborted', { onlyOnce: true });\n        }\n        // There wasn't any `await` but the isRenderOutdated() return value may have changed because we called setHydrationCanBeAborted()\n        if (isRenderOutdated())\n            return;\n        // Get pageContext from hooks (fetched from server, and/or directly called on the client-side)\n        if (isFirstRender) {\n            assert(hasProp(pageContext, '_hasPageContextFromServer', 'true'));\n            let pageContextAugmented;\n            try {\n                pageContextAugmented = await getPageContextFromHooks_isHydration(pageContext);\n            }\n            catch (err) {\n                await onError(err);\n                return;\n            }\n            if (isRenderOutdated())\n                return;\n            augmentType(pageContext, pageContextAugmented);\n            // Render page view\n            await renderPageView(pageContext);\n        }\n        else {\n            // Fetch pageContext from server-side hooks\n            let pageContextFromServerHooks;\n            const pageContextPrefetched = getPageContextPrefetched(pageContext);\n            if (pageContextPrefetched) {\n                pageContextFromServerHooks = pageContextPrefetched;\n            }\n            else {\n                try {\n                    const result = await getPageContextFromServerHooks(pageContext, false);\n                    if (result.is404ServerSideRouted)\n                        return;\n                    pageContextFromServerHooks = result.pageContextFromServerHooks;\n                    // TODO/pageContext-prefetch: remove or change, because this only makes sense for a pre-rendered page\n                    populatePageContextPrefetchCache(pageContext, result);\n                }\n                catch (err) {\n                    await onError(err);\n                    return;\n                }\n            }\n            if (isRenderOutdated())\n                return;\n            // TODO/eventually: create helper assertPageContextFromHook()\n            assert(!('urlOriginal' in pageContextFromServerHooks));\n            objectAssign(pageContext, pageContextFromServerHooks);\n            // Get pageContext from client-side hooks\n            let pageContextFromClientHooks;\n            try {\n                pageContextFromClientHooks = await getPageContextFromClientHooks(pageContext, false);\n            }\n            catch (err) {\n                await onError(err);\n                return;\n            }\n            if (isRenderOutdated())\n                return;\n            augmentType(pageContext, pageContextFromClientHooks);\n            await renderPageView(pageContext);\n        }\n    }\n    async function getPageContextBegin(isForErrorPage) {\n        const pageContext = await createPageContext(urlOriginal);\n        objectAssign(pageContext, {\n            isBackwardNavigation,\n            isClientSideNavigation,\n            isHydration: isFirstRender && !isForErrorPage,\n            _previousPageContext: previousPageContext\n        });\n        {\n            const pageContextFromAllRewrites = getPageContextFromAllRewrites(pageContextsFromRewrite);\n            assert(!('urlOriginal' in pageContextFromAllRewrites));\n            objectAssign(pageContext, pageContextFromAllRewrites);\n        }\n        return pageContext;\n    }\n    async function renderErrorPage(args) {\n        const onError = (err) => {\n            if (!isSameErrorMessage(err, args.err)) {\n                /* When we can't render the error page, we prefer showing a blank page over letting the server-side try because otherwise:\n                   - We risk running into an infinite loop of reloads which would overload the server.\n                   - An infinite reloading page is a even worse UX than a blank page.\n                redirectHard(urlOriginal)\n                */\n                console.error(err);\n            }\n        };\n        if ('err' in args) {\n            const { err } = args;\n            assert(err);\n            if (!isAbortError(err)) {\n                // We don't swallow 404 errors:\n                //  - On the server-side, Vike swallows / doesn't show any 404 error log because it's expected that a user may go to some random non-existent URL. (We don't want to flood the app's error tracking with 404 logs.)\n                //  - On the client-side, if the user navigates to a 404 then it means that the UI has a broken link. (It isn't expected that users can go to some random URL using the client-side router, as it would require, for example, the user to manually change the URL of a link by manually manipulating the DOM which highly unlikely.)\n                console.error(err);\n            }\n            else {\n                // We swallow throw redirect()/render() called by client-side hooks onBeforeRender()/data()/guard()\n                // We handle the abort error down below.\n            }\n        }\n        const pageContext = await getPageContextBegin(true);\n        if (isRenderOutdated())\n            return;\n        if (args.is404)\n            objectAssign(pageContext, { is404: true });\n        if (args.pageContextError)\n            objectAssign(pageContext, args.pageContextError);\n        if ('err' in args) {\n            const { err } = args;\n            assert(!('errorWhileRendering' in pageContext));\n            pageContext.errorWhileRendering = err;\n            if (isAbortError(err)) {\n                const errAbort = err;\n                logAbortErrorHandled(err, !import.meta.env.DEV, pageContext);\n                const pageContextAbort = errAbort._pageContextAbort;\n                // throw render('/some-url')\n                if (pageContextAbort._urlRewrite) {\n                    await renderPageClientSide({\n                        ...renderArgs,\n                        scrollTarget: undefined,\n                        pageContextsFromRewrite: [...pageContextsFromRewrite, pageContextAbort]\n                    });\n                    return;\n                }\n                // throw redirect('/some-url')\n                if (pageContextAbort._urlRedirect) {\n                    const urlRedirect = pageContextAbort._urlRedirect.url;\n                    if (!urlRedirect.startsWith('/')) {\n                        // External redirection\n                        redirectHard(urlRedirect);\n                        return;\n                    }\n                    else {\n                        await renderPageClientSide({\n                            ...renderArgs,\n                            scrollTarget: undefined,\n                            urlOriginal: urlRedirect,\n                            overwriteLastHistoryEntry: false,\n                            isBackwardNavigation: false,\n                            redirectCount: redirectCount + 1\n                        });\n                    }\n                    return;\n                }\n                // throw render(statusCode)\n                assert(pageContextAbort.abortStatusCode);\n                assert(!('urlOriginal' in pageContextAbort));\n                objectAssign(pageContext, pageContextAbort);\n                if (pageContextAbort.abortStatusCode === 404) {\n                    objectAssign(pageContext, { is404: true });\n                }\n            }\n            else {\n                objectAssign(pageContext, { is404: false });\n            }\n        }\n        const errorPageId = getErrorPageId(pageContext._pageFilesAll, pageContext._pageConfigs);\n        if (!errorPageId)\n            throw new Error('No error page defined.');\n        objectAssign(pageContext, {\n            pageId: errorPageId\n        });\n        const isClientRoutable = await isClientSideRoutable(pageContext.pageId, pageContext);\n        if (isRenderOutdated())\n            return;\n        if (!isClientRoutable) {\n            redirectHard(urlOriginal);\n            return;\n        }\n        try {\n            objectAssign(pageContext, await loadUserFilesClientSide(pageContext.pageId, pageContext._pageFilesAll, pageContext._pageConfigs));\n        }\n        catch (err) {\n            if (handleErrorFetchingStaticAssets(err, pageContext, isFirstRender)) {\n                return;\n            }\n            else {\n                // A user file has a syntax error\n                onError(err);\n                return;\n            }\n        }\n        if (isRenderOutdated())\n            return;\n        setPageContextCurrent(pageContext);\n        let pageContextFromServerHooks;\n        try {\n            const result = await getPageContextFromServerHooks(pageContext, true);\n            if (result.is404ServerSideRouted)\n                return;\n            pageContextFromServerHooks = result.pageContextFromServerHooks;\n        }\n        catch (err) {\n            onError(err);\n            return;\n        }\n        if (isRenderOutdated())\n            return;\n        // TODO/eventually: create helper assertPageContextFromHook()\n        assert(!('urlOriginal' in pageContextFromServerHooks));\n        objectAssign(pageContext, pageContextFromServerHooks);\n        let pageContextFromClientHooks;\n        try {\n            pageContextFromClientHooks = await getPageContextFromClientHooks(pageContext, true);\n        }\n        catch (err) {\n            onError(err);\n            return;\n        }\n        if (isRenderOutdated())\n            return;\n        augmentType(pageContext, pageContextFromClientHooks);\n        objectAssign(pageContext, { routeParams: {} });\n        await renderPageView(pageContext, args);\n    }\n    async function renderPageView(pageContext, isErrorPage) {\n        const onError = async (err) => {\n            if (!isErrorPage) {\n                await renderErrorPage({ err });\n            }\n            else {\n                if (!isSameErrorMessage(err, isErrorPage.err)) {\n                    console.error(err);\n                }\n            }\n        };\n        // We use globalObject.onRenderClientPromise in order to ensure that there is never two concurrent onRenderClient() calls\n        if (globalObject.onRenderClientPromise) {\n            // Make sure that the previous render has finished\n            await globalObject.onRenderClientPromise;\n            assert(globalObject.onRenderClientPromise === undefined);\n            if (isRenderOutdated())\n                return;\n        }\n        changeUrl(urlOriginal, overwriteLastHistoryEntry);\n        globalObject.previousPageContext = pageContext;\n        assert(globalObject.onRenderClientPromise === undefined);\n        globalObject.onRenderClientPromise = (async () => {\n            let onRenderClientError;\n            try {\n                await executeOnRenderClientHook(pageContext, true);\n            }\n            catch (err) {\n                onRenderClientError = err;\n            }\n            globalObject.onRenderClientPromise = undefined;\n            globalObject.isFirstRenderDone = true;\n            return onRenderClientError;\n        })();\n        const onRenderClientError = await globalObject.onRenderClientPromise;\n        assert(globalObject.onRenderClientPromise === undefined);\n        if (onRenderClientError) {\n            await onError(onRenderClientError);\n            if (!isErrorPage)\n                return;\n        }\n        /* We don't abort in order to ensure that onHydrationEnd() is called: we abort only after onHydrationEnd() is called.\n        if (isRenderOutdated(true)) return\n        */\n        // onHydrationEnd()\n        if (isFirstRender && !onRenderClientError) {\n            assertHook(pageContext, 'onHydrationEnd');\n            const hook = getHook(pageContext, 'onHydrationEnd');\n            if (hook) {\n                const { hookFn } = hook;\n                try {\n                    await executeHook(() => hookFn(pageContext), hook, pageContext);\n                }\n                catch (err) {\n                    await onError(err);\n                    if (!isErrorPage)\n                        return;\n                }\n                if (isRenderOutdated(true))\n                    return;\n            }\n        }\n        // We purposely abort *after* onHydrationEnd() is called (see comment above).\n        if (isRenderOutdated(true))\n            return;\n        // onPageTransitionEnd()\n        if (globalObject.isTransitioning) {\n            globalObject.isTransitioning = undefined;\n            assert(previousPageContext);\n            assertHook(previousPageContext, 'onPageTransitionEnd');\n            const hook = getHook(previousPageContext, 'onPageTransitionEnd');\n            if (hook) {\n                const { hookFn } = hook;\n                try {\n                    await executeHook(() => hookFn(pageContext), hook, pageContext);\n                }\n                catch (err) {\n                    await onError(err);\n                    if (!isErrorPage)\n                        return;\n                }\n                if (isRenderOutdated(true))\n                    return;\n            }\n        }\n        if (!scrollTarget && previousPageContext) {\n            const keepScrollPositionPrev = getKeepScrollPositionSetting(previousPageContext);\n            const keepScrollPositionNext = getKeepScrollPositionSetting(pageContext);\n            if (keepScrollPositionNext !== false &&\n                keepScrollPositionPrev !== false &&\n                areKeysEqual(keepScrollPositionNext, keepScrollPositionPrev)) {\n                scrollTarget = { preserveScroll: true };\n            }\n        }\n        // Page scrolling\n        setScrollPosition(scrollTarget);\n        browserNativeScrollRestoration_disable();\n        setInitialRenderIsDone();\n        if (pageContext._hasPageContextFromServer)\n            setPageContextInitIsPassedToClient(pageContext);\n        // Add link prefetch handlers\n        addLinkPrefetchHandlers_watch();\n        addLinkPrefetchHandlers();\n    }\n}\nfunction changeUrl(url, overwriteLastHistoryEntry) {\n    if (getCurrentUrl() === url)\n        return;\n    browserNativeScrollRestoration_disable();\n    pushHistoryState(url, overwriteLastHistoryEntry);\n}\nfunction handleErrorFetchingStaticAssets(err, pageContext, isFirstRender) {\n    if (!isErrorFetchingStaticAssets(err)) {\n        return false;\n    }\n    if (isFirstRender) {\n        disableClientRouting(err, false);\n        // This may happen if the frontend was newly deployed during hydration.\n        // Ideally: re-try a couple of times by reloading the page (not entirely trivial to implement since `localStorage` is needed.)\n        throw err;\n    }\n    else {\n        disableClientRouting(err, true);\n    }\n    redirectHard(pageContext.urlOriginal);\n    return true;\n}\nfunction disableClientRouting(err, log) {\n    assert(isErrorFetchingStaticAssets(err));\n    globalObject.clientRoutingIsDisabled = true;\n    if (log) {\n        // We don't use console.error() to avoid flooding error trackers such as Sentry\n        console.log(err);\n    }\n    // @ts-ignore Since dist/cjs/client/ is never used, we can ignore this error.\n    const isProd = import.meta.env.PROD;\n    assertInfo(false, [\n        'Failed to fetch static asset.',\n        isProd ? 'This usually happens when a new frontend is deployed.' : null,\n        'Falling back to Server Routing.',\n        '(The next page navigation will use Server Routing instead of Client Routing.)'\n    ]\n        .filter(Boolean)\n        .join(' '), { onlyOnce: true });\n}\nfunction getIsRenderOutdated() {\n    const renderNumber = ++globalObject.renderCounter;\n    assert(renderNumber >= 1);\n    let hydrationCanBeAborted = false;\n    const setHydrationCanBeAborted = () => {\n        hydrationCanBeAborted = true;\n    };\n    /** Whether the rendering should be aborted because a new rendering has started. We should call this after each `await`. */\n    const isRenderOutdated = (isRenderCleanup) => {\n        // Never abort first render if `hydrationCanBeAborted` isn't `true`\n        {\n            const isFirstRender = renderNumber === 1;\n            if (isFirstRender && !hydrationCanBeAborted && !isRenderCleanup) {\n                return false;\n            }\n        }\n        // If there is a newer rendering, we should abort all previous renderings\n        return renderNumber !== globalObject.renderCounter;\n    };\n    return {\n        isRenderOutdated,\n        setHydrationCanBeAborted,\n        isFirstRender: renderNumber === 1\n    };\n}\nfunction getRenderCount() {\n    return globalObject.renderCounter;\n}\nfunction getKeepScrollPositionSetting(pageContext) {\n    const c = pageContext.from.configsStandard.keepScrollPosition;\n    if (!c)\n        return false;\n    let val = c.value;\n    const configDefinedAt = c.definedAt;\n    assert(configDefinedAt);\n    const routeParameterList = getRouteStringParameterList(configDefinedAt);\n    if (isCallable(val))\n        val = val(pageContext, {\n            configDefinedAt: c.definedAt\n            /* We don't pass routeParameterList because it's useless: the user knows the parameter list.\n            routeParameterList\n            */\n        });\n    if (val === true) {\n        return [\n            configDefinedAt,\n            ...routeParameterList.map((param) => {\n                const val = pageContext.routeParams[param];\n                assert(val);\n                return val;\n            })\n        ];\n    }\n    // We skip validation and type-cast instead of assertUsage() in order to save client-side KBs\n    return val;\n}\nfunction areKeysEqual(key1, key2) {\n    if (key1 === key2)\n        return true;\n    if (!Array.isArray(key1) || !Array.isArray(key2))\n        return false;\n    return key1.length === key2.length && key1.every((_, i) => key1[i] === key2[i]);\n}\n","export { initOnPopState };\nexport { onPopState };\nimport { assertWarning, getGlobalObject } from './utils.js';\nimport { onPopStateBegin } from './history.js';\nimport { renderPageClientSide } from './renderPageClientSide.js';\nimport { setScrollPosition } from './setScrollPosition.js';\nconst globalObject = getGlobalObject('initOnPopState.ts', { listeners: [] });\nfunction initOnPopState() {\n    // - The popstate event is trigged upon:\n    //   - Back-/forward navigation.\n    //     - By user clicking on his browser's back-/forward navigation (or using a shortcut)\n    //     - By JavaScript: `history.back()` / `history.forward()`\n    //   - URL hash change.\n    //     - Click on `<a href=\"#some-hash\" />`\n    //       - The popstate event is *only* triggered if `href` starts with '#' (even if `href` is '/#some-hash' while the current URL's pathname is '/' then the popstate still isn't triggered)\n    //     - `location.hash = 'some-hash'`\n    // - The `event` argument of `window.addEventListener('popstate', (event) => /*...*/)` is useless: the History API doesn't provide the previous state (the popped state), see https://stackoverflow.com/questions/48055323/is-history-state-always-the-same-as-popstate-event-state\n    window.addEventListener('popstate', async () => {\n        const { isNewState, previous, current } = onPopStateBegin();\n        const scrollTarget = current.state.scrollPosition || undefined;\n        const isUserPushStateNavigation = current.state.triggeredBy === 'user' || previous.state.triggeredBy === 'user';\n        const isHashNavigation = removeHash(current.url) === removeHash(previous.url) && current.url !== previous.url;\n        // - `isNewState === true` when:\n        //   - Click on `<a href=\"#some-hash\" />` (note that Vike's `initOnLinkClick()` handler skips hash links)\n        //   - `location.hash = 'some-hash'`\n        // - `isNewState === false` when `popstate` was triggered by the user clicking on his browser's forward/backward history button.\n        const isHashNavigationNew = isHashNavigation && isNewState;\n        const isBackwardNavigation = !current.state.timestamp || !previous.state.timestamp ? null : current.state.timestamp < previous.state.timestamp;\n        // We have to scroll ourselves because we use `window.history.scrollRestoration = 'manual'`. So far this seems to work. Alternatives in case it doesn't work:\n        // - Alternative: we use `window.history.scrollRestoration = 'auto'`\n        //   - Problem: I don't think it's possbible to set `window.history.scrollRestoration = 'auto'` only for hash navigation and not for non-hash navigations?\n        //   - Problem: inconsistencies between browsers? For example specification says that setting `window.history.scrollRestoration` only affects the current entry in the session history but this contradicts what people are experiencing in practice.\n        //     - Specification: https://html.spec.whatwg.org/multipage/history.html#the-history-interface\n        //     - Practice: https://stackoverflow.com/questions/70188241/history-scrollrestoration-manual-doesnt-prevent-safari-from-restoring-scrol\n        // - Alternative: we completely take over hash navigation and reproduce the browser's native behavior upon hash navigation.\n        //   - By using the `hashchange` event.\n        //   - Problem: conflict if user wants to override the browser's default behavior? E.g. for smooth scrolling, or when using hashes for saving states of some fancy animations.\n        if (isHashNavigation) {\n            if (!isHashNavigationNew) {\n                setScrollPosition(scrollTarget);\n            }\n            else {\n                // The browser already scrolled to `#${hash}` => the current scroll position is the right one => we saved it with `enhanceHistoryState()`.\n            }\n            return;\n        }\n        let doNotRenderIfSamePage = isUserPushStateNavigation;\n        let abort;\n        globalObject.listeners.forEach((listener) => {\n            abort || (abort = listener({ previous }));\n        });\n        if (abort) {\n            return;\n        }\n        if (abort === false) {\n            doNotRenderIfSamePage = false;\n        }\n        await renderPageClientSide({ scrollTarget, isBackwardNavigation, doNotRenderIfSamePage });\n    });\n}\n// TODO/eventually: deprecate this onPopState(listener) function and let the user define +onPopState.js instead?\n/** Control back-/forward navigation.\n *\n * https://vike.dev/onPopState\n */\nfunction onPopState(listener) {\n    assertWarning(false, 'onPopState() is experimental', { onlyOnce: true });\n    globalObject.listeners.push(listener);\n}\nfunction removeHash(url) {\n    return url.split('#')[0];\n}\n","// Code adapted from https://github.com/HenrikJoreteg/internal-nav-helper/blob/5199ec5448d0b0db7ec63cf76d88fa6cad878b7d/src/index.js#L11-L29\nexport { initOnLinkClick };\nimport { assert } from './utils.js';\nimport { skipLink } from './skipLink.js';\nimport { renderPageClientSide } from './renderPageClientSide.js';\nfunction initOnLinkClick() {\n    document.addEventListener('click', handler);\n}\nasync function handler(ev) {\n    if (!isNormalLeftClick(ev))\n        return;\n    const linkTag = findLinkTag(ev.target);\n    if (!linkTag)\n        return;\n    const url = linkTag.getAttribute('href');\n    if (skipLink(linkTag))\n        return;\n    assert(url);\n    ev.preventDefault();\n    let scrollTarget;\n    {\n        const v = linkTag.getAttribute('keep-scroll-position');\n        if (v !== null)\n            scrollTarget = { preserveScroll: v === 'false' ? false : true };\n    }\n    await renderPageClientSide({\n        scrollTarget,\n        urlOriginal: url,\n        isBackwardNavigation: false\n    });\n}\nfunction isNormalLeftClick(ev) {\n    return ev.button === 0 && !ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey;\n}\nfunction findLinkTag(target) {\n    while (target.tagName !== 'A') {\n        const { parentNode } = target;\n        if (!parentNode) {\n            return null;\n        }\n        target = parentNode;\n    }\n    return target;\n}\n","export { initClientRouter };\nimport { assert } from './utils.js';\nimport { getRenderCount, renderPageClientSide } from './renderPageClientSide.js';\nimport { initOnPopState } from './initOnPopState.js';\nimport { initOnLinkClick } from './initOnLinkClick.js';\nimport { setupNativeScrollRestoration } from './scrollRestoration.js';\nimport { autoSaveScrollPosition } from './setScrollPosition.js';\nimport { initLinkPrefetchHandlers } from './prefetch.js';\nasync function initClientRouter() {\n    // Init navigation history and scroll restoration\n    initHistoryAndScroll();\n    // Render/hydrate\n    const renderFirstPagePromise = renderFirstPage();\n    // Intercept <a> clicks\n    initOnLinkClick();\n    // Add <a> prefetch handlers\n    initLinkPrefetchHandlers();\n    // Preserve stack track\n    await renderFirstPagePromise;\n}\nasync function renderFirstPage() {\n    assert(getRenderCount() === 0);\n    await renderPageClientSide({\n        scrollTarget: { preserveScroll: true },\n        isBackwardNavigation: null,\n        isClientSideNavigation: false\n    });\n}\nfunction initHistoryAndScroll() {\n    setupNativeScrollRestoration();\n    autoSaveScrollPosition();\n    // Handle back-/forward navigation\n    initOnPopState();\n}\n","import { assertClientRouting } from '../../utils/assertRoutingType.js';\nassertClientRouting();\nimport './pageFiles';\nimport { initClientRouter } from './initClientRouter.js';\nimport { assertSingleInstance_onClientEntryClientRouting } from './utils.js';\nimport { removeFoucBuster } from '../shared/removeFoucBuster.js';\n// @ts-ignore Since dist/cjs/client/ is never used, we can ignore this error.\nconst isProd = import.meta.env.PROD;\nassertSingleInstance_onClientEntryClientRouting(isProd);\nif (import.meta.env.DEV)\n    removeFoucBuster();\ninitClientRouter();\n"],"file":"assets/entries/entry-client-routing.DNiujVhE.js"}